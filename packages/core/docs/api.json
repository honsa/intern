{
	"id": 0,
	"name": "@theintern/core",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 4606,
			"name": "\"bin/intern\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/bin/intern.ts",
			"children": [
				{
					"id": 4607,
					"name": "printHelp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4608,
							"name": "printHelp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4609,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4610,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/bin/intern.ts",
							"line": 55,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4607
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/bin/intern.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4602,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/index.ts",
			"comment": {
				"shortText": "This is the default public API for Intern. Since most of Intern's public API\nis accessible through the [[lib/executors/Executor.Executor]] classes, this\nmodule simply exports a reference to the global executor instance."
			},
			"children": [
				{
					"id": 4604,
					"name": "__global",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 4605,
							"name": "intern",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isConst": true
							},
							"comment": {
								"shortText": "Intern installs an instance of an Executor subclass (Node in Node.js, or\nBrowser in a browser environment) on a global `intern` constant."
							},
							"sources": [
								{
									"fileName": "packages/core/src/index.ts",
									"line": 18,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeExecutor"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								4605
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/index.ts",
							"line": 13,
							"character": 14
						}
					]
				},
				{
					"id": 4603,
					"name": "intern",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/index.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 3871,
						"name": "Node"
					},
					"defaultValue": "(global.intern = new NodeExecutor())"
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						4604
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4603
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1075,
			"name": "\"lib/BenchmarkSuite\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/BenchmarkSuite.ts",
			"children": [
				{
					"id": 1076,
					"name": "BenchmarkSuite",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "BenchmarkSuite is a specialization of [[lib/Suite]] that manages\n[[lib/BenchmarkTest|BenchmarkTests]]."
					},
					"children": [
						{
							"id": 1080,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1081,
									"name": "new BenchmarkSuite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1082,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1167,
												"name": "BenchmarkSuiteOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1076,
										"name": "BenchmarkSuite"
									},
									"overwrites": {
										"type": "reference",
										"id": 293,
										"name": "Suite.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
									"line": 20,
									"character": 45
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 293,
								"name": "Suite.__constructor"
							}
						},
						{
							"id": 1096,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 68,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "CancelToken"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 285,
								"name": "Suite._cancelToken"
							}
						},
						{
							"id": 1083,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run after all the suite's tests have completed"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 22,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 271,
								"name": "Suite.after"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1158,
								"name": "BenchmarkSuiteProperties.after"
							}
						},
						{
							"id": 1084,
							"name": "afterEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run after each test has completed"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 272,
								"name": "Suite.afterEach"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1159,
								"name": "BenchmarkSuiteProperties.afterEach"
							}
						},
						{
							"id": 1077,
							"name": "afterEachLoop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A function that is run after each test call by benchmark.js"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
									"line": 15,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 1157,
								"name": "BenchmarkSuiteProperties.afterEachLoop"
							}
						},
						{
							"id": 1085,
							"name": "async",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A convenience function that generates and returns a special\n[[lib/Deferred.Deferred]] that can be used for asynchronous testing"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 33,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1086,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1087,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1088,
															"name": "timeout",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 2,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Deferred"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 33,
													"character": 8
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 273,
								"name": "Suite.async"
							}
						},
						{
							"id": 1089,
							"name": "before",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run before any of this suite's tests are\nstarted"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 277,
								"name": "Suite.before"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1161,
								"name": "BenchmarkSuiteProperties.before"
							}
						},
						{
							"id": 1090,
							"name": "beforeEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run before each test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 278,
								"name": "Suite.beforeEach"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1162,
								"name": "BenchmarkSuiteProperties.beforeEach"
							}
						},
						{
							"id": 1078,
							"name": "beforeEachLoop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A function that is run before each test call by benchmark.js"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
									"line": 18,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 1156,
								"name": "BenchmarkSuiteProperties.beforeEachLoop"
							}
						},
						{
							"id": 1091,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The error that caused this suite to fail"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 47,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 279,
								"name": "Suite.error"
							}
						},
						{
							"id": 1092,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This suite's parent Suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 270,
										"name": "Suite"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 280,
								"name": "Suite.parent"
							}
						},
						{
							"id": 1093,
							"name": "publishAfterSetup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, the suite will emit a suiteStart event after the `before`\ncallback has finished, and will emit a suiteEnd event before the `after`\ncallback has finished."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 57,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 281,
								"name": "Suite.publishAfterSetup"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1165,
								"name": "BenchmarkSuiteProperties.publishAfterSetup"
							}
						},
						{
							"id": 1094,
							"name": "skipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The reason why this suite was skipped"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 60,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 282,
								"name": "Suite.skipped"
							}
						},
						{
							"id": 1079,
							"name": "tests",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
									"line": 20,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 612,
											"name": "BenchmarkTest"
										},
										{
											"type": "reference",
											"id": 1076,
											"name": "BenchmarkSuite"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 283,
								"name": "Suite.tests"
							}
						},
						{
							"id": 1095,
							"name": "timeElapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The time required to run all the tests in this suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 66,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 284,
								"name": "Suite.timeElapsed"
							}
						},
						{
							"id": 1097,
							"name": "bail",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
							},
							"getSignature": [
								{
									"id": 1098,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 296,
										"name": "Suite.bail"
									}
								}
							],
							"setSignature": [
								{
									"id": 1099,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
									},
									"parameters": [
										{
											"id": 1100,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 296,
										"name": "Suite.bail"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 104,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 108,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 296,
								"name": "Suite.bail"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1160,
								"name": "BenchmarkSuiteProperties.bail"
							}
						},
						{
							"id": 1101,
							"name": "executor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The executor used to run this Suite."
							},
							"getSignature": [
								{
									"id": 1102,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The executor used to run this Suite."
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 300,
										"name": "Suite.executor"
									}
								}
							],
							"setSignature": [
								{
									"id": 1103,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The executor used to run this Suite."
									},
									"parameters": [
										{
											"id": 1104,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 300,
										"name": "Suite.executor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 115,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 120,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 300,
								"name": "Suite.executor"
							}
						},
						{
							"id": 1105,
							"name": "grep",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A regular expression used to filter, by test ID, which tests are run."
							},
							"getSignature": [
								{
									"id": 1106,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A regular expression used to filter, by test ID, which tests are run."
									},
									"type": {
										"type": "reference",
										"name": "RegExp"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 304,
										"name": "Suite.grep"
									}
								}
							],
							"setSignature": [
								{
									"id": 1107,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A regular expression used to filter, by test ID, which tests are run."
									},
									"parameters": [
										{
											"id": 1108,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "RegExp"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 304,
										"name": "Suite.grep"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 132,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 136,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 304,
								"name": "Suite.grep"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1163,
								"name": "BenchmarkSuiteProperties.grep"
							}
						},
						{
							"id": 1133,
							"name": "hasParent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether or not this suite has a parent (for parity with serialized\nSuites)."
							},
							"getSignature": [
								{
									"id": 1134,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether or not this suite has a parent (for parity with serialized\nSuites)."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 332,
										"name": "Suite.hasParent"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 280,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 332,
								"name": "Suite.hasParent"
							}
						},
						{
							"id": 1113,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the suite, assuming all combinations of suite +\ntest are unique."
							},
							"getSignature": [
								{
									"id": 1114,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the suite, assuming all combinations of suite +\ntest are unique."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 312,
										"name": "Suite.id"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 159,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 312,
								"name": "Suite.id"
							}
						},
						{
							"id": 1109,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This suite's name"
							},
							"getSignature": [
								{
									"id": 1110,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This suite's name"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 308,
										"name": "Suite.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1111,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This suite's name"
									},
									"parameters": [
										{
											"id": 1112,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 308,
										"name": "Suite.name"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 144,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 148,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 308,
								"name": "Suite.name"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1164,
								"name": "BenchmarkSuiteProperties.name"
							}
						},
						{
							"id": 1129,
							"name": "numFailedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite and any sub-suites that\nfailed."
							},
							"getSignature": [
								{
									"id": 1130,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite and any sub-suites that\nfailed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 328,
										"name": "Suite.numFailedTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 250,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 328,
								"name": "Suite.numFailedTests"
							}
						},
						{
							"id": 1127,
							"name": "numPassedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite that passed."
							},
							"getSignature": [
								{
									"id": 1128,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite that passed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 326,
										"name": "Suite.numPassedTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 235,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 326,
								"name": "Suite.numPassedTests"
							}
						},
						{
							"id": 1131,
							"name": "numSkippedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite and any sub-suites that were\nskipped."
							},
							"getSignature": [
								{
									"id": 1132,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite and any sub-suites that were\nskipped."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 330,
										"name": "Suite.numSkippedTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 265,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 330,
								"name": "Suite.numSkippedTests"
							}
						},
						{
							"id": 1125,
							"name": "numTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this suite and any sub-suites. To get only\nthe number of tests for this suite, look at `this.tests.length`."
							},
							"getSignature": [
								{
									"id": 1126,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this suite and any sub-suites. To get only\nthe number of tests for this suite, look at `this.tests.length`."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 324,
										"name": "Suite.numTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 223,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 324,
								"name": "Suite.numTests"
							}
						},
						{
							"id": 1115,
							"name": "parentId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the suite's parent."
							},
							"getSignature": [
								{
									"id": 1116,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the suite's parent."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 314,
										"name": "Suite.parentId"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 173,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 314,
								"name": "Suite.parentId"
							}
						},
						{
							"id": 1117,
							"name": "remote",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
							},
							"getSignature": [
								{
									"id": 1118,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
									},
									"type": {
										"type": "reference",
										"id": 4093,
										"name": "Remote"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 316,
										"name": "Suite.remote"
									}
								}
							],
							"setSignature": [
								{
									"id": 1119,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
									},
									"parameters": [
										{
											"id": 1120,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4093,
												"name": "Remote"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 316,
										"name": "Suite.remote"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 186,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 192,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 316,
								"name": "Suite.remote"
							}
						},
						{
							"id": 1121,
							"name": "sessionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The sessionId of the environment in which the suite executed."
							},
							"getSignature": [
								{
									"id": 1122,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sessionId of the environment in which the suite executed."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 320,
										"name": "Suite.sessionId"
									}
								}
							],
							"setSignature": [
								{
									"id": 1123,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sessionId of the environment in which the suite executed."
									},
									"parameters": [
										{
											"id": 1124,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 320,
										"name": "Suite.sessionId"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 202,
									"character": 15
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 215,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 320,
								"name": "Suite.sessionId"
							}
						},
						{
							"id": 1135,
							"name": "timeout",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1136,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 334,
										"name": "Suite.timeout"
									}
								}
							],
							"setSignature": [
								{
									"id": 1137,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1138,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 334,
										"name": "Suite.timeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 284,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 294,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 334,
								"name": "Suite.timeout"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1166,
								"name": "BenchmarkSuiteProperties.timeout"
							}
						},
						{
							"id": 1139,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1140,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a test or suite to this suite."
									},
									"parameters": [
										{
											"id": 1141,
											"name": "suiteOrTest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 270,
														"name": "Suite"
													},
													{
														"type": "reference",
														"id": 178,
														"name": "Test"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 338,
										"name": "Suite.add"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 301,
									"character": 5
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 338,
								"name": "Suite.add"
							}
						},
						{
							"id": 1142,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1143,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancel this suite if it's in-progress.",
										"text": "This method has no effect if the Suite has finished.\n"
									},
									"parameters": [
										{
											"id": 1144,
											"name": "reason",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 346,
										"name": "Suite.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 357,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 346,
								"name": "Suite.cancel"
							}
						},
						{
							"id": 1145,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1146,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Explicity reset the suite so it may run again"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 349,
										"name": "Suite.reset"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 364,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 349,
								"name": "Suite.reset"
							}
						},
						{
							"id": 1147,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1148,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Runs test suite in order:",
										"text": "* before\n* (for each test)\n  * beforeEach\n  * test\n  * afterEach\n* after\n\nIf before, beforeEach, afterEach, or after throw, the suite itself will\nbe marked as failed and no further tests in the suite will be executed.\n"
									},
									"parameters": [
										{
											"id": 1149,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "CancelToken"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 351,
										"name": "Suite.run"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 383,
									"character": 5
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 351,
								"name": "Suite.run"
							}
						},
						{
							"id": 1150,
							"name": "skip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1151,
									"name": "skip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Skips this suite.",
										"text": "Calling this function will cause all remaining tests in the suite to be\nskipped. If a message was provided, a reporter may report the suite’s\ntests as skipped. Skipped tests are not treated as passing or failing.\n\nIf this method is called from a test function (as this.parent.skip()),\nthe test will be immediately halted, just as if the test’s own skip\nmethod were called.\n"
									},
									"parameters": [
										{
											"id": 1152,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "If provided, will be stored in this suite's `skipped`\nproperty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"suite skipped\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 354,
										"name": "Suite.skip"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 730,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 354,
								"name": "Suite.skip"
							}
						},
						{
							"id": 1153,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1154,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 357,
										"name": "Suite.toJSON"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 737,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 357,
								"name": "Suite.toJSON"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1080
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1096,
								1083,
								1084,
								1077,
								1085,
								1089,
								1090,
								1078,
								1091,
								1092,
								1093,
								1094,
								1079,
								1095
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1097,
								1101,
								1105,
								1133,
								1113,
								1109,
								1129,
								1127,
								1131,
								1125,
								1115,
								1117,
								1121,
								1135
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1139,
								1142,
								1145,
								1147,
								1150,
								1153
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
							"line": 12,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 270,
							"name": "Suite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 368,
							"name": "SuiteProperties"
						},
						{
							"type": "reference",
							"id": 1155,
							"name": "BenchmarkSuiteProperties"
						}
					]
				},
				{
					"id": 1155,
					"name": "BenchmarkSuiteProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1158,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 804,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 369,
								"name": "SuiteProperties.after"
							}
						},
						{
							"id": 1159,
							"name": "afterEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 805,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 370,
								"name": "SuiteProperties.afterEach"
							}
						},
						{
							"id": 1157,
							"name": "afterEachLoop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
									"line": 29,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1160,
							"name": "bail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 806,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 371,
								"name": "SuiteProperties.bail"
							}
						},
						{
							"id": 1161,
							"name": "before",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 807,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 372,
								"name": "SuiteProperties.before"
							}
						},
						{
							"id": 1162,
							"name": "beforeEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 808,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 373,
								"name": "SuiteProperties.beforeEach"
							}
						},
						{
							"id": 1156,
							"name": "beforeEachLoop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
									"line": 28,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1163,
							"name": "grep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 809,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "RegExp"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 374,
								"name": "SuiteProperties.grep"
							}
						},
						{
							"id": 1164,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 810,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 375,
								"name": "SuiteProperties.name"
							}
						},
						{
							"id": 1165,
							"name": "publishAfterSetup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 811,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "SuiteProperties.publishAfterSetup"
							}
						},
						{
							"id": 1166,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 812,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 377,
								"name": "SuiteProperties.timeout"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1158,
								1159,
								1157,
								1160,
								1161,
								1162,
								1156,
								1163,
								1164,
								1165,
								1166
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
							"line": 27,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 368,
							"name": "SuiteProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1076,
							"name": "BenchmarkSuite"
						}
					]
				},
				{
					"id": 1167,
					"name": "BenchmarkSuiteOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
							"line": 32,
							"character": 33
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1155,
										"name": "BenchmarkSuiteProperties"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1168,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1169,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
													"line": 33,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1170,
											"name": "parent",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										},
										{
											"id": 1171,
											"name": "tests",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
													"line": 35,
													"character": 7
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 612,
															"name": "BenchmarkTest"
														},
														{
															"type": "reference",
															"id": 1076,
															"name": "BenchmarkSuite"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1169,
												1170,
												1171
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
											"line": 32,
											"character": 71
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1076
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1155
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1167
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/BenchmarkSuite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 611,
			"name": "\"lib/BenchmarkTest\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/BenchmarkTest.ts",
			"children": [
				{
					"id": 612,
					"name": "BenchmarkTest",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "BenchmarkTest wraps a Benchmark.js Benchmark, mapping its API to that used by\n[[lib/Test]]."
					},
					"children": [
						{
							"id": 615,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 616,
									"name": "new BenchmarkTest",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 617,
											"name": "descriptor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1059,
												"name": "BenchmarkTestOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 612,
										"name": "BenchmarkTest"
									},
									"overwrites": {
										"type": "reference",
										"id": 194,
										"name": "Test.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 31,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 194,
								"name": "Test.__constructor"
							}
						},
						{
							"id": 646,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 46,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "CancelToken"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189,
								"name": "Test._cancelToken"
							}
						},
						{
							"id": 642,
							"name": "_hasPassed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 38,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 185,
								"name": "Test._hasPassed"
							}
						},
						{
							"id": 643,
							"name": "_isAsync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 40,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 186,
								"name": "Test._isAsync"
							}
						},
						{
							"id": 645,
							"name": "_runPromise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 44,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 188,
								"name": "Test._runPromise"
							}
						},
						{
							"id": 647,
							"name": "_timeElapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 48,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 190,
								"name": "Test._timeElapsed"
							}
						},
						{
							"id": 644,
							"name": "_timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 42,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 187,
								"name": "Test._timeout"
							}
						},
						{
							"id": 648,
							"name": "_timer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 54,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 192,
								"name": "Test._timer"
							}
						},
						{
							"id": 649,
							"name": "_usesRemote",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 56,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 193,
								"name": "Test._usesRemote"
							}
						},
						{
							"id": 614,
							"name": "benchmark",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The Benchmark.js test that actually performs benchmarking"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 31,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 725,
								"name": "InternBenchmark"
							}
						},
						{
							"id": 640,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The error that caused this Test to fail"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 33,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 183,
								"name": "Test.error"
							}
						},
						{
							"id": 637,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The name of this test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 21,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 179,
								"name": "Test.name"
							},
							"implementationOf": {
								"type": "reference",
								"id": 247,
								"name": "TestProperties.name"
							}
						},
						{
							"id": 638,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This test's parent Suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 24,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 180,
								"name": "Test.parent"
							},
							"implementationOf": {
								"type": "reference",
								"id": 248,
								"name": "TestProperties.parent"
							}
						},
						{
							"id": 639,
							"name": "skipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If this test was skipped, this will contain a message indicating why"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 27,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 181,
								"name": "Test.skipped"
							},
							"implementationOf": {
								"type": "reference",
								"id": 249,
								"name": "TestProperties.skipped"
							}
						},
						{
							"id": 641,
							"name": "suiteError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite lifecycle error that occurred after executing this Test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 36,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 184,
								"name": "Test.suiteError"
							}
						},
						{
							"id": 613,
							"name": "test",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The test function managed by this test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 28,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 677,
								"name": "BenchmarkTestFunction"
							},
							"overwrites": {
								"type": "reference",
								"id": 182,
								"name": "Test.test"
							},
							"implementationOf": {
								"type": "reference",
								"id": 250,
								"name": "TestProperties.test"
							}
						},
						{
							"id": 650,
							"name": "executor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The executor running this test."
							},
							"getSignature": [
								{
									"id": 651,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The executor running this test."
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 200,
										"name": "Test.executor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 79,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 200,
								"name": "Test.executor"
							}
						},
						{
							"id": 652,
							"name": "hasPassed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "True if the test function completed successfully"
							},
							"getSignature": [
								{
									"id": 653,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "True if the test function completed successfully"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 202,
										"name": "Test.hasPassed"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 86,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 202,
								"name": "Test.hasPassed"
							},
							"implementationOf": {
								"type": "reference",
								"id": 246,
								"name": "TestProperties.hasPassed"
							}
						},
						{
							"id": 654,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the test, assuming all combinations of suite +\ntest are unique."
							},
							"getSignature": [
								{
									"id": 655,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the test, assuming all combinations of suite +\ntest are unique."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 204,
										"name": "Test.id"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 94,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 204,
								"name": "Test.id"
							}
						},
						{
							"id": 656,
							"name": "isAsync",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, this Test's test function is async"
							},
							"getSignature": [
								{
									"id": 657,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "If true, this Test's test function is async"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 206,
										"name": "Test.isAsync"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 108,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 206,
								"name": "Test.isAsync"
							}
						},
						{
							"id": 658,
							"name": "parentId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the test's parent."
							},
							"getSignature": [
								{
									"id": 659,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the test's parent."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 208,
										"name": "Test.parentId"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 115,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 208,
								"name": "Test.parentId"
							}
						},
						{
							"id": 660,
							"name": "remote",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The WebDriver interface for driving a remote environment.",
								"tags": [
									{
										"tag": "see",
										"text": "Suite#remote\n"
									}
								]
							},
							"getSignature": [
								{
									"id": 661,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment.",
										"tags": [
											{
												"tag": "see",
												"text": "Suite#remote\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 4093,
										"name": "Remote"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 210,
										"name": "Test.remote"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 123,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 210,
								"name": "Test.remote"
							}
						},
						{
							"id": 662,
							"name": "sessionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for the test session this Test is running in."
							},
							"getSignature": [
								{
									"id": 663,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "An identifier for the test session this Test is running in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 212,
										"name": "Test.sessionId"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 131,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 212,
								"name": "Test.sessionId"
							}
						},
						{
							"id": 618,
							"name": "timeElapsed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of milliseconds the test function took to complete."
							},
							"getSignature": [
								{
									"id": 619,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The number of milliseconds the test function took to complete."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"id": 214,
										"name": "Test.timeElapsed"
									}
								}
							],
							"setSignature": [
								{
									"id": 620,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The number of milliseconds the test function took to complete."
									},
									"parameters": [
										{
											"id": 621,
											"name": "_value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 214,
										"name": "Test.timeElapsed"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 99,
									"character": 17
								},
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 106,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 214,
								"name": "Test.timeElapsed"
							}
						},
						{
							"id": 664,
							"name": "timeout",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of milliseconds this test can run before it will be cancelled."
							},
							"getSignature": [
								{
									"id": 665,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The number of milliseconds this test can run before it will be cancelled."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216,
										"name": "Test.timeout"
									}
								}
							],
							"setSignature": [
								{
									"id": 666,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The number of milliseconds this test can run before it will be cancelled."
									},
									"parameters": [
										{
											"id": 667,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216,
										"name": "Test.timeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 145,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 155,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216,
								"name": "Test.timeout"
							},
							"implementationOf": {
								"type": "reference",
								"id": 251,
								"name": "TestProperties.timeout"
							}
						},
						{
							"id": 622,
							"name": "async",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 623,
									"name": "async",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 624,
											"name": "_timeout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 625,
											"name": "_numCallsUntilResolution",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Deferred"
									},
									"overwrites": {
										"type": "reference",
										"id": 220,
										"name": "Test.async"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 110,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 220,
								"name": "Test.async"
							}
						},
						{
							"id": 668,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 669,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancel this test if it's in-progress.",
										"text": "This method has no effect if the Test has finished.\n"
									},
									"parameters": [
										{
											"id": 670,
											"name": "reason",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 224,
										"name": "Test.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 206,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 224,
								"name": "Test.cancel"
							}
						},
						{
							"id": 671,
							"name": "restartTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 672,
									"name": "restartTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "During an asynchronous test run, restarts the timeout timer."
									},
									"parameters": [
										{
											"id": 673,
											"name": "timeout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 227,
										"name": "Test.restartTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 213,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 227,
								"name": "Test.restartTimeout"
							}
						},
						{
							"id": 626,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 627,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 230,
										"name": "Test.run"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 117,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 230,
								"name": "Test.run"
							}
						},
						{
							"id": 674,
							"name": "skip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 675,
									"name": "skip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Skips this test.",
										"text": "Calling this function will cause a test to halt immediately. If a message\nwas provided, a reporter may report the test as skipped. Skipped tests\nare not treated as passing or failing.\n"
									},
									"parameters": [
										{
											"id": 676,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "If provided, will be stored in this test's `skipped`\nproperty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"skipped\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 233,
										"name": "Test.skip"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 352,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 233,
								"name": "Test.skip"
							}
						},
						{
							"id": 628,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 629,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 630,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 631,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 632,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 236,
										"name": "Test.toJSON"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 166,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 236,
								"name": "Test.toJSON"
							}
						},
						{
							"id": 633,
							"name": "async",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 634,
									"name": "async",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 635,
											"name": "testFunction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 684,
												"name": "BenchmarkDeferredTestFunction"
											}
										},
										{
											"id": 636,
											"name": "numCallsUntilResolution",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 677,
										"name": "BenchmarkTestFunction"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 179,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								615
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								646,
								642,
								643,
								645,
								647,
								644,
								648,
								649,
								614,
								640,
								637,
								638,
								639,
								641,
								613
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								650,
								652,
								654,
								656,
								658,
								660,
								662,
								618,
								664
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								622,
								668,
								671,
								626,
								674,
								628,
								633
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 26,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 178,
							"name": "Test"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 245,
							"name": "TestProperties"
						}
					]
				},
				{
					"id": 684,
					"name": "BenchmarkDeferredTestFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 685,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 686,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 612,
										"name": "BenchmarkTest"
									}
								},
								{
									"id": 687,
									"name": "deferred",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 2,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Deferred"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						},
						{
							"id": 689,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 690,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 612,
										"name": "BenchmarkTest"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						},
						{
							"id": 691,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 692,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								},
								{
									"id": 693,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 688,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 199,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 703,
								"name": "BenchmarkOptions"
							},
							"overwrites": {
								"type": "reference",
								"id": 680,
								"name": "BenchmarkTestFunction.options"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								688
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 197,
							"character": 46
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 677,
							"name": "BenchmarkTestFunction"
						}
					]
				},
				{
					"id": 703,
					"name": "BenchmarkOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 706,
							"name": "async",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 65,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 706,
								"name": "Options.async"
							}
						},
						{
							"id": 707,
							"name": "defer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 66,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 707,
								"name": "Options.defer"
							}
						},
						{
							"id": 708,
							"name": "delay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 67,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 708,
								"name": "Options.delay"
							}
						},
						{
							"id": 723,
							"name": "fn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 82,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 723,
								"name": "Options.fn"
							}
						},
						{
							"id": 709,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 68,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 709,
								"name": "Options.id"
							}
						},
						{
							"id": 710,
							"name": "initCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 69,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 710,
								"name": "Options.initCount"
							}
						},
						{
							"id": 711,
							"name": "maxTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 70,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 711,
								"name": "Options.maxTime"
							}
						},
						{
							"id": 712,
							"name": "minSamples",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 71,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 712,
								"name": "Options.minSamples"
							}
						},
						{
							"id": 713,
							"name": "minTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 72,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 713,
								"name": "Options.minTime"
							}
						},
						{
							"id": 714,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 73,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 714,
								"name": "Options.name"
							}
						},
						{
							"id": 705,
							"name": "numCallsUntilResolution",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 216,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 715,
							"name": "onAbort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 74,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 715,
								"name": "Options.onAbort"
							}
						},
						{
							"id": 716,
							"name": "onComplete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 716,
								"name": "Options.onComplete"
							}
						},
						{
							"id": 717,
							"name": "onCycle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 76,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 717,
								"name": "Options.onCycle"
							}
						},
						{
							"id": 718,
							"name": "onError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 77,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 718,
								"name": "Options.onError"
							}
						},
						{
							"id": 719,
							"name": "onReset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 719,
								"name": "Options.onReset"
							}
						},
						{
							"id": 720,
							"name": "onStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 79,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 720,
								"name": "Options.onStart"
							}
						},
						{
							"id": 724,
							"name": "queued",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 83,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 724,
								"name": "Options.queued"
							}
						},
						{
							"id": 721,
							"name": "setup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 80,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 721,
								"name": "Options.setup"
							}
						},
						{
							"id": 704,
							"name": "skip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 215,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 722,
							"name": "teardown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 81,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 722,
								"name": "Options.teardown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								706,
								707,
								708,
								723,
								709,
								710,
								711,
								712,
								713,
								714,
								705,
								715,
								716,
								717,
								718,
								719,
								720,
								724,
								721,
								704,
								722
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 214,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 884,
							"name": "Options"
						}
					]
				},
				{
					"id": 677,
					"name": "BenchmarkTestFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 678,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 679,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 612,
										"name": "BenchmarkTest"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						},
						{
							"id": 681,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 682,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								},
								{
									"id": 683,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 680,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 194,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 703,
								"name": "BenchmarkOptions"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								680
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 192,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 241,
							"name": "TestFunction"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 684,
							"name": "BenchmarkDeferredTestFunction"
						}
					]
				},
				{
					"id": 694,
					"name": "BenchmarkTestProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 698,
							"name": "hasPassed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 418,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 246,
								"name": "TestProperties.hasPassed"
							}
						},
						{
							"id": 699,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 419,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 247,
								"name": "TestProperties.name"
							}
						},
						{
							"id": 697,
							"name": "numCallsUntilResolution",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 205,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 700,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 248,
								"name": "TestProperties.parent"
							}
						},
						{
							"id": 696,
							"name": "skip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 204,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 701,
							"name": "skipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 421,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 249,
								"name": "TestProperties.skipped"
							}
						},
						{
							"id": 695,
							"name": "test",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 203,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 677,
								"name": "BenchmarkTestFunction"
							},
							"overwrites": {
								"type": "reference",
								"id": 250,
								"name": "TestProperties.test"
							}
						},
						{
							"id": 702,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 423,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 251,
								"name": "TestProperties.timeout"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								698,
								699,
								697,
								700,
								696,
								701,
								695,
								702
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 202,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 245,
							"name": "TestProperties"
						}
					]
				},
				{
					"id": 725,
					"name": "InternBenchmark",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 941,
							"name": "Deferred",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 942,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 943,
											"name": "new Deferred",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 944,
													"name": "clone",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Benchmark"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 941,
												"name": "Deferred"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 130,
											"character": 27
										}
									]
								},
								{
									"id": 945,
									"name": "benchmark",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 133,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "Benchmark"
									}
								},
								{
									"id": 946,
									"name": "cycles",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 134,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 947,
									"name": "elapsed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 135,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 948,
									"name": "timeStamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 136,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										942
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										945,
										946,
										947,
										948
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 130,
									"character": 25
								}
							]
						},
						{
							"id": 949,
							"name": "Event",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 950,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 951,
											"name": "new Event",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 952,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Object"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 949,
												"name": "Event"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 139,
											"character": 24
										}
									]
								},
								{
									"id": 953,
									"name": "aborted",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 142,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 954,
									"name": "cancelled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 143,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 955,
									"name": "currentTarget",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 144,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 956,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 145,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 957,
									"name": "target",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 146,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 958,
									"name": "timeStamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 147,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 959,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 148,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										950
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										953,
										954,
										955,
										956,
										957,
										958,
										959
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 139,
									"character": 22
								}
							]
						},
						{
							"id": 960,
							"name": "Suite",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 964,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 965,
											"name": "new Suite",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 966,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 967,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 884,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 152,
											"character": 41
										}
									]
								},
								{
									"id": 968,
									"name": "aborted",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 156,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 969,
									"name": "length",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 157,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 970,
									"name": "running",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 158,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 961,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 152,
											"character": 22
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 962,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 963,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
															"line": 152,
															"character": 30
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														963
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
													"line": 152,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 971,
									"name": "abort",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 972,
											"name": "abort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 159,
											"character": 13
										}
									]
								},
								{
									"id": 973,
									"name": "add",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 974,
											"name": "add",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 975,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 976,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "Function"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 977,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 884,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										},
										{
											"id": 978,
											"name": "add",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 979,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "Function"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 980,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 884,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										},
										{
											"id": 981,
											"name": "add",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 982,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 983,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 884,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										},
										{
											"id": 984,
											"name": "add",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 985,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 884,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 160,
											"character": 11
										},
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 161,
											"character": 11
										},
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 162,
											"character": 11
										},
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 163,
											"character": 11
										}
									]
								},
								{
									"id": 986,
									"name": "clone",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 987,
											"name": "clone",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 988,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 884,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 164,
											"character": 13
										}
									]
								},
								{
									"id": 989,
									"name": "emit",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 990,
											"name": "emit",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 991,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Object"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 165,
											"character": 12
										}
									]
								},
								{
									"id": 992,
									"name": "filter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 993,
											"name": "filter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 994,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "Function"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 166,
											"character": 14
										}
									]
								},
								{
									"id": 995,
									"name": "forEach",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 996,
											"name": "forEach",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 997,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 167,
											"character": 15
										}
									]
								},
								{
									"id": 998,
									"name": "indexOf",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 999,
											"name": "indexOf",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1000,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 168,
											"character": 15
										}
									]
								},
								{
									"id": 1001,
									"name": "invoke",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1002,
											"name": "invoke",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1003,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1004,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 169,
											"character": 14
										}
									]
								},
								{
									"id": 1005,
									"name": "join",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1006,
											"name": "join",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1007,
													"name": "separator",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 170,
											"character": 12
										}
									]
								},
								{
									"id": 1008,
									"name": "listeners",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1009,
											"name": "listeners",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1010,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Function"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 171,
											"character": 17
										}
									]
								},
								{
									"id": 1011,
									"name": "map",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1012,
											"name": "map",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1013,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 172,
											"character": 11
										}
									]
								},
								{
									"id": 1014,
									"name": "off",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1015,
											"name": "off",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1016,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 1017,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										},
										{
											"id": 1018,
											"name": "off",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1019,
													"name": "types",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 173,
											"character": 11
										},
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 174,
											"character": 11
										}
									]
								},
								{
									"id": 1020,
									"name": "on",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1021,
											"name": "on",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1022,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 1023,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										},
										{
											"id": 1024,
											"name": "on",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1025,
													"name": "types",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 175,
											"character": 10
										},
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 176,
											"character": 10
										}
									]
								},
								{
									"id": 1026,
									"name": "pluck",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1027,
											"name": "pluck",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1028,
													"name": "property",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 177,
											"character": 13
										}
									]
								},
								{
									"id": 1029,
									"name": "pop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1030,
											"name": "pop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 178,
											"character": 11
										}
									]
								},
								{
									"id": 1031,
									"name": "push",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1032,
											"name": "push",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1033,
													"name": "benchmark",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Benchmark"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 179,
											"character": 12
										}
									]
								},
								{
									"id": 1034,
									"name": "reduce",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1035,
											"name": "reduce",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"typeParameter": [
												{
													"id": 1036,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExported": true
													}
												}
											],
											"parameters": [
												{
													"id": 1037,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												},
												{
													"id": 1038,
													"name": "accumulator",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 180,
											"character": 14
										}
									]
								},
								{
									"id": 1039,
									"name": "reset",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1040,
											"name": "reset",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 181,
											"character": 13
										}
									]
								},
								{
									"id": 1041,
									"name": "reverse",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1042,
											"name": "reverse",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 182,
											"character": 15
										}
									]
								},
								{
									"id": 1043,
									"name": "run",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1044,
											"name": "run",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1045,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 884,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 960,
												"name": "Suite"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 183,
											"character": 11
										}
									]
								},
								{
									"id": 1046,
									"name": "shift",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1047,
											"name": "shift",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Benchmark"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 184,
											"character": 13
										}
									]
								},
								{
									"id": 1048,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1049,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1050,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1051,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 1052,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1053,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1054,
													"name": "deleteCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1055,
													"name": "values",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 185,
											"character": 13
										},
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 186,
											"character": 13
										}
									]
								},
								{
									"id": 1056,
									"name": "unshift",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1057,
											"name": "unshift",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1058,
													"name": "benchmark",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Benchmark"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 187,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										964
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										968,
										969,
										970,
										961
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										971,
										973,
										986,
										989,
										992,
										995,
										998,
										1001,
										1005,
										1008,
										1011,
										1014,
										1020,
										1026,
										1029,
										1031,
										1034,
										1039,
										1041,
										1043,
										1046,
										1048,
										1056
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 151,
									"character": 22
								}
							]
						},
						{
							"id": 884,
							"name": "Options",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 885,
									"name": "async",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 65,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								},
								{
									"id": 886,
									"name": "defer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 66,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								},
								{
									"id": 887,
									"name": "delay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 67,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 902,
									"name": "fn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 82,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Function"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 888,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 68,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 889,
									"name": "initCount",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 69,
											"character": 17
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 890,
									"name": "maxTime",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 70,
											"character": 15
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 891,
									"name": "minSamples",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 71,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 892,
									"name": "minTime",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 72,
											"character": 15
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 893,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 73,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 894,
									"name": "onAbort",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 74,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								},
								{
									"id": 895,
									"name": "onComplete",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 75,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								},
								{
									"id": 896,
									"name": "onCycle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 76,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								},
								{
									"id": 897,
									"name": "onError",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 77,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								},
								{
									"id": 898,
									"name": "onReset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 78,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								},
								{
									"id": 899,
									"name": "onStart",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 79,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								},
								{
									"id": 903,
									"name": "queued",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 83,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								},
								{
									"id": 900,
									"name": "setup",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 80,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Function"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 901,
									"name": "teardown",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 81,
											"character": 16
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Function"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										885,
										886,
										887,
										902,
										888,
										889,
										890,
										891,
										892,
										893,
										894,
										895,
										896,
										897,
										898,
										899,
										903,
										900,
										901
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 64,
									"character": 28
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 703,
									"name": "BenchmarkOptions"
								}
							]
						},
						{
							"id": 904,
							"name": "Platform",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 905,
									"name": "description",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 87,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 906,
									"name": "layout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 88,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 907,
									"name": "manufacturer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 89,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 908,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 90,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 909,
									"name": "os",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 91,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 910,
									"name": "prerelease",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 92,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 911,
									"name": "product",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 93,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 912,
									"name": "version",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 94,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 913,
									"name": "toString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 914,
											"name": "toString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 95,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										905,
										906,
										907,
										908,
										909,
										910,
										911,
										912
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										913
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 86,
									"character": 29
								}
							]
						},
						{
							"id": 928,
							"name": "Stats",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 929,
									"name": "deviation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 114,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 930,
									"name": "mean",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 115,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 931,
									"name": "moe",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 116,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 932,
									"name": "rme",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 117,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 933,
									"name": "sample",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 118,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 934,
									"name": "sem",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 119,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 935,
									"name": "variance",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 120,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										929,
										930,
										931,
										932,
										933,
										934,
										935
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 113,
									"character": 26
								}
							]
						},
						{
							"id": 915,
							"name": "Support",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 916,
									"name": "air",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 99,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 917,
									"name": "argumentsClass",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 100,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 918,
									"name": "browser",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 101,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 919,
									"name": "charByIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 102,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 920,
									"name": "charByOwnIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 103,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 921,
									"name": "decompilation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 104,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 922,
									"name": "descriptors",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 105,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 923,
									"name": "getAllKeys",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 106,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 924,
									"name": "iteratesOwnFirst",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 107,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 925,
									"name": "java",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 108,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 926,
									"name": "nodeClass",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 109,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 927,
									"name": "timeout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 110,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										916,
										917,
										918,
										919,
										920,
										921,
										922,
										923,
										924,
										925,
										926,
										927
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 98,
									"character": 28
								}
							]
						},
						{
							"id": 936,
							"name": "Times",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 937,
									"name": "cycle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 124,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 938,
									"name": "elapsed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 125,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 939,
									"name": "period",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 126,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 940,
									"name": "timeStamp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
											"line": 127,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										937,
										938,
										939,
										940
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 123,
									"character": 26
								}
							]
						},
						{
							"id": 826,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 827,
									"name": "new InternBenchmark",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 828,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Function"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 829,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Benchmark.Options"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 725,
										"name": "InternBenchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 826,
										"name": "Benchmark.__constructor"
									}
								},
								{
									"id": 830,
									"name": "new InternBenchmark",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 831,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 832,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Function"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 833,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Benchmark.Options"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 725,
										"name": "InternBenchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 826,
										"name": "Benchmark.__constructor"
									}
								},
								{
									"id": 834,
									"name": "new InternBenchmark",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 835,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 836,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Benchmark.Options"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 725,
										"name": "InternBenchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 826,
										"name": "Benchmark.__constructor"
									}
								},
								{
									"id": 837,
									"name": "new InternBenchmark",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 838,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 884,
												"name": "Options"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 725,
										"name": "InternBenchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 826,
										"name": "Benchmark.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 28,
									"character": 27
								},
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 30,
									"character": 68
								},
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 31,
									"character": 82
								},
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 32,
									"character": 59
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 826,
								"name": "Benchmark.__constructor"
							}
						},
						{
							"id": 839,
							"name": "aborted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 35,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 839,
								"name": "Benchmark.aborted"
							}
						},
						{
							"id": 840,
							"name": "compiled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 36,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 840,
								"name": "Benchmark.compiled"
							}
						},
						{
							"id": 841,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 37,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 841,
								"name": "Benchmark.count"
							}
						},
						{
							"id": 842,
							"name": "cycles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 38,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 842,
								"name": "Benchmark.cycles"
							}
						},
						{
							"id": 843,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 39,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Error"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 843,
								"name": "Benchmark.error"
							}
						},
						{
							"id": 844,
							"name": "fn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 40,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 844,
								"name": "Benchmark.fn"
							}
						},
						{
							"id": 845,
							"name": "hz",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 41,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 845,
								"name": "Benchmark.hz"
							}
						},
						{
							"id": 726,
							"name": "internTest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/BenchmarkTest.ts",
									"line": 220,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 612,
								"name": "BenchmarkTest"
							}
						},
						{
							"id": 846,
							"name": "running",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 42,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 846,
								"name": "Benchmark.running"
							}
						},
						{
							"id": 847,
							"name": "setup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 43,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 847,
								"name": "Benchmark.setup"
							}
						},
						{
							"id": 849,
							"name": "stats",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 46,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 928,
								"name": "Stats"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 849,
								"name": "Benchmark.stats"
							}
						},
						{
							"id": 848,
							"name": "teardown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 848,
								"name": "Benchmark.teardown"
							}
						},
						{
							"id": 850,
							"name": "times",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 936,
								"name": "Times"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 850,
								"name": "Benchmark.times"
							}
						},
						{
							"id": 822,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 25,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 884,
								"name": "Options"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 822,
								"name": "Benchmark.options"
							}
						},
						{
							"id": 823,
							"name": "platform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 26,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 904,
								"name": "Platform"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 823,
								"name": "Benchmark.platform"
							}
						},
						{
							"id": 824,
							"name": "support",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 27,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 915,
								"name": "Support"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 824,
								"name": "Benchmark.support"
							}
						},
						{
							"id": 825,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 28,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 825,
								"name": "Benchmark.version"
							}
						},
						{
							"id": 851,
							"name": "abort",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 852,
									"name": "abort",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 851,
										"name": "Benchmark.abort"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 49,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 851,
								"name": "Benchmark.abort"
							}
						},
						{
							"id": 853,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 854,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 855,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 884,
												"name": "Options"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 853,
										"name": "Benchmark.clone"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 50,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 853,
								"name": "Benchmark.clone"
							}
						},
						{
							"id": 856,
							"name": "compare",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 857,
									"name": "compare",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 858,
											"name": "benchmark",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Benchmark"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 856,
										"name": "Benchmark.compare"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 51,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 856,
								"name": "Benchmark.compare"
							}
						},
						{
							"id": 859,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 860,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 861,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Object"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 859,
										"name": "Benchmark.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 52,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 859,
								"name": "Benchmark.emit"
							}
						},
						{
							"id": 862,
							"name": "listeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 863,
									"name": "listeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 864,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 862,
										"name": "Benchmark.listeners"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 53,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 862,
								"name": "Benchmark.listeners"
							}
						},
						{
							"id": 865,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 866,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 867,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 868,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 865,
										"name": "Benchmark.off"
									}
								},
								{
									"id": 869,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 870,
											"name": "types",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 865,
										"name": "Benchmark.off"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 54,
									"character": 7
								},
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 55,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 865,
								"name": "Benchmark.off"
							}
						},
						{
							"id": 871,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 872,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 873,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 874,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 871,
										"name": "Benchmark.on"
									}
								},
								{
									"id": 875,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 876,
											"name": "types",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 871,
										"name": "Benchmark.on"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 56,
									"character": 6
								},
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 57,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 871,
								"name": "Benchmark.on"
							}
						},
						{
							"id": 877,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 878,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 877,
										"name": "Benchmark.reset"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 58,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 877,
								"name": "Benchmark.reset"
							}
						},
						{
							"id": 879,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 880,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 881,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Benchmark.Options"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Benchmark"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 879,
										"name": "Benchmark.run"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 59,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 879,
								"name": "Benchmark.run"
							}
						},
						{
							"id": 882,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 883,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 882,
										"name": "Benchmark.toString"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 60,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 882,
								"name": "Benchmark.toString"
							}
						},
						{
							"id": 727,
							"name": "deepClone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 728,
									"name": "deepClone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 729,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 730,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 727,
										"name": "Benchmark.deepClone"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 8,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 727,
								"name": "Benchmark.deepClone"
							}
						},
						{
							"id": 731,
							"name": "each",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 732,
									"name": "each",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 733,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												]
											}
										},
										{
											"id": 734,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 735,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 731,
										"name": "Benchmark.each"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 9,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 731,
								"name": "Benchmark.each"
							}
						},
						{
							"id": 736,
							"name": "extend",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 737,
									"name": "extend",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 738,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 739,
											"name": "sources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Object"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Object"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 736,
										"name": "Benchmark.extend"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 10,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 736,
								"name": "Benchmark.extend"
							}
						},
						{
							"id": 740,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 741,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 742,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 743,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 744,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 745,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 746,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 747,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
															"line": 11,
															"character": 40
														}
													]
												}
											}
										},
										{
											"id": 748,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 740,
										"name": "Benchmark.filter"
									}
								},
								{
									"id": 749,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 750,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 751,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 752,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 753,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 740,
										"name": "Benchmark.filter"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 11,
									"character": 17
								},
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 12,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 740,
								"name": "Benchmark.filter"
							}
						},
						{
							"id": 754,
							"name": "forEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 755,
									"name": "forEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 756,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 757,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 758,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 759,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 760,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 761,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
															"line": 13,
															"character": 41
														}
													]
												}
											}
										},
										{
											"id": 762,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 754,
										"name": "Benchmark.forEach"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 13,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 754,
								"name": "Benchmark.forEach"
							}
						},
						{
							"id": 766,
							"name": "forOwn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 767,
									"name": "forOwn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 768,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 769,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 770,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 766,
										"name": "Benchmark.forOwn"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 15,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 766,
								"name": "Benchmark.forOwn"
							}
						},
						{
							"id": 763,
							"name": "formatNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 764,
									"name": "formatNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 765,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 763,
										"name": "Benchmark.formatNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 14,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 763,
								"name": "Benchmark.formatNumber"
							}
						},
						{
							"id": 771,
							"name": "hasKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 772,
									"name": "hasKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 773,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 774,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 771,
										"name": "Benchmark.hasKey"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 16,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 771,
								"name": "Benchmark.hasKey"
							}
						},
						{
							"id": 775,
							"name": "indexOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 776,
									"name": "indexOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 777,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 778,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 779,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										},
										{
											"id": 780,
											"name": "fromIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 775,
										"name": "Benchmark.indexOf"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 17,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 775,
								"name": "Benchmark.indexOf"
							}
						},
						{
							"id": 781,
							"name": "interpolate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 782,
									"name": "interpolate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 783,
											"name": "template",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 784,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 781,
										"name": "Benchmark.interpolate"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 18,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 781,
								"name": "Benchmark.interpolate"
							}
						},
						{
							"id": 785,
							"name": "invoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 786,
									"name": "invoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 787,
											"name": "benches",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Benchmark"
												}
											}
										},
										{
											"id": 788,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Object"
													}
												]
											}
										},
										{
											"id": 789,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 785,
										"name": "Benchmark.invoke"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 19,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 785,
								"name": "Benchmark.invoke"
							}
						},
						{
							"id": 790,
							"name": "join",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 791,
									"name": "join",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 792,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 793,
											"name": "separator1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 794,
											"name": "separator2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 790,
										"name": "Benchmark.join"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 20,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 790,
								"name": "Benchmark.join"
							}
						},
						{
							"id": 795,
							"name": "map",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 796,
									"name": "map",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 797,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 798,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 799,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 800,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 801,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 802,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 803,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														}
													],
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
															"line": 21,
															"character": 40
														}
													]
												}
											}
										},
										{
											"id": 804,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 795,
										"name": "Benchmark.map"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 21,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 795,
								"name": "Benchmark.map"
							}
						},
						{
							"id": 805,
							"name": "pluck",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 806,
									"name": "pluck",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 807,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 808,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 809,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 810,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 805,
										"name": "Benchmark.pluck"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 22,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 805,
								"name": "Benchmark.pluck"
							}
						},
						{
							"id": 811,
							"name": "reduce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 812,
									"name": "reduce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 813,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 814,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 815,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 816,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 817,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 818,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 819,
																	"name": "accumulator",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "typeParameter",
																		"name": "K"
																	}
																},
																{
																	"id": 820,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														}
													],
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
															"line": 23,
															"character": 43
														}
													]
												}
											}
										},
										{
											"id": 821,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "K"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 811,
										"name": "Benchmark.reduce"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/benchmark@1.0.31/node_modules/@types/benchmark/index.d.ts",
									"line": 23,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 811,
								"name": "Benchmark.reduce"
							}
						}
					],
					"groups": [
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								941,
								949,
								960
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								884,
								904,
								928,
								915,
								936
							]
						},
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								826
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								839,
								840,
								841,
								842,
								843,
								844,
								845,
								726,
								846,
								847,
								849,
								848,
								850,
								822,
								823,
								824,
								825
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								851,
								853,
								856,
								859,
								862,
								865,
								871,
								877,
								879,
								882,
								727,
								731,
								736,
								740,
								754,
								766,
								763,
								771,
								775,
								781,
								785,
								790,
								795,
								805,
								811
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 219,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Benchmark"
						}
					]
				},
				{
					"id": 1059,
					"name": "BenchmarkTestOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 208,
							"character": 32
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 694,
										"name": "BenchmarkTestProperties"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1060,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1061,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/BenchmarkTest.ts",
													"line": 209,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1063,
											"name": "options",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/BenchmarkTest.ts",
													"line": 211,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 703,
												"name": "BenchmarkOptions"
											}
										},
										{
											"id": 1062,
											"name": "test",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/BenchmarkTest.ts",
													"line": 210,
													"character": 6
												}
											],
											"type": {
												"type": "reference",
												"id": 677,
												"name": "BenchmarkTestFunction"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1061,
												1063,
												1062
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/BenchmarkTest.ts",
											"line": 208,
											"character": 69
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1070,
					"name": "createDeferred",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1071,
							"name": "createDeferred",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1072,
									"name": "benchmark",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Benchmark"
									}
								},
								{
									"id": 1073,
									"name": "deferred",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Deferred"
									}
								},
								{
									"id": 1074,
									"name": "numCallsUntilResolution",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Deferred"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 252,
							"character": 23
						}
					]
				},
				{
					"id": 1067,
					"name": "createLifecycle",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 1068,
							"name": "createLifecycle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1069,
									"name": "before",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 227,
							"character": 21
						}
					]
				},
				{
					"id": 1064,
					"name": "isBenchmarkTest",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1065,
							"name": "isBenchmarkTest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1066,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "BenchmarkTest"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/BenchmarkTest.ts",
							"line": 223,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						612
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						684,
						703,
						677,
						694,
						725
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1059
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1070,
						1067,
						1064
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/BenchmarkTest.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4705,
			"name": "\"lib/Channel\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/Channel.ts",
			"children": [
				{
					"id": 4706,
					"name": "Channel",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4710,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4711,
									"name": "new Channel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4712,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3455,
												"name": "ChannelOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4706,
										"name": "Channel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Channel.ts",
									"line": 12,
									"character": 39
								}
							]
						},
						{
							"id": 4707,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Channel.ts",
									"line": 9,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3455,
								"name": "ChannelOptions"
							}
						},
						{
							"id": 4717,
							"name": "_initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4718,
									"name": "_initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Channel.ts",
									"line": 24,
									"character": 23
								}
							]
						},
						{
							"id": 4713,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4714,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4715,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 2789,
													"name": "RemoteEvents"
												}
											}
										},
										{
											"id": 4716,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Channel.ts",
									"line": 18,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4710
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4707
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4717,
								4713
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Channel.ts",
							"line": 8,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4706
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/Channel.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"lib/Deferred\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/Deferred.ts",
			"children": [
				{
					"id": 2,
					"name": "Deferred",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 3,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"children": [
						{
							"id": 14,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 15,
									"name": "new Deferred",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 16,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "CancelToken"
											}
										},
										{
											"id": 17,
											"name": "numCallsUntilReslution",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"name": "Deferred"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Deferred.ts",
									"line": 8,
									"character": 31
								}
							]
						},
						{
							"id": 13,
							"name": "promise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Deferred.ts",
									"line": 8,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 18,
							"name": "callback",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 19,
									"name": "callback",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Wraps any callback to resolve the deferred so long as the callback\nexecutes without throwing any Errors."
									},
									"parameters": [
										{
											"id": 20,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Deferred.ts",
									"line": 27,
									"character": 10
								}
							]
						},
						{
							"id": 27,
							"name": "reject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 28,
									"name": "reject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 29,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Deferred.ts",
									"line": 64,
									"character": 8
								}
							]
						},
						{
							"id": 21,
							"name": "rejectOnError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 22,
									"name": "rejectOnError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Wraps a callback to reject the deferred if the callback throws an Error."
									},
									"parameters": [
										{
											"id": 23,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Deferred.ts",
									"line": 39,
									"character": 15
								}
							]
						},
						{
							"id": 24,
							"name": "resolve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 25,
									"name": "resolve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 26,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Deferred.ts",
									"line": 50,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								14
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								13
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								18,
								27,
								21,
								24
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Deferred.ts",
							"line": 3,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/Deferred.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1748,
			"name": "\"lib/Environment\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/Environment.ts",
			"children": [
				{
					"id": 1749,
					"name": "Environment",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1758,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1759,
									"name": "new Environment",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1760,
											"name": "kwArgs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1761,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"indexSignature": [
														{
															"id": 1762,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 1763,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/Environment.ts",
															"line": 11,
															"character": 21
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1749,
										"name": "Environment"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 9,
									"character": 18
								}
							]
						},
						{
							"id": 1750,
							"name": "browser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 2,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1751,
							"name": "browserName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 3,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1752,
							"name": "browserVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 4,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1757,
							"name": "device",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1754,
							"name": "platform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 6,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1755,
							"name": "platformName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 7,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1756,
							"name": "platformVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 8,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1753,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1764,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1765,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Environment.ts",
									"line": 18,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1758
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1750,
								1751,
								1752,
								1757,
								1754,
								1755,
								1756,
								1753
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1764
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Environment.ts",
							"line": 1,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1749
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/Environment.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1873,
			"name": "\"lib/ProxiedSession\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/ProxiedSession.ts",
			"children": [
				{
					"id": 1874,
					"name": "ProxiedSession",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A ProxiedSession object represents a WebDriver session that interacts with\nthe Intern instrumenting server. It collects code instrumentation data from\npages and converts local filesystem paths into URLs for use with\n`leadfoot/Session#get`."
					},
					"children": [
						{
							"id": 1893,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Session represents a connection to a remote environment that can be\ndriven programmatically."
							},
							"signatures": [
								{
									"id": 1894,
									"name": "new ProxiedSession",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A Session represents a connection to a remote environment that can be\ndriven programmatically."
									},
									"parameters": [
										{
											"id": 1895,
											"name": "sessionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The ID of the session, as provided by the remote."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1896,
											"name": "server",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The server that the session belongs to."
											},
											"type": {
												"type": "reference",
												"name": "Server"
											}
										},
										{
											"id": 1897,
											"name": "capabilities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "A map of bugs and features that the remote\nenvironment exposes.\n"
											},
											"type": {
												"type": "reference",
												"name": "Capabilities"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1874,
										"name": "ProxiedSession"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1893,
										"name": "Session.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 20,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "Session.__constructor"
							}
						},
						{
							"id": 1875,
							"name": "baseUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The base URL for relative URLs."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 1876,
							"name": "coverageVariable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The name of the global variable used to store coverage data."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 27,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 1877,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The Executor hosting this session."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 32,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							}
						},
						{
							"id": 1898,
							"name": "capabilities",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Information about the available features and bugs in the remote\nenvironment."
							},
							"getSignature": [
								{
									"id": 1899,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Information about the available features and bugs in the remote\nenvironment."
									},
									"type": {
										"type": "reference",
										"name": "Capabilities"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1898,
										"name": "Session.capabilities"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 35,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "Session.capabilities"
							}
						},
						{
							"id": 1881,
							"name": "coverageEnabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1882,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 36,
									"character": 21
								}
							]
						},
						{
							"id": 1902,
							"name": "server",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The Server that the session runs on."
							},
							"getSignature": [
								{
									"id": 1903,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The Server that the session runs on."
									},
									"type": {
										"type": "reference",
										"name": "Server"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1902,
										"name": "Session.server"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 43,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "Session.server"
							}
						},
						{
							"id": 1900,
							"name": "sessionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The current session ID."
							},
							"getSignature": [
								{
									"id": 1901,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The current session ID."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1900,
										"name": "Session.sessionId"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 39,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "Session.sessionId"
							}
						},
						{
							"id": 1891,
							"name": "_getCoverage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1892,
									"name": "_getCoverage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 124,
									"character": 24
								}
							]
						},
						{
							"id": 2059,
							"name": "acceptAlert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2060,
									"name": "acceptAlert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Accepts an alert, prompt, or confirmation pop-up. Equivalent to clicking\nthe 'OK' button."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2059,
										"name": "Session.acceptAlert"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 419,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2059,
								"name": "Session.acceptAlert"
							}
						},
						{
							"id": 1963,
							"name": "activateIme",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1964,
									"name": "activateIme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Activates an input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
									},
									"parameters": [
										{
											"id": 1965,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of IME to activate.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1963,
										"name": "Session.activateIme"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 194,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1963,
								"name": "Session.activateIme"
							}
						},
						{
							"id": 1904,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1905,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancel the in-progress operation and any chained operations."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1904,
										"name": "Session.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 52,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "Session.cancel"
							}
						},
						{
							"id": 2027,
							"name": "clearCookies",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2028,
									"name": "clearCookies",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clears all cookies for the current page."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2027,
										"name": "Session.clearCookies"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 330,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2027,
								"name": "Session.clearCookies"
							}
						},
						{
							"id": 2140,
							"name": "clearLocalStorage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2141,
									"name": "clearLocalStorage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clears all data in local storage for the focused window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2140,
										"name": "Session.clearLocalStorage"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 615,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2140,
								"name": "Session.clearLocalStorage"
							}
						},
						{
							"id": 2156,
							"name": "clearSessionStorage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2157,
									"name": "clearSessionStorage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clears all data in session storage for the focused window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2156,
										"name": "Session.clearSessionStorage"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 648,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2156,
								"name": "Session.clearSessionStorage"
							}
						},
						{
							"id": 2072,
							"name": "clickMouseButton",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2073,
									"name": "clickMouseButton",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clicks a mouse button at the point where the mouse cursor is currently\npositioned. This method may fail to execute with an error if the mouse\nhas not been moved anywhere since the page was loaded."
									},
									"parameters": [
										{
											"id": 2074,
											"name": "button",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The button to click. 0 corresponds to the primary mouse\nbutton, 1 to the middle mouse button, 2 to the secondary mouse button.\nNumbers above 2 correspond to any additional buttons a mouse might\nprovide.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2072,
										"name": "Session.clickMouseButton"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 460,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2072,
								"name": "Session.clickMouseButton"
							}
						},
						{
							"id": 1974,
							"name": "closeCurrentWindow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1975,
									"name": "closeCurrentWindow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Closes the currently focused window. In most environments, after the\nwindow has been closed, it is necessary to explicitly switch to whatever\nwindow is now focused."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1974,
										"name": "Session.closeCurrentWindow"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 227,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1974,
								"name": "Session.closeCurrentWindow"
							}
						},
						{
							"id": 1961,
							"name": "deactivateIme",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1962,
									"name": "deactivateIme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Deactivates any active input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1961,
										"name": "Session.deactivateIme"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 187,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1961,
								"name": "Session.deactivateIme"
							}
						},
						{
							"id": 2029,
							"name": "deleteCookie",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2030,
									"name": "deleteCookie",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Deletes a cookie on the current page."
									},
									"parameters": [
										{
											"id": 2031,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the cookie to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2029,
										"name": "Session.deleteCookie"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 336,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2029,
								"name": "Session.deleteCookie"
							}
						},
						{
							"id": 2145,
							"name": "deleteLocalStorageItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2146,
									"name": "deleteLocalStorageItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Deletes a value from local storage for the focused window/frame."
									},
									"parameters": [
										{
											"id": 2147,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The key of the data to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2145,
										"name": "Session.deleteLocalStorageItem"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 627,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2145,
								"name": "Session.deleteLocalStorageItem"
							}
						},
						{
							"id": 2161,
							"name": "deleteSessionStorageItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2162,
									"name": "deleteSessionStorageItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Deletes a value from session storage for the focused window/frame."
									},
									"parameters": [
										{
											"id": 2163,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The key of the data to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2161,
										"name": "Session.deleteSessionStorageItem"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 660,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2161,
								"name": "Session.deleteSessionStorageItem"
							}
						},
						{
							"id": 2061,
							"name": "dismissAlert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2062,
									"name": "dismissAlert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Dismisses an alert, prompt, or confirmation pop-up. Equivalent to\nclicking the 'OK' button of an alert pop-up or the 'Cancel' button of a\nprompt or confirmation pop-up."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2061,
										"name": "Session.dismissAlert"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 425,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2061,
								"name": "Session.dismissAlert"
							}
						},
						{
							"id": 2081,
							"name": "doubleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2082,
									"name": "doubleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Double-clicks the primary mouse button."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2081,
										"name": "Session.doubleClick"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 478,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2081,
								"name": "Session.doubleClick"
							}
						},
						{
							"id": 2106,
							"name": "doubleTap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2107,
									"name": "doubleTap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs a double-tap gesture on an element."
									},
									"parameters": [
										{
											"id": 2108,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The element to double-tap.\n"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2106,
										"name": "Session.doubleTap"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 534,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2106,
								"name": "Session.doubleTap"
							}
						},
						{
							"id": 1943,
							"name": "execute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1944,
									"name": "execute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Executes JavaScript code within the focused window/frame. The code\nshould return a value synchronously.",
										"text": "See [[Session.Session.executeAsync]] to execute code that returns values\nasynchronously.\n",
										"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
									},
									"typeParameter": [
										{
											"id": 1945,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 1946,
											"name": "script",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Function"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1947,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus\n[[Element.Element]] objects, can be specified as arguments.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "Session.execute"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 128,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1943,
								"name": "Session.execute"
							}
						},
						{
							"id": 1948,
							"name": "executeAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1949,
									"name": "executeAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Executes JavaScript code within the focused window/frame. The code must\ninvoke the provided callback in order to signal that it has completed\nexecution.",
										"text": "See [[Session.Session.execute]] to execute code that returns values\nsynchronously.\n\nSee [[Session.Session.setExecuteAsyncTimeout]] to set the time until an\nasynchronous script is considered timed out.\n",
										"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
									},
									"typeParameter": [
										{
											"id": 1950,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 1951,
											"name": "script",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Function"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1952,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus\n[[Element.Element]] objects, can be specified as arguments. In addition\nto these arguments, a callback function will always be passed as the\nfinal argument to the function specified in `script`. This callback\nfunction must be invoked in order to signal that execution has\ncompleted. The return value of the execution, if any, should be passed\nto this callback function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1948,
										"name": "Session.executeAsync"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 159,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "Session.executeAsync"
							}
						},
						{
							"id": 2036,
							"name": "find",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2037,
									"name": "find",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element from the focused window/frame that matches the\ngiven query.",
										"text": "See [[Session.Session.setFindTimeout]] to set the amount of time it the\nremote environment should spend waiting for an element that does not\nexist at the time of the `find` call before timing out.\n"
									},
									"parameters": [
										{
											"id": 2038,
											"name": "using",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element retrieval strategy to use. One of 'class name',\n'css selector', 'id', 'name', 'link text', 'partial link text', 'tag\nname', 'xpath'.\n"
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 2039,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The strategy-specific value to search for. For example, if\n`using` is 'id', `value` should be the ID of the element to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.find"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2036,
										"name": "Session.find"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 363,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.find"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2036,
								"name": "Session.find"
							}
						},
						{
							"id": 2040,
							"name": "findAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2041,
									"name": "findAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets an array of elements from the focused window/frame that match the\ngiven query."
									},
									"parameters": [
										{
											"id": 2042,
											"name": "using",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 2043,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.findAll"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2040,
										"name": "Session.findAll"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 374,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.findAll"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2040,
								"name": "Session.findAll"
							}
						},
						{
							"id": 2216,
							"name": "findAllByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2217,
									"name": "findAllByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given CSS class name."
									},
									"parameters": [
										{
											"id": 2218,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2216,
										"name": "Locator.findAllByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 78,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2216,
								"name": "Locator.findAllByClassName"
							}
						},
						{
							"id": 2219,
							"name": "findAllByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2220,
									"name": "findAllByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given CSS selector."
									},
									"parameters": [
										{
											"id": 2221,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2219,
										"name": "Locator.findAllByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 84,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2219,
								"name": "Locator.findAllByCssSelector"
							}
						},
						{
							"id": 2225,
							"name": "findAllByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2226,
									"name": "findAllByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 2227,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2225,
										"name": "Locator.findAllByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 97,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2225,
								"name": "Locator.findAllByLinkText"
							}
						},
						{
							"id": 2222,
							"name": "findAllByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2223,
									"name": "findAllByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given name attribute."
									},
									"parameters": [
										{
											"id": 2224,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2222,
										"name": "Locator.findAllByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 90,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2222,
								"name": "Locator.findAllByName"
							}
						},
						{
							"id": 2228,
							"name": "findAllByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2229,
									"name": "findAllByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element partially matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 2230,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2228,
										"name": "Locator.findAllByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 104,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2228,
								"name": "Locator.findAllByPartialLinkText"
							}
						},
						{
							"id": 2231,
							"name": "findAllByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2232,
									"name": "findAllByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given HTML tag name."
									},
									"parameters": [
										{
											"id": 2233,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2231,
										"name": "Locator.findAllByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 110,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2231,
								"name": "Locator.findAllByTagName"
							}
						},
						{
							"id": 2234,
							"name": "findAllByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2235,
									"name": "findAllByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given XPath selector."
									},
									"parameters": [
										{
											"id": 2236,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2234,
										"name": "Locator.findAllByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 116,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2234,
								"name": "Locator.findAllByXpath"
							}
						},
						{
							"id": 2192,
							"name": "findByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2193,
									"name": "findByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given CSS class\nname."
									},
									"parameters": [
										{
											"id": 2194,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2192,
										"name": "Locator.findByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 24,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2192,
								"name": "Locator.findByClassName"
							}
						},
						{
							"id": 2195,
							"name": "findByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2196,
									"name": "findByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given CSS\nselector."
									},
									"parameters": [
										{
											"id": 2197,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2195,
										"name": "Locator.findByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 31,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2195,
								"name": "Locator.findByCssSelector"
							}
						},
						{
							"id": 2198,
							"name": "findById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2199,
									"name": "findById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given ID."
									},
									"parameters": [
										{
											"id": 2200,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The ID of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2198,
										"name": "Locator.findById"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 37,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2198,
								"name": "Locator.findById"
							}
						},
						{
							"id": 2204,
							"name": "findByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2205,
									"name": "findByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 2206,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2204,
										"name": "Locator.findByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 51,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2204,
								"name": "Locator.findByLinkText"
							}
						},
						{
							"id": 2201,
							"name": "findByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2202,
									"name": "findByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given name\nattribute."
									},
									"parameters": [
										{
											"id": 2203,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2201,
										"name": "Locator.findByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 44,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2201,
								"name": "Locator.findByName"
							}
						},
						{
							"id": 2207,
							"name": "findByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2208,
									"name": "findByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element partially matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 2209,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2207,
										"name": "Locator.findByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 58,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2207,
								"name": "Locator.findByPartialLinkText"
							}
						},
						{
							"id": 2210,
							"name": "findByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2211,
									"name": "findByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given HTML tag\nname."
									},
									"parameters": [
										{
											"id": 2212,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2210,
										"name": "Locator.findByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 65,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2210,
								"name": "Locator.findByTagName"
							}
						},
						{
							"id": 2213,
							"name": "findByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2214,
									"name": "findByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given XPath\nselector."
									},
									"parameters": [
										{
											"id": 2215,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2213,
										"name": "Locator.findByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 72,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2213,
								"name": "Locator.findByXpath"
							}
						},
						{
							"id": 2166,
							"name": "findDisplayed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2167,
									"name": "findDisplayed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.Element.isDisplayed|displayed]] element in the\ncurrently active window/frame matching the given query. This is\ninherently slower than [[Session.Session.find]], so should only be used\nin cases where the visibility of an element cannot be ensured in\nadvance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2168,
											"name": "using",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 2169,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.findDisplayed"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2166,
										"name": "Session.findDisplayed"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 681,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.findDisplayed"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2166,
								"name": "Session.findDisplayed"
							}
						},
						{
							"id": 2237,
							"name": "findDisplayedByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2238,
									"name": "findDisplayedByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS class name. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2239,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2237,
										"name": "Locator.findDisplayedByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 126,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2237,
								"name": "Locator.findDisplayedByClassName"
							}
						},
						{
							"id": 2240,
							"name": "findDisplayedByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2241,
									"name": "findDisplayedByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS selector. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2242,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2240,
										"name": "Locator.findDisplayedByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 136,
									"character": 30
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2240,
								"name": "Locator.findDisplayedByCssSelector"
							}
						},
						{
							"id": 2243,
							"name": "findDisplayedById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2244,
									"name": "findDisplayedById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given ID. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2245,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The ID of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2243,
										"name": "Locator.findDisplayedById"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 146,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2243,
								"name": "Locator.findDisplayedById"
							}
						},
						{
							"id": 2249,
							"name": "findDisplayedByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2250,
									"name": "findDisplayedByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2251,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2249,
										"name": "Locator.findDisplayedByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 166,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2249,
								"name": "Locator.findDisplayedByLinkText"
							}
						},
						{
							"id": 2246,
							"name": "findDisplayedByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2247,
									"name": "findDisplayedByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given name attribute. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2248,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2246,
										"name": "Locator.findDisplayedByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 156,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2246,
								"name": "Locator.findDisplayedByName"
							}
						},
						{
							"id": 2252,
							"name": "findDisplayedByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2253,
									"name": "findDisplayedByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement partially matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2254,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2252,
										"name": "Locator.findDisplayedByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 176,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2252,
								"name": "Locator.findDisplayedByPartialLinkText"
							}
						},
						{
							"id": 2255,
							"name": "findDisplayedByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2256,
									"name": "findDisplayedByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given HTML tag name. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2257,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2255,
										"name": "Locator.findDisplayedByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 186,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2255,
								"name": "Locator.findDisplayedByTagName"
							}
						},
						{
							"id": 2258,
							"name": "findDisplayedByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2259,
									"name": "findDisplayedByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given XPath selector. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 2260,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2258,
										"name": "Locator.findDisplayedByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 196,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2258,
								"name": "Locator.findDisplayedByXpath"
							}
						},
						{
							"id": 2112,
							"name": "flickFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2113,
									"name": "flickFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Flicks a finger. Note that this method is currently badly specified and\nhighly dysfunctional and is only provided for the sake of completeness."
									},
									"parameters": [
										{
											"id": 2114,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element where the flick should start."
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 2115,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The x-offset in pixels to flick by."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2116,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The x-offset in pixels to flick by."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2117,
											"name": "speed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The speed of the flick, in pixels per *second*. Most human\nflicks are 100–200ms, so this value will be higher than expected.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2112,
										"name": "Session.flickFinger"
									}
								},
								{
									"id": 2118,
									"name": "flickFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2119,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2120,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2121,
											"name": "speed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2112,
										"name": "Session.flickFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 551,
									"character": 15
								},
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 552,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2112,
								"name": "Session.flickFinger"
							}
						},
						{
							"id": 1883,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1884,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigates the browser to a new URL like `leadfoot/Session#get`, but\nretrieves any code coverage data recorded by the browser prior to\nnavigation."
									},
									"parameters": [
										{
											"id": 1885,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "Session.get"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 45,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Session.get"
							}
						},
						{
							"id": 2044,
							"name": "getActiveElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2045,
									"name": "getActiveElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the currently focused element from the focused window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2044,
										"name": "Session.getActiveElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 378,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2044,
								"name": "Session.getActiveElement"
							}
						},
						{
							"id": 1957,
							"name": "getActiveImeEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1958,
									"name": "getActiveImeEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the currently active input method editor for the remote environment.\nAs of April 2014, no known remote environments support IME functions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "Session.getActiveImeEngine"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 176,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1957,
								"name": "Session.getActiveImeEngine"
							}
						},
						{
							"id": 2054,
							"name": "getAlertText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2055,
									"name": "getAlertText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the text displayed in the currently active alert pop-up."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2054,
										"name": "Session.getAlertText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 408,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2054,
								"name": "Session.getAlertText"
							}
						},
						{
							"id": 1933,
							"name": "getAllWindowHandles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1934,
									"name": "getAllWindowHandles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a list of identifiers for all currently open windows."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1933,
										"name": "Session.getAllWindowHandles"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 84,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "Session.getAllWindowHandles"
							}
						},
						{
							"id": 2132,
							"name": "getApplicationCacheStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2133,
									"name": "getApplicationCacheStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current state of the HTML5 application cache for the current\npage.",
										"returns": "The cache status. One of 0 (uncached), 1 (cached/idle), 2\n(checking), 3 (downloading), 4 (update ready), 5 (obsolete).\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2132,
										"name": "Session.getApplicationCacheStatus"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 595,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2132,
								"name": "Session.getApplicationCacheStatus"
							}
						},
						{
							"id": 1955,
							"name": "getAvailableImeEngines",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1956,
									"name": "getAvailableImeEngines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a list of input method editor engines available to the remote\nenvironment. As of April 2014, no known remote environments support IME\nfunctions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1955,
										"name": "Session.getAvailableImeEngines"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 171,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1955,
								"name": "Session.getAvailableImeEngines"
							}
						},
						{
							"id": 2130,
							"name": "getAvailableLogTypes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2131,
									"name": "getAvailableLogTypes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the types of logs that are currently available for retrieval from\nthe remote environment."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2130,
										"name": "Session.getAvailableLogTypes"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 587,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2130,
								"name": "Session.getAvailableLogTypes"
							}
						},
						{
							"id": 2022,
							"name": "getCookies",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2023,
									"name": "getCookies",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all cookies set on the current page."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2022,
										"name": "Session.getCookies"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 322,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2022,
								"name": "Session.getCookies"
							}
						},
						{
							"id": 1935,
							"name": "getCurrentUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1936,
									"name": "getCurrentUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the URL that is loaded in the focused window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1935,
										"name": "Session.getCurrentUrl"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 88,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "Session.getCurrentUrl"
							}
						},
						{
							"id": 1931,
							"name": "getCurrentWindowHandle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1932,
									"name": "getCurrentWindowHandle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the identifier for the window that is currently focused.",
										"returns": "A window handle identifier that can be used with other window\nhandling functions.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "Session.getCurrentWindowHandle"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 80,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "Session.getCurrentWindowHandle"
							}
						},
						{
							"id": 2174,
							"name": "getExecuteAsyncTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2175,
									"name": "getExecuteAsyncTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the timeout for [[Session.Session.executeAsync]] calls."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2174,
										"name": "Session.getExecuteAsyncTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 696,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2174,
								"name": "Session.getExecuteAsyncTimeout"
							}
						},
						{
							"id": 2179,
							"name": "getFindTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2180,
									"name": "getFindTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the timeout for [[Session.Session.find]] calls."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2179,
										"name": "Session.getFindTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 706,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2179,
								"name": "Session.getFindTimeout"
							}
						},
						{
							"id": 2122,
							"name": "getGeolocation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2123,
									"name": "getGeolocation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current geographical location of the remote environment.",
										"returns": "Latitude and longitude are specified using standard WGS84\ndecimal latitude/longitude. Altitude is specified as meters above the\nWGS84 ellipsoid. Not all environments support altitude.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Geolocation"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2122,
										"name": "Session.getGeolocation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 560,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2122,
								"name": "Session.getGeolocation"
							}
						},
						{
							"id": 2142,
							"name": "getLocalStorageItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2143,
									"name": "getLocalStorageItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value from local storage for the focused window/frame."
									},
									"parameters": [
										{
											"id": 2144,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The key of the data to get.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2142,
										"name": "Session.getLocalStorageItem"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 621,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2142,
								"name": "Session.getLocalStorageItem"
							}
						},
						{
							"id": 2134,
							"name": "getLocalStorageKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2135,
									"name": "getLocalStorageKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the list of keys set in local storage for the focused window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2134,
										"name": "Session.getLocalStorageKeys"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 604,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2134,
								"name": "Session.getLocalStorageKeys"
							}
						},
						{
							"id": 2148,
							"name": "getLocalStorageLength",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2149,
									"name": "getLocalStorageLength",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the number of keys set in local storage for the focused\nwindow/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2148,
										"name": "Session.getLocalStorageLength"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 632,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2148,
								"name": "Session.getLocalStorageLength"
							}
						},
						{
							"id": 2127,
							"name": "getLogsFor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2128,
									"name": "getLogsFor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all logs from the remote environment of the given type. The logs in\nthe remote environment are cleared once they have been retrieved.",
										"returns": "An array of log entry objects. Timestamps in log entries are\nUnix timestamps, in seconds.\n"
									},
									"parameters": [
										{
											"id": 2129,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of log entries to retrieve. Available log types\ndiffer between remote environments. Use\n[[Session.Session.getAvailableLogTypes]] to learn what log types are\ncurrently available. Not all environments support all possible log\ntypes.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "LogEntry"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2127,
										"name": "Session.getLogsFor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 582,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2127,
								"name": "Session.getLogsFor"
							}
						},
						{
							"id": 2049,
							"name": "getOrientation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2050,
									"name": "getOrientation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current screen orientation.",
										"returns": "Either 'portrait' or 'landscape'.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2049,
										"name": "Session.getOrientation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 398,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2049,
								"name": "Session.getOrientation"
							}
						},
						{
							"id": 2184,
							"name": "getPageLoadTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2185,
									"name": "getPageLoadTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the timeout for [[Session.Session.get]] calls."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2184,
										"name": "Session.getPageLoadTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 716,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2184,
								"name": "Session.getPageLoadTimeout"
							}
						},
						{
							"id": 2032,
							"name": "getPageSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2033,
									"name": "getPageSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the HTML loaded in the focused window/frame. This markup is\nserialised by the remote environment so may not exactly match the HTML\nprovided by the Web server."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2032,
										"name": "Session.getPageSource"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 342,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2032,
								"name": "Session.getPageSource"
							}
						},
						{
							"id": 2034,
							"name": "getPageTitle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2035,
									"name": "getPageTitle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the title of the top-level browsing context of the current window\nor tab."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2034,
										"name": "Session.getPageTitle"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 347,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2034,
								"name": "Session.getPageTitle"
							}
						},
						{
							"id": 2158,
							"name": "getSessionStorageItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2159,
									"name": "getSessionStorageItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value from session storage for the focused window/frame."
									},
									"parameters": [
										{
											"id": 2160,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The key of the data to get.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2158,
										"name": "Session.getSessionStorageItem"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 654,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2158,
								"name": "Session.getSessionStorageItem"
							}
						},
						{
							"id": 2150,
							"name": "getSessionStorageKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2151,
									"name": "getSessionStorageKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the list of keys set in session storage for the focused\nwindow/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2150,
										"name": "Session.getSessionStorageKeys"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 637,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2150,
								"name": "Session.getSessionStorageKeys"
							}
						},
						{
							"id": 2164,
							"name": "getSessionStorageLength",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2165,
									"name": "getSessionStorageLength",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the number of keys set in session storage for the focused\nwindow/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2164,
										"name": "Session.getSessionStorageLength"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 665,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2164,
								"name": "Session.getSessionStorageLength"
							}
						},
						{
							"id": 1924,
							"name": "getTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1925,
									"name": "getTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current value of a timeout for the session.",
										"returns": "The timeout, in milliseconds.\n"
									},
									"parameters": [
										{
											"id": 1926,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of timeout to retrieve. One of 'script',\n'implicit', or 'page load'."
											},
											"type": {
												"type": "reference",
												"name": "Timeout"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "Session.getTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 63,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "Session.getTimeout"
							}
						},
						{
							"id": 2013,
							"name": "getWindowPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2014,
									"name": "getWindowPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the position of a window.",
										"text": "Note that this method is not part of the W3C WebDriver standard.\n",
										"returns": "An object describing the position of the window, in CSS pixels,\nrelative to the top-left corner of the primary monitor. If a secondary\nmonitor exists above or to the left of the primary monitor, these values\nwill be negative.\n"
									},
									"parameters": [
										{
											"id": 2015,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The name of the window to query. See\n[[Session.Session.switchToWindow]] to learn about valid window names.\nOmit this argument to query the currently focused window.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2016,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 2017,
															"name": "x",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 308,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2018,
															"name": "y",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 309,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2017,
																2018
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Session.d.ts",
															"line": 307,
															"character": 54
														}
													]
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2013,
										"name": "Session.getWindowPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 307,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2013,
								"name": "Session.getWindowPosition"
							}
						},
						{
							"id": 1990,
							"name": "getWindowRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1991,
									"name": "getWindowRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Return the current window's rectangle (size and position)."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1992,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1994,
															"name": "height",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 260,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1993,
															"name": "width",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 259,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1995,
															"name": "x",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 261,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1996,
															"name": "y",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 262,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1994,
																1993,
																1995,
																1996
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Session.d.ts",
															"line": 258,
															"character": 29
														}
													]
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1990,
										"name": "Session.getWindowRect"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 258,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1990,
								"name": "Session.getWindowRect"
							}
						},
						{
							"id": 1984,
							"name": "getWindowSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1985,
									"name": "getWindowSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the dimensions of a window.",
										"returns": "An object describing the width and height of the window, in CSS\npixels.\n"
									},
									"parameters": [
										{
											"id": 1986,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The name of the window to query. See\n[[Session.Session.switchToWindow]] to learn about valid window names.\nOmit this argument to query the currently focused window.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1987,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1989,
															"name": "height",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 253,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1988,
															"name": "width",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 252,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1989,
																1988
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Session.d.ts",
															"line": 251,
															"character": 50
														}
													]
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1984,
										"name": "Session.getWindowSize"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 251,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1984,
								"name": "Session.getWindowSize"
							}
						},
						{
							"id": 1939,
							"name": "goBack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1940,
									"name": "goBack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigates the focused window/frame back one page using the browser’s\nnavigation history."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1939,
										"name": "Session.goBack"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 102,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1939,
								"name": "Session.goBack"
							}
						},
						{
							"id": 1937,
							"name": "goForward",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1938,
									"name": "goForward",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigates the focused window/frame forward one page using the browser’s\nnavigation history."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "Session.goForward"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "Session.goForward"
							}
						},
						{
							"id": 1959,
							"name": "isImeActivated",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1960,
									"name": "isImeActivated",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns whether or not an input method editor is currently active in the\nremote environment. As of April 2014, no known remote environments\nsupport IME functions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1959,
										"name": "Session.isImeActivated"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 182,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1959,
								"name": "Session.isImeActivated"
							}
						},
						{
							"id": 2109,
							"name": "longTap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2110,
									"name": "longTap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs a long-tap gesture on an element."
									},
									"parameters": [
										{
											"id": 2111,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The element to long-tap.\n"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2109,
										"name": "Session.longTap"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 540,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2109,
								"name": "Session.longTap"
							}
						},
						{
							"id": 2019,
							"name": "maximizeWindow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2020,
									"name": "maximizeWindow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximises a window according to the platform’s window system behaviour."
									},
									"parameters": [
										{
											"id": 2021,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The name of the window to resize. See\n[[Session.Session.switchToWindow]] to learn about valid window names.\nOmit this argument to resize the currently focused window.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2019,
										"name": "Session.maximizeWindow"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 318,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2019,
								"name": "Session.maximizeWindow"
							}
						},
						{
							"id": 2094,
							"name": "moveFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2095,
									"name": "moveFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Moves the last depressed finger to a new point on the touch screen."
									},
									"parameters": [
										{
											"id": 2096,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate to move to, maybe in device pixels."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2097,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate to move to, maybe in device pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2094,
										"name": "Session.moveFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 511,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2094,
								"name": "Session.moveFinger"
							}
						},
						{
							"id": 2063,
							"name": "moveMouseTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2064,
									"name": "moveMouseTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Moves the remote environment’s mouse cursor to the specified element or\nrelative position. If the element is outside of the viewport, the remote\ndriver will attempt to scroll it into view automatically."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2063,
										"name": "Session.moveMouseTo"
									}
								},
								{
									"id": 2065,
									"name": "moveMouseTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2066,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2067,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2063,
										"name": "Session.moveMouseTo"
									}
								},
								{
									"id": 2068,
									"name": "moveMouseTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2069,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 2070,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2071,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2063,
										"name": "Session.moveMouseTo"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 447,
									"character": 15
								},
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 448,
									"character": 15
								},
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 449,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2063,
								"name": "Session.moveMouseTo"
							}
						},
						{
							"id": 2086,
							"name": "pressFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2087,
									"name": "pressFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Depresses a new finger at the given point on a touch screen device\nwithout releasing it."
									},
									"parameters": [
										{
											"id": 2088,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate to press, maybe in device pixels."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2089,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate to press, maybe in device pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2086,
										"name": "Session.pressFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 494,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2086,
								"name": "Session.pressFinger"
							}
						},
						{
							"id": 2046,
							"name": "pressKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2047,
									"name": "pressKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Types into the focused window/frame/element."
									},
									"parameters": [
										{
											"id": 2048,
											"name": "keys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The text to type in the remote environment. It is possible\nto type keys that do not have normal character representations (modifier\nkeys, function keys, etc.) as well as keys that have two different\nrepresentations on a typical US-ASCII keyboard (numpad keys); use the\nvalues from [[keys]] to type these special characters. Any modifier keys\nthat are activated by this call will persist until they are deactivated.\nTo deactivate a modifier key, type the same modifier key a second time,\nor send `\\uE000` ('NULL') to deactivate all currently active modifier\nkeys.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2046,
										"name": "Session.pressKeys"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 392,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2046,
								"name": "Session.pressKeys"
							}
						},
						{
							"id": 2075,
							"name": "pressMouseButton",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2076,
									"name": "pressMouseButton",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Depresses a mouse button without releasing it."
									},
									"parameters": [
										{
											"id": 2077,
											"name": "button",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The button to press. See [[Session.Session.click]] for\navailable options.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2075,
										"name": "Session.pressMouseButton"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 467,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2075,
								"name": "Session.pressMouseButton"
							}
						},
						{
							"id": 1886,
							"name": "quit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1887,
									"name": "quit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Quits the browser like `leadfoot/Session#quit`, but retrieves any code\ncoverage data recorded by the browser prior to quitting."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "Session.quit"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 67,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Session.quit"
							}
						},
						{
							"id": 1941,
							"name": "refresh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1942,
									"name": "refresh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Reloads the current browser window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1941,
										"name": "Session.refresh"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 106,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1941,
								"name": "Session.refresh"
							}
						},
						{
							"id": 2090,
							"name": "releaseFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2091,
									"name": "releaseFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Releases whatever finger exists at the given point on a touch screen\ndevice."
									},
									"parameters": [
										{
											"id": 2092,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate where a finger is pressed, maybe in\ndevice pixels."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2093,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate where a finger is pressed, maybe in\ndevice pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2090,
										"name": "Session.releaseFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 504,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2090,
								"name": "Session.releaseFinger"
							}
						},
						{
							"id": 2078,
							"name": "releaseMouseButton",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2079,
									"name": "releaseMouseButton",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Releases a previously depressed mouse button."
									},
									"parameters": [
										{
											"id": 2080,
											"name": "button",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The button to press. See [[Session.Session.click]] for\navailable options.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2078,
										"name": "Session.releaseMouseButton"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 474,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2078,
								"name": "Session.releaseMouseButton"
							}
						},
						{
							"id": 1918,
							"name": "serverDelete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1919,
									"name": "serverDelete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1920,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 1921,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1922,
											"name": "requestData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1923,
											"name": "pathParts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "Session.serverDelete"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 55,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "Session.serverDelete"
							}
						},
						{
							"id": 1906,
							"name": "serverGet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1907,
									"name": "serverGet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1908,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 1909,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1910,
											"name": "requestData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1911,
											"name": "pathParts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1906,
										"name": "Session.serverGet"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 53,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1906,
								"name": "Session.serverGet"
							}
						},
						{
							"id": 1912,
							"name": "serverPost",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1913,
									"name": "serverPost",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1914,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 1915,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1916,
											"name": "requestData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1917,
											"name": "pathParts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "Session.serverPost"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 54,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "Session.serverPost"
							}
						},
						{
							"id": 2024,
							"name": "setCookie",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2025,
									"name": "setCookie",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets a cookie on the current page."
									},
									"parameters": [
										{
											"id": 2026,
											"name": "cookie",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "WebDriverCookie"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2024,
										"name": "Session.setCookie"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 326,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2024,
								"name": "Session.setCookie"
							}
						},
						{
							"id": 2176,
							"name": "setExecuteAsyncTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2177,
									"name": "setExecuteAsyncTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the timeout for [[Session.Session.executeAsync]] calls."
									},
									"parameters": [
										{
											"id": 2178,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of the timeout, in milliseconds.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2176,
										"name": "Session.setExecuteAsyncTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 702,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2176,
								"name": "Session.setExecuteAsyncTimeout"
							}
						},
						{
							"id": 2181,
							"name": "setFindTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2182,
									"name": "setFindTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the timeout for [[Session.Session.find]] calls."
									},
									"parameters": [
										{
											"id": 2183,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of the timeout, in milliseconds.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2181,
										"name": "Session.setFindTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 712,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2181,
								"name": "Session.setFindTimeout"
							}
						},
						{
							"id": 2124,
							"name": "setGeolocation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2125,
									"name": "setGeolocation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the geographical location of the remote environment."
									},
									"parameters": [
										{
											"id": 2126,
											"name": "location",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Latitude and longitude are specified using standard\nWGS84 decimal latitude/longitude. Altitude is specified as meters above\nthe WGS84 ellipsoid. Not all environments support altitude.\n"
											},
											"type": {
												"type": "reference",
												"name": "Geolocation"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2124,
										"name": "Session.setGeolocation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 568,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2124,
								"name": "Session.setGeolocation"
							}
						},
						{
							"id": 1888,
							"name": "setHeartbeatInterval",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1889,
									"name": "setHeartbeatInterval",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets up a timer to send no-op commands to the remote server on an\ninterval to prevent long-running unit tests from causing the session to\ntime out."
									},
									"parameters": [
										{
											"id": 1890,
											"name": "delay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Amount of time to wait between heartbeats. Setting the delay\nto 0 will disable heartbeats.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/ProxiedSession.ts",
									"line": 86,
									"character": 22
								}
							]
						},
						{
							"id": 2136,
							"name": "setLocalStorageItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2137,
									"name": "setLocalStorageItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets a value in local storage for the focused window/frame."
									},
									"parameters": [
										{
											"id": 2138,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The key to set."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2139,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The value to set.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2136,
										"name": "Session.setLocalStorageItem"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 611,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2136,
								"name": "Session.setLocalStorageItem"
							}
						},
						{
							"id": 2051,
							"name": "setOrientation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2052,
									"name": "setOrientation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the screen orientation."
									},
									"parameters": [
										{
											"id": 2053,
											"name": "orientation",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Either 'portrait' or 'landscape'.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2051,
										"name": "Session.setOrientation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 404,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2051,
								"name": "Session.setOrientation"
							}
						},
						{
							"id": 2186,
							"name": "setPageLoadTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2187,
									"name": "setPageLoadTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the timeout for [[Session.Session.get]] calls."
									},
									"parameters": [
										{
											"id": 2188,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of the timeout, in milliseconds.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2186,
										"name": "Session.setPageLoadTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 722,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2186,
								"name": "Session.setPageLoadTimeout"
							}
						},
						{
							"id": 2152,
							"name": "setSessionStorageItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2153,
									"name": "setSessionStorageItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets a value in session storage for the focused window/frame."
									},
									"parameters": [
										{
											"id": 2154,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The key to set."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2155,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The value to set.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2152,
										"name": "Session.setSessionStorageItem"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 644,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2152,
								"name": "Session.setSessionStorageItem"
							}
						},
						{
							"id": 1927,
							"name": "setTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1928,
									"name": "setTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the value of a timeout for the session."
									},
									"parameters": [
										{
											"id": 1929,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of timeout to set. One of 'script', 'implicit', or\n'page load'.\n"
											},
											"type": {
												"type": "reference",
												"name": "Timeout"
											}
										},
										{
											"id": 1930,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of time to use for the timeout, in milliseconds. A\nvalue of 0 will cause operations to time out immediately.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1927,
										"name": "Session.setTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 73,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "Session.setTimeout"
							}
						},
						{
							"id": 2005,
							"name": "setWindowPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2006,
									"name": "setWindowPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the position of a window.",
										"text": "Note that this method is not part of the W3C WebDriver standard.\n"
									},
									"parameters": [
										{
											"id": 2007,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate to move to, in CSS pixels, relative to\nthe left edge of the primary monitor.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2008,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate to move to, in CSS pixels, relative to\nthe top edge of the primary monitor.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2005,
										"name": "Session.setWindowPosition"
									}
								},
								{
									"id": 2009,
									"name": "setWindowPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2010,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2011,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2012,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2005,
										"name": "Session.setWindowPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 291,
									"character": 21
								},
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 292,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2005,
								"name": "Session.setWindowPosition"
							}
						},
						{
							"id": 1997,
							"name": "setWindowRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1998,
									"name": "setWindowRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Set the current window's rectangle (size and position)."
									},
									"parameters": [
										{
											"id": 1999,
											"name": "rect",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The windows rectangle. This may contain all 4 properties, or\njust x & y, or just width & height.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2000,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 2004,
															"name": "height",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 274,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2003,
															"name": "width",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 273,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2001,
															"name": "x",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 271,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2002,
															"name": "y",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Session.d.ts",
																	"line": 272,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2004,
																2003,
																2001,
																2002
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Session.d.ts",
															"line": 270,
															"character": 23
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1997,
										"name": "Session.setWindowRect"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 270,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1997,
								"name": "Session.setWindowRect"
							}
						},
						{
							"id": 1976,
							"name": "setWindowSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1977,
									"name": "setWindowSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the dimensions of a window."
									},
									"parameters": [
										{
											"id": 1978,
											"name": "width",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The new width of the window, in CSS pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1979,
											"name": "height",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The new height of the window, in CSS pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1976,
										"name": "Session.setWindowSize"
									}
								},
								{
									"id": 1980,
									"name": "setWindowSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1981,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1982,
											"name": "width",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1983,
											"name": "height",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1976,
										"name": "Session.setWindowSize"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 239,
									"character": 17
								},
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 240,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1976,
								"name": "Session.setWindowSize"
							}
						},
						{
							"id": 2189,
							"name": "sleep",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2190,
									"name": "sleep",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns a promise that resolves in a give number of ms"
									},
									"parameters": [
										{
											"id": 2191,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2189,
										"name": "Session.sleep"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 726,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2189,
								"name": "Session.sleep"
							}
						},
						{
							"id": 1966,
							"name": "switchToFrame",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1967,
									"name": "switchToFrame",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Switches the currently focused frame to a new frame."
									},
									"parameters": [
										{
											"id": 1968,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The frame to switch to. In most environments, a number or\nstring value corresponds to a key in the `window.frames` object of the\ncurrently active frame. If `null`, the topmost (default) frame will be\nused. If an Element is provided, it must correspond to a `<frame>` or\n`<iframe>` element.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "Element"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1966,
										"name": "Session.switchToFrame"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 204,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1966,
								"name": "Session.switchToFrame"
							}
						},
						{
							"id": 1972,
							"name": "switchToParentFrame",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1973,
									"name": "switchToParentFrame",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Switches the currently focused frame to the parent of the currently\nfocused frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1972,
										"name": "Session.switchToParentFrame"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 221,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1972,
								"name": "Session.switchToParentFrame"
							}
						},
						{
							"id": 1969,
							"name": "switchToWindow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1970,
									"name": "switchToWindow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Switches the currently focused window to a new window."
									},
									"parameters": [
										{
											"id": 1971,
											"name": "handle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The handle of the window to switch to. In mobile\nenvironments and environments based on the W3C WebDriver standard, this\nshould be a handle as returned by\n[[Session.Session.getAllWindowHandles]].\n\nIn environments using the JsonWireProtocol, this value corresponds to\nthe `window.name` property of a window.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1969,
										"name": "Session.switchToWindow"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 216,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1969,
								"name": "Session.switchToWindow"
							}
						},
						{
							"id": 1953,
							"name": "takeScreenshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1954,
									"name": "takeScreenshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a screenshot of the focused window and returns it in PNG format.",
										"returns": "A buffer containing a PNG image.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1953,
										"name": "Session.takeScreenshot"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 165,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1953,
								"name": "Session.takeScreenshot"
							}
						},
						{
							"id": 2083,
							"name": "tap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2084,
									"name": "tap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Taps an element on a touch screen device. If the element is outside of\nthe viewport, the remote driver will attempt to scroll it into view\nautomatically."
									},
									"parameters": [
										{
											"id": 2085,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element to tap.\n"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2083,
										"name": "Session.tap"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 486,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2083,
								"name": "Session.tap"
							}
						},
						{
							"id": 2098,
							"name": "touchScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2099,
									"name": "touchScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Scrolls the currently focused window on a touch screen device."
									},
									"parameters": [
										{
											"id": 2100,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "An optional x-offset, relative to the left edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2101,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "An optional y-offset, relative to the top edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2098,
										"name": "Session.touchScroll"
									}
								},
								{
									"id": 2102,
									"name": "touchScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2103,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 2104,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2105,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2098,
										"name": "Session.touchScroll"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 527,
									"character": 15
								},
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 528,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2098,
								"name": "Session.touchScroll"
							}
						},
						{
							"id": 2056,
							"name": "typeInPrompt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2057,
									"name": "typeInPrompt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Types into the currently active prompt pop-up."
									},
									"parameters": [
										{
											"id": 2058,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The text to type into the pop-up’s input box.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2056,
										"name": "Session.typeInPrompt"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 414,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2056,
								"name": "Session.typeInPrompt"
							}
						},
						{
							"id": 2170,
							"name": "waitForDeleted",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2171,
									"name": "waitForDeleted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements in the currently active window/frame to be\ndestroyed."
									},
									"parameters": [
										{
											"id": 2172,
											"name": "using",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 2173,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.waitForDeleted"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2170,
										"name": "Session.waitForDeleted"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Session.d.ts",
									"line": 692,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.waitForDeleted"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2170,
								"name": "Session.waitForDeleted"
							}
						},
						{
							"id": 2261,
							"name": "waitForDeletedByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2262,
									"name": "waitForDeletedByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given CSS class\nname to be destroyed."
									},
									"parameters": [
										{
											"id": 2263,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2261,
										"name": "Locator.waitForDeletedByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 203,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2261,
								"name": "Locator.waitForDeletedByClassName"
							}
						},
						{
							"id": 2264,
							"name": "waitForDeletedByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2265,
									"name": "waitForDeletedByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given CSS\nselector to be destroyed."
									},
									"parameters": [
										{
											"id": 2266,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2264,
										"name": "Locator.waitForDeletedByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 210,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2264,
								"name": "Locator.waitForDeletedByCssSelector"
							}
						},
						{
							"id": 2267,
							"name": "waitForDeletedById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2268,
									"name": "waitForDeletedById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given ID to be\ndestroyed."
									},
									"parameters": [
										{
											"id": 2269,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The ID of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2267,
										"name": "Locator.waitForDeletedById"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 217,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2267,
								"name": "Locator.waitForDeletedById"
							}
						},
						{
							"id": 2273,
							"name": "waitForDeletedByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2274,
									"name": "waitForDeletedByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given\ncase-insensitive link text to be destroyed."
									},
									"parameters": [
										{
											"id": 2275,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2273,
										"name": "Locator.waitForDeletedByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 231,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2273,
								"name": "Locator.waitForDeletedByLinkText"
							}
						},
						{
							"id": 2270,
							"name": "waitForDeletedByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2271,
									"name": "waitForDeletedByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given name\nattribute to be destroyed."
									},
									"parameters": [
										{
											"id": 2272,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2270,
										"name": "Locator.waitForDeletedByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 224,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2270,
								"name": "Locator.waitForDeletedByName"
							}
						},
						{
							"id": 2276,
							"name": "waitForDeletedByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2277,
									"name": "waitForDeletedByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element partially matching the given\ncase-insensitive link text to be destroyed."
									},
									"parameters": [
										{
											"id": 2278,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2276,
										"name": "Locator.waitForDeletedByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 238,
									"character": 35
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2276,
								"name": "Locator.waitForDeletedByPartialLinkText"
							}
						},
						{
							"id": 2279,
							"name": "waitForDeletedByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2280,
									"name": "waitForDeletedByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given HTML tag\nname to be destroyed."
									},
									"parameters": [
										{
											"id": 2281,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2279,
										"name": "Locator.waitForDeletedByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 245,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2279,
								"name": "Locator.waitForDeletedByTagName"
							}
						},
						{
							"id": 2282,
							"name": "waitForDeletedByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2283,
									"name": "waitForDeletedByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given XPath\nselector to be destroyed."
									},
									"parameters": [
										{
											"id": 2284,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2282,
										"name": "Locator.waitForDeletedByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 252,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2282,
								"name": "Locator.waitForDeletedByXpath"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1893
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1875,
								1876,
								1877
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1898,
								1881,
								1902,
								1900
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1891,
								2059,
								1963,
								1904,
								2027,
								2140,
								2156,
								2072,
								1974,
								1961,
								2029,
								2145,
								2161,
								2061,
								2081,
								2106,
								1943,
								1948,
								2036,
								2040,
								2216,
								2219,
								2225,
								2222,
								2228,
								2231,
								2234,
								2192,
								2195,
								2198,
								2204,
								2201,
								2207,
								2210,
								2213,
								2166,
								2237,
								2240,
								2243,
								2249,
								2246,
								2252,
								2255,
								2258,
								2112,
								1883,
								2044,
								1957,
								2054,
								1933,
								2132,
								1955,
								2130,
								2022,
								1935,
								1931,
								2174,
								2179,
								2122,
								2142,
								2134,
								2148,
								2127,
								2049,
								2184,
								2032,
								2034,
								2158,
								2150,
								2164,
								1924,
								2013,
								1990,
								1984,
								1939,
								1937,
								1959,
								2109,
								2019,
								2094,
								2063,
								2086,
								2046,
								2075,
								1886,
								1941,
								2090,
								2078,
								1918,
								1906,
								1912,
								2024,
								2176,
								2181,
								2124,
								1888,
								2136,
								2051,
								2186,
								2152,
								1927,
								2005,
								1997,
								1976,
								2189,
								1966,
								1972,
								1969,
								1953,
								2083,
								2098,
								2056,
								2170,
								2261,
								2264,
								2267,
								2273,
								2270,
								2276,
								2279,
								2282
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/ProxiedSession.ts",
							"line": 18,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Session"
						}
					]
				},
				{
					"id": 2285,
					"name": "getCoverageData",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2286,
							"name": "getCoverageData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2287,
									"name": "coverageVariable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/ProxiedSession.ts",
							"line": 5,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1874
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2285
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/ProxiedSession.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2715,
			"name": "\"lib/RemoteSuite\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/RemoteSuite.ts",
			"children": [
				{
					"id": 2716,
					"name": "RemoteSuite",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "RemoteSuite is a class that acts as a local server for one or more unit test\nsuites being run in a remote browser."
					},
					"children": [
						{
							"id": 2718,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2719,
									"name": "new RemoteSuite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2720,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 384,
														"name": "SuiteOptions"
													}
												],
												"name": "Partial"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2716,
										"name": "RemoteSuite"
									},
									"overwrites": {
										"type": "reference",
										"id": 293,
										"name": "Suite.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 21,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 293,
								"name": "Suite.__constructor"
							}
						},
						{
							"id": 2739,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 68,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "CancelToken"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 285,
								"name": "Suite._cancelToken"
							}
						},
						{
							"id": 2725,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run after all the suite's tests have completed"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 22,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 271,
								"name": "Suite.after"
							},
							"implementationOf": {
								"type": "reference",
								"id": 369,
								"name": "SuiteProperties.after"
							}
						},
						{
							"id": 2726,
							"name": "afterEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run after each test has completed"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 272,
								"name": "Suite.afterEach"
							},
							"implementationOf": {
								"type": "reference",
								"id": 370,
								"name": "SuiteProperties.afterEach"
							}
						},
						{
							"id": 2727,
							"name": "async",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A convenience function that generates and returns a special\n[[lib/Deferred.Deferred]] that can be used for asynchronous testing"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 33,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2728,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2729,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2730,
															"name": "timeout",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 2,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Deferred"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 33,
													"character": 8
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 273,
								"name": "Suite.async"
							}
						},
						{
							"id": 2731,
							"name": "before",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run before any of this suite's tests are\nstarted"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 277,
								"name": "Suite.before"
							},
							"implementationOf": {
								"type": "reference",
								"id": 372,
								"name": "SuiteProperties.before"
							}
						},
						{
							"id": 2732,
							"name": "beforeEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run before each test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 278,
								"name": "Suite.beforeEach"
							},
							"implementationOf": {
								"type": "reference",
								"id": 373,
								"name": "SuiteProperties.beforeEach"
							}
						},
						{
							"id": 2733,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The error that caused this suite to fail"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 47,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 279,
								"name": "Suite.error"
							}
						},
						{
							"id": 2717,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 300,
								"name": "Suite.executor"
							}
						},
						{
							"id": 2734,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This suite's parent Suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 270,
										"name": "Suite"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 280,
								"name": "Suite.parent"
							}
						},
						{
							"id": 2735,
							"name": "publishAfterSetup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, the suite will emit a suiteStart event after the `before`\ncallback has finished, and will emit a suiteEnd event before the `after`\ncallback has finished."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 57,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 281,
								"name": "Suite.publishAfterSetup"
							},
							"implementationOf": {
								"type": "reference",
								"id": 376,
								"name": "SuiteProperties.publishAfterSetup"
							}
						},
						{
							"id": 2736,
							"name": "skipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The reason why this suite was skipped"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 60,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 282,
								"name": "Suite.skipped"
							}
						},
						{
							"id": 2737,
							"name": "tests",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The tests or other suites managed by this suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 63,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 270,
											"name": "Suite"
										},
										{
											"type": "reference",
											"id": 178,
											"name": "Test"
										}
									]
								}
							},
							"defaultValue": "[]",
							"inheritedFrom": {
								"type": "reference",
								"id": 283,
								"name": "Suite.tests"
							}
						},
						{
							"id": 2738,
							"name": "timeElapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The time required to run all the tests in this suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 66,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 284,
								"name": "Suite.timeElapsed"
							}
						},
						{
							"id": 2740,
							"name": "bail",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
							},
							"getSignature": [
								{
									"id": 2741,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 296,
										"name": "Suite.bail"
									}
								}
							],
							"setSignature": [
								{
									"id": 2742,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
									},
									"parameters": [
										{
											"id": 2743,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 296,
										"name": "Suite.bail"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 104,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 108,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 296,
								"name": "Suite.bail"
							},
							"implementationOf": {
								"type": "reference",
								"id": 371,
								"name": "SuiteProperties.bail"
							}
						},
						{
							"id": 2744,
							"name": "grep",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A regular expression used to filter, by test ID, which tests are run."
							},
							"getSignature": [
								{
									"id": 2745,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A regular expression used to filter, by test ID, which tests are run."
									},
									"type": {
										"type": "reference",
										"name": "RegExp"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 304,
										"name": "Suite.grep"
									}
								}
							],
							"setSignature": [
								{
									"id": 2746,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A regular expression used to filter, by test ID, which tests are run."
									},
									"parameters": [
										{
											"id": 2747,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "RegExp"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 304,
										"name": "Suite.grep"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 132,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 136,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 304,
								"name": "Suite.grep"
							},
							"implementationOf": {
								"type": "reference",
								"id": 374,
								"name": "SuiteProperties.grep"
							}
						},
						{
							"id": 2770,
							"name": "hasParent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether or not this suite has a parent (for parity with serialized\nSuites)."
							},
							"getSignature": [
								{
									"id": 2771,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether or not this suite has a parent (for parity with serialized\nSuites)."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 332,
										"name": "Suite.hasParent"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 280,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 332,
								"name": "Suite.hasParent"
							}
						},
						{
							"id": 2721,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Override Suite#id to exclude the RemoteSuite's name from the generated ID\nsince the RemoteSuite is just a proxy for a remote suite."
							},
							"getSignature": [
								{
									"id": 2722,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Override Suite#id to exclude the RemoteSuite's name from the generated ID\nsince the RemoteSuite is just a proxy for a remote suite."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"id": 312,
										"name": "Suite.id"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 40,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 312,
								"name": "Suite.id"
							}
						},
						{
							"id": 2748,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This suite's name"
							},
							"getSignature": [
								{
									"id": 2749,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This suite's name"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 308,
										"name": "Suite.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2750,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This suite's name"
									},
									"parameters": [
										{
											"id": 2751,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 308,
										"name": "Suite.name"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 144,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 148,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 308,
								"name": "Suite.name"
							},
							"implementationOf": {
								"type": "reference",
								"id": 375,
								"name": "SuiteProperties.name"
							}
						},
						{
							"id": 2766,
							"name": "numFailedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite and any sub-suites that\nfailed."
							},
							"getSignature": [
								{
									"id": 2767,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite and any sub-suites that\nfailed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 328,
										"name": "Suite.numFailedTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 250,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 328,
								"name": "Suite.numFailedTests"
							}
						},
						{
							"id": 2764,
							"name": "numPassedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite that passed."
							},
							"getSignature": [
								{
									"id": 2765,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite that passed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 326,
										"name": "Suite.numPassedTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 235,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 326,
								"name": "Suite.numPassedTests"
							}
						},
						{
							"id": 2768,
							"name": "numSkippedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite and any sub-suites that were\nskipped."
							},
							"getSignature": [
								{
									"id": 2769,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite and any sub-suites that were\nskipped."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 330,
										"name": "Suite.numSkippedTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 265,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 330,
								"name": "Suite.numSkippedTests"
							}
						},
						{
							"id": 2762,
							"name": "numTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this suite and any sub-suites. To get only\nthe number of tests for this suite, look at `this.tests.length`."
							},
							"getSignature": [
								{
									"id": 2763,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this suite and any sub-suites. To get only\nthe number of tests for this suite, look at `this.tests.length`."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 324,
										"name": "Suite.numTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 223,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 324,
								"name": "Suite.numTests"
							}
						},
						{
							"id": 2752,
							"name": "parentId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the suite's parent."
							},
							"getSignature": [
								{
									"id": 2753,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the suite's parent."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 314,
										"name": "Suite.parentId"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 173,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 314,
								"name": "Suite.parentId"
							}
						},
						{
							"id": 2754,
							"name": "remote",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
							},
							"getSignature": [
								{
									"id": 2755,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
									},
									"type": {
										"type": "reference",
										"id": 4093,
										"name": "Remote"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 316,
										"name": "Suite.remote"
									}
								}
							],
							"setSignature": [
								{
									"id": 2756,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
									},
									"parameters": [
										{
											"id": 2757,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4093,
												"name": "Remote"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 316,
										"name": "Suite.remote"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 186,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 192,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 316,
								"name": "Suite.remote"
							}
						},
						{
							"id": 2758,
							"name": "sessionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The sessionId of the environment in which the suite executed."
							},
							"getSignature": [
								{
									"id": 2759,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sessionId of the environment in which the suite executed."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 320,
										"name": "Suite.sessionId"
									}
								}
							],
							"setSignature": [
								{
									"id": 2760,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sessionId of the environment in which the suite executed."
									},
									"parameters": [
										{
											"id": 2761,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 320,
										"name": "Suite.sessionId"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 202,
									"character": 15
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 215,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 320,
								"name": "Suite.sessionId"
							}
						},
						{
							"id": 2772,
							"name": "timeout",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2773,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 334,
										"name": "Suite.timeout"
									}
								}
							],
							"setSignature": [
								{
									"id": 2774,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2775,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 334,
										"name": "Suite.timeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 284,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 294,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 334,
								"name": "Suite.timeout"
							},
							"implementationOf": {
								"type": "reference",
								"id": 377,
								"name": "SuiteProperties.timeout"
							}
						},
						{
							"id": 2776,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2777,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a test or suite to this suite."
									},
									"parameters": [
										{
											"id": 2778,
											"name": "suiteOrTest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 270,
														"name": "Suite"
													},
													{
														"type": "reference",
														"id": 178,
														"name": "Test"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 338,
										"name": "Suite.add"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 301,
									"character": 5
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 338,
								"name": "Suite.add"
							}
						},
						{
							"id": 2779,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2780,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancel this suite if it's in-progress.",
										"text": "This method has no effect if the Suite has finished.\n"
									},
									"parameters": [
										{
											"id": 2781,
											"name": "reason",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 346,
										"name": "Suite.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 357,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 346,
								"name": "Suite.cancel"
							}
						},
						{
							"id": 2782,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2783,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Explicity reset the suite so it may run again"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 349,
										"name": "Suite.reset"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 364,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 349,
								"name": "Suite.reset"
							}
						},
						{
							"id": 2723,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2724,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Run a suite in a remote browser."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 351,
										"name": "Suite.run"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 54,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 351,
								"name": "Suite.run"
							}
						},
						{
							"id": 2784,
							"name": "skip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2785,
									"name": "skip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Skips this suite.",
										"text": "Calling this function will cause all remaining tests in the suite to be\nskipped. If a message was provided, a reporter may report the suite’s\ntests as skipped. Skipped tests are not treated as passing or failing.\n\nIf this method is called from a test function (as this.parent.skip()),\nthe test will be immediately halted, just as if the test’s own skip\nmethod were called.\n"
									},
									"parameters": [
										{
											"id": 2786,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "If provided, will be stored in this suite's `skipped`\nproperty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"suite skipped\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 354,
										"name": "Suite.skip"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 730,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 354,
								"name": "Suite.skip"
							}
						},
						{
							"id": 2787,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2788,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 357,
										"name": "Suite.toJSON"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 737,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 357,
								"name": "Suite.toJSON"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2718
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2739,
								2725,
								2726,
								2727,
								2731,
								2732,
								2733,
								2717,
								2734,
								2735,
								2736,
								2737,
								2738
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2740,
								2744,
								2770,
								2721,
								2748,
								2766,
								2764,
								2768,
								2762,
								2752,
								2754,
								2758,
								2772
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2776,
								2779,
								2782,
								2723,
								2784,
								2787
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/RemoteSuite.ts",
							"line": 20,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 270,
							"name": "Suite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 368,
							"name": "SuiteProperties"
						}
					]
				},
				{
					"id": 2813,
					"name": "RemoteConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2818,
							"name": "bail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "By default, Intern will run all configured tests. Setting this option\nto `true` will cause Intern to stop running tests after the first failure."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 18,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1650,
								"name": "Config.bail"
							}
						},
						{
							"id": 2820,
							"name": "basePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The path to the project base. This will always end with a path separator\n(e.g., /)."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 26,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1652,
								"name": "Config.basePath"
							}
						},
						{
							"id": 2819,
							"name": "baseline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1651,
								"name": "Config.baseline"
							}
						},
						{
							"id": 2821,
							"name": "benchmark",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This property must be set to `true` for benchmark tests to run. If it is\nunset or `false`, any suites registered using the benchmark interface will\nbe ignored."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 33,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1653,
								"name": "Config.benchmark"
							}
						},
						{
							"id": 2822,
							"name": "benchmarkConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 35,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 1733,
								"name": "BenchmarkConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1654,
								"name": "Config.benchmarkConfig"
							}
						},
						{
							"id": 2823,
							"name": "browser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 37,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1724,
								"name": "ResourceConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1655,
								"name": "Config.browser"
							}
						},
						{
							"id": 2834,
							"name": "capabilities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The default capabilities for all test environments.",
								"text": "They will be extended for each environment by values in the\n[`environments`](#environments) array.\n\nCloud testing services such as BrowserStack may have unique capabilities.\nIt’s important to use the proper capabilities for the WebDriver server or\ncloud service being used to run tests.\n\n* [Selenium capabilities](https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities)\n* [BrowserStack capabilities](https://www.browserstack.com/automate/capabilities)\n* [CrossBrowserTesting capabilities](https://help.crossbrowsertesting.com/selenium-testing/automation-capabilities)\n* [Sauce Labs capabilities](https://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options#TestConfigurationOptions-Selenium-SpecificOptions) and [environments](https://saucelabs.com/platforms)\n* [TestingBot capabilities](https://testingbot.com/support/other/test-options) and [environments](https://testingbot.com/support/getting-started/browsers.html)\n\n[Chrome-specific options](https://sites.google.com/a/chromium.org/chromedriver/capabilities)\nmay be passed using a `goog:chromeOptions` capability.\n\n[Firefox-specific options](https://github.com/mozilla/geckodriver#firefox-capabilities)\nmay be passed using a `moz:firefoxOptions` capability.\n\nIntern will automatically provide certain capabilities to provide better\nfeedback with cloud service dashboards:\n\n* `name` will be set to the name of the test config\n* `build` will be set to the commit ID from the `TRAVIS_COMMIT` and\n  `BUILD_TAG` environment variables, if either exists\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 124,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2835,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 2838,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2839,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"children": [
										{
											"id": 2837,
											"name": "build",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 126,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 2836,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 125,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2837,
												2836
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/common/config.ts",
											"line": 124,
											"character": 15
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1667,
								"name": "Config.capabilities"
							}
						},
						{
							"id": 2840,
							"name": "connectTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Time to wait for contact from a remote server"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 131,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1673,
								"name": "Config.connectTimeout"
							}
						},
						{
							"id": 2841,
							"name": "coverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An array of file paths or globs that should be instrumented for code\ncoverage, or false to completely disable coverage.",
								"text": "This property should point to the actual JavaScript files that will be\nexecuted, not pre-transpiled sources (coverage results will still be\nmapped back to original sources). Coverage data will be collected for\nthese files even if they’re not loaded by Intern for tests, allowing a\ntest writer to see which files _haven’t_ been tested, as well as coverage\non files that were tested.\n\nWhen this value is unset, Intern will still look for coverage data on a\nglobal coverage variable, and it will request coverage data from remote\nsessions. Explicitly setting coverage to false will prevent Intern from\neven checking for coverage data.\n\n> 💡This property replaces the `excludeInstrumentation` property used in\nprevious versions of Intern, which acted as a filter rather than an\ninclusive list.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 153,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1674,
								"name": "Config.coverage"
							}
						},
						{
							"id": 2824,
							"name": "coverageVariable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The global variable that will be used to store coverage data"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 42,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1656,
								"name": "Config.coverageVariable"
							}
						},
						{
							"id": 2825,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "When set to true, Intern will emit 'log' events for many internal\noperations. Reporters that register for these events, such as the Runner\nreporter, will display them during testing."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 49,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1657,
								"name": "Config.debug"
							}
						},
						{
							"id": 2826,
							"name": "defaultTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This is the number of milliseconds that Intern will wait for an\n[asynchronous test](https://github.com/theintern/intern/blob/master/docs/writing_tests.md#testing-asynchronous-code)\nto complete before timing out. A timed out test is considered to have\nfailed."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 57,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1658,
								"name": "Config.defaultTimeout"
							}
						},
						{
							"id": 2827,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A description for this test run"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 60,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1659,
								"name": "Config.description"
							}
						},
						{
							"id": 2842,
							"name": "environments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The environments that will be used to run tests.",
								"text": "Its value can be a single browser name or an environment object, or an\narray of these.\n\n```js\nenvironments: 'chrome'\nenvironments: ['chrome', 'firefox']\nenvironments: { browserName: 'chrome', version: '57.0' }\nenvironments: { browserName: 'chrome', fixSessionCapabilities: false }\n```\n\nThe syntax for browser names and other properties depends on where tests\nare being run. For example, when running tests using a local Selenium\nserver, the browser name should be the lowercase name of a locally\navailable browser, such as ‘chrome’ or ‘firefox’, and other properties\nsuch as the platform name will generally be ignored. When running on a\ncloud testing service such as [Sauce Labs](https://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options#TestConfigurationOptions-RequiredSeleniumTestConfigurationSettings)\nor [BrowserStack](https://www.browserstack.com/automate/capabilities),\nbrowser names and other properties may have different acceptable values\n(e.g., ‘googlechrome’ instead of ‘chrome’, or ‘MacOS’ vs ‘OSX’).\n\nThe [fixSessionCapabilities](https://theintern.io/docs.html#Leadfoot/2/api/Server/fixsessioncapabilities)\nproperty determines whether feature and defect tests will be run in the\nremote browser. Setting it to `false` entirely disables feature tests\n(assuming that all features are enabled), while setting it to\n`'no-detect'` will set certain already-known feature and defect flags\nbased on the browser and platform. The current set of capabilities are\navailable on `this.remote.session.capabilities` in functional tests.\n\n> 💡Note that 'node' is an environment. If no environments are specified,\nthe Node executor will automatically add 'node' to the resolved config.\nIf any environments are specified, though, unit tests will only be run in\nthis environments.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 191,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1742,
									"name": "EnvironmentSpec"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1675,
								"name": "Config.environments"
							}
						},
						{
							"id": 2843,
							"name": "excludeInstrumentation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 194,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1676,
								"name": "Config.excludeInstrumentation"
							}
						},
						{
							"id": 2828,
							"name": "filterErrorStack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, filter external library calls and runtime calls out of error\nstacks."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 66,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1660,
								"name": "Config.filterErrorStack"
							}
						},
						{
							"id": 2844,
							"name": "functionalBaseUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The base URL to use for relative addresses in functional tests"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 197,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1677,
								"name": "Config.functionalBaseUrl"
							}
						},
						{
							"id": 2845,
							"name": "functionalCoverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to collect coverage data from functional tests"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 200,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1678,
								"name": "Config.functionalCoverage"
							}
						},
						{
							"id": 2846,
							"name": "functionalRetries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of times to rerun failed sessions when at least one other session succeeds"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 203,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1679,
								"name": "Config.functionalRetries"
							}
						},
						{
							"id": 2847,
							"name": "functionalSuites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of paths or glob expressions that point to functional suites.",
								"text": "Functional suites are files that register\n[WebDriver tests](writing_tests.md).\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 211,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1680,
								"name": "Config.functionalSuites"
							}
						},
						{
							"id": 2848,
							"name": "functionalTimeouts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Default timeout values for functional tests",
								"text": "  * **find** is the time to wait for findBy commands to find an element\n  * **executeAsync** is the time to wait for executeAsync calls to\n    complete\n  * **pageLoad** is the time to wait for a page to finish loading\n    synchronous resources\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 222,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2849,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2850,
											"name": "connectTimeout",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 224,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 2852,
											"name": "executeAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Time to wait for an executeAsync to complete"
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 230,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2851,
											"name": "find",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Time to wait for a findBy command to find a matching element"
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 227,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2853,
											"name": "pageLoad",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Time to wait for initial page load to complete"
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 233,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2850,
												2852,
												2851,
												2853
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/common/config.ts",
											"line": 222,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1681,
								"name": "Config.functionalTimeouts"
							}
						},
						{
							"id": 2829,
							"name": "grep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This property is a regular expression that is used to filter which tests\nare run. Grep operates on test IDs. A test ID is the concatenation of a\ntest name with all of its parent suite names. Every test ID that matches\nthe current grep expression will be run."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 74,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "RegExp"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1661,
								"name": "Config.grep"
							}
						},
						{
							"id": 2854,
							"name": "heartbeatInterval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "How often to send a heartbeat message to a remote browser, in seconds"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 237,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1687,
								"name": "Config.heartbeatInterval"
							}
						},
						{
							"id": 2855,
							"name": "instrumenterOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An object containing options for the\n[Istanbul instrumenter](https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter)."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 243,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2856,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 2857,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2858,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/common/config.ts",
											"line": 243,
											"character": 22
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1688,
								"name": "Config.instrumenterOptions"
							}
						},
						{
							"id": 2830,
							"name": "internPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The path to Intern. This will always end with a path separator (e.g., /)."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 79,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1662,
								"name": "Config.internPath"
							}
						},
						{
							"id": 2859,
							"name": "leaveRemoteOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to leave the remote browser open after testing.",
								"text": "Normally when Intern runs tests on remote browsers, it shuts the browser\ndown when testing is finished. However, you may sometimes want to inspect\nthe state of a remote browser after tests have run, particularly if\nyou're trying to debug why a test is failing. Setting `leaveRemoteOpen`\nto true will cause Intern to leave the browser open after testing.\nSetting it to `'fail'` will cause Intern to leave it open only if there\nwere test failures.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 256,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "fail"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1692,
								"name": "Config.leaveRemoteOpen"
							}
						},
						{
							"id": 2869,
							"name": "loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The loader used to load test suites and application modules.",
								"text": "When passed in as part of a config object, the `loader` property can be a\nstring with a loader name or the path to a loader script. It may also be\nan object with `script` and `config` properties. Intern provides built-in\nloader scripts for Dojo and Dojo2, which can be specified with the IDs\n'dojo' and 'dojo2'.\n\n```ts\nloader: 'dojo2'\nloader: 'tests/loader.js'\nloader: {\n    script: 'dojo',\n    config: {\n        packages: [\n            { name: 'app', location: './js' }\n        ]\n    }\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 423,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1736,
								"name": "LoaderDescriptor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1705,
								"name": "ResourceConfig.loader"
							}
						},
						{
							"id": 2860,
							"name": "maxConcurrency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of concurrent remote test sessions to run at once.",
								"text": "The default value is Infinity, meaning Intern will try to run all of its\ntest sessions in parallel. Note that cloud testing services often limit\nthe number of concurrent sessions they will allow to 2 or 5.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 265,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1693,
								"name": "Config.maxConcurrency"
							}
						},
						{
							"id": 2831,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A top-level name for this configuration."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 82,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1663,
								"name": "Config.name"
							}
						},
						{
							"id": 2832,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 84,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 1724,
								"name": "ResourceConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1664,
								"name": "Config.node"
							}
						},
						{
							"id": 2871,
							"name": "plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of scripts or modules to load before suites are loaded."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 467,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1716,
									"name": "PluginDescriptor"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1707,
								"name": "ResourceConfig.plugins"
							}
						},
						{
							"id": 2861,
							"name": "proxy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A proxy that should be used for outgoing web connections. If specified,\nthis will be used for Intern's WebDriver client instead of the Dig Dug\ntunnel's proxy value."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 272,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1694,
								"name": "Config.proxy"
							}
						},
						{
							"id": 2862,
							"name": "remoteOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Options to pass to the remote runner."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 277,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 1746,
								"name": "RemoteOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1695,
								"name": "Config.remoteOptions"
							}
						},
						{
							"id": 2870,
							"name": "reporters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of reporter names or descriptors.",
								"text": "Reporters specified in this list must have been previously installed\nusing\n[`registerReporter`](https://theintern.io/docs.html#Intern/4/api/lib%2Fexecutors%2FExecutor/registerreporter)\nor\n[`registerPlugin`](https://theintern.io/docs.html#Intern/4/api/lib%2Fexecutors%2FExecutor/registerplugin).\n\nList entries may be reporter names or objects of the format\n\n```js\n{\n    name: 'reporter name',\n    options: {\n        // reporter-specific options\n    }\n}\n```\n\nThe built-in reporters under Node are:\n  * benchmark - output benchmark test results\n  * cobertura - output coverage data in the cobertura format\n  * htmlcoverage - output coverage data as an HTML report\n  * jsoncoverage - output coverage data in a JSON format\n  * junit - output results in JUnit format\n  * lcov - output coverage results in lcov format\n  * pretty - draw text results in a terminal\n  * runner - output test results as formatted text (default Node reporter)\n  * simple - output test results as simple text\n  * teamcity - output results in TeamCity format\n\nThe built-in reporters available in browsers are:\n  * console - output to the browser console\n  * dom - output results as text in the DOM\n  * html - output a pretty HTML report (default browser reporter)\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 462,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1713,
									"name": "ReporterDescriptor"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1706,
								"name": "ResourceConfig.reporters"
							}
						},
						{
							"id": 2874,
							"name": "require",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 494,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1710,
								"name": "ResourceConfig.require"
							}
						},
						{
							"id": 2875,
							"name": "requires",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 495,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1711,
								"name": "ResourceConfig.requires"
							}
						},
						{
							"id": 2816,
							"name": "runInSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 324,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 1696,
								"name": "Config.runInSync"
							}
						},
						{
							"id": 2876,
							"name": "scripts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 496,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1712,
								"name": "ResourceConfig.scripts"
							}
						},
						{
							"id": 2863,
							"name": "serveOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, start Intern's static test server but do not run any tests."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 286,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1697,
								"name": "Config.serveOnly"
							}
						},
						{
							"id": 2864,
							"name": "serverPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The port Intern's static server will listen on during functional tests."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 291,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1698,
								"name": "Config.serverPort"
							}
						},
						{
							"id": 2814,
							"name": "serverUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 322,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 1699,
								"name": "Config.serverUrl"
							}
						},
						{
							"id": 2815,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 323,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 1665,
								"name": "Config.sessionId"
							}
						},
						{
							"id": 2833,
							"name": "showConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, display the resolved config and exit"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 93,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1666,
								"name": "Config.showConfig"
							}
						},
						{
							"id": 2817,
							"name": "socketPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 325,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 1700,
								"name": "Config.socketPort"
							}
						},
						{
							"id": 2872,
							"name": "suites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of paths or glob expressions that point to suite scripts.",
								"text": "```js\n{\n    suites: [\n        'tests/unit/**\\/*.js',\n        'tests/intergration/request.js'\n    ]\n}\n```\n\nNote that using globs with the browser client requires that Intern's\nserver be used to serve the tests. The server can be run in standalone\nmode by setting the `serveOnly` option.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 485,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1708,
								"name": "ResourceConfig.suites"
							}
						},
						{
							"id": 2873,
							"name": "tsconfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An optional path to a tsconfig for ts-node, or false if TypeScript\nsupport is not needed. This option can be used if tests need to use a\ndifferent tsconfig than the project uses normally."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 492,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "false"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1709,
								"name": "ResourceConfig.tsconfig"
							}
						},
						{
							"id": 2865,
							"name": "tunnel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The Dig Dug tunnel class to use for WebDriver testing.",
								"text": "There are several built in tunnel types, and others can be added through\nthe Node executor’s [`registerPlugin`\nmethod](./architecture.md#extension-points).\n\nThe built in tunnel classes are:\n\n* 'null'\n* 'selenium'\n* 'browserstack'\n* 'cbt' (CrossBrowserTesting)\n* 'saucelabs'\n* 'testingbot'\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 324,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1701,
								"name": "Config.tunnel"
							}
						},
						{
							"id": 2866,
							"name": "tunnelOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Options for the currently selected tunnel.",
								"text": "The available options depend on the current tunnel. Common options\ninclude:\n\n** All tunnels**\n\n| Property   | Value                                                    |\n| :---       | :---                                                     |\n| `username` | Username for the tunnel service (e.g., BrowserStack)     |\n| `apiKey`   | API key for the tunnel service (e.g., BrowserStack)      |\n| `pathname` | The path for the tunnel’s REST endpoint (e.g., `wd/hub`) |\n\n**Selenium tunnel**\n\n| Property  | Value                                                                   |\n| :---      | :---                                                                    |\n| `drivers` | A list of driver names, or objects with `name` and `options` properties |\n| `verbose` | If true, show tunnel debug information                                  |\n\nSee also:\n\n* [[https://theintern.io/docs.html#Dig%20Dug/2/api/Tunnel/tunnelproperties|Tunnel]]\n* [[https://theintern.io/docs.html#Dig%20Dug/2/api/SeleniumTunnel/seleniumproperties|SeleniumTunnel]]\n* [[https://theintern.io/docs.html#Dig%20Dug/2/api/BrowserStackTunnel/browserstackproperties|BrowserStackTunnel]]\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 353,
									"character": 15
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "TunnelOptions"
									},
									{
										"type": "reference",
										"name": "BrowserStackOptions"
									},
									{
										"type": "reference",
										"name": "SeleniumOptions"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1702,
								"name": "Config.tunnelOptions"
							}
						},
						{
							"id": 2868,
							"name": "warnOnUncaughtException",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "By default, an Intern session will fail if the Executor catches a\nbrowser-level unhandled error. This setting allows unhandled errors to be\ntreated as warnings instead of failing errors. If this setting is true or\nset to a RegExp that matches an unhandled error, Intern will emit a warning\nrather than failing the test run."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 371,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "RegExp"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1704,
								"name": "Config.warnOnUncaughtException"
							}
						},
						{
							"id": 2867,
							"name": "warnOnUnhandledRejection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "By default, an Intern session will fail if the Executor catches a\nbrowser-level unhandled Promise rejection. This setting allows unhandled\nrejections to be treated as warnings instead of failing errors. If this\nsetting is true or set to a RegExp that matches the reason for an unhandled\nrejection, Intern will emit a warning rather than failing the test run."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 362,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "RegExp"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1703,
								"name": "Config.warnOnUnhandledRejection"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2818,
								2820,
								2819,
								2821,
								2822,
								2823,
								2834,
								2840,
								2841,
								2824,
								2825,
								2826,
								2827,
								2842,
								2843,
								2828,
								2844,
								2845,
								2846,
								2847,
								2848,
								2829,
								2854,
								2855,
								2830,
								2859,
								2869,
								2860,
								2831,
								2832,
								2871,
								2861,
								2862,
								2870,
								2874,
								2875,
								2816,
								2876,
								2863,
								2864,
								2814,
								2815,
								2833,
								2817,
								2872,
								2873,
								2865,
								2866,
								2868,
								2867
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/RemoteSuite.ts",
							"line": 321,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1649,
							"name": "Config"
						}
					]
				},
				{
					"id": 2789,
					"name": "RemoteEvents",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2797,
							"name": "*",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A listener can listen for this event to be notified of all events"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1084,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"id": 1446,
								"name": "ExecutorEvent"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1450,
								"name": "Events.'*'"
							}
						},
						{
							"id": 2798,
							"name": "afterRun",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted after the local executor has finished running suites. This is\nfunctionally the same as runEnd."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1090,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1451,
								"name": "Events.afterRun"
							}
						},
						{
							"id": 2799,
							"name": "beforeRun",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted before the local executor loads suites"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1093,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1452,
								"name": "Events.beforeRun"
							}
						},
						{
							"id": 2800,
							"name": "coverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Coverage info has been gathered"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1096,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1438,
								"name": "CoverageMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1453,
								"name": "Events.coverage"
							}
						},
						{
							"id": 2801,
							"name": "deprecated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A deprecated method was called"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1099,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1442,
								"name": "DeprecationMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1454,
								"name": "Events.deprecated"
							}
						},
						{
							"id": 2802,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An unhandled error occurs"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1102,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Error"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1455,
								"name": "Events.error"
							}
						},
						{
							"id": 2803,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A debug log event"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1105,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1456,
								"name": "Events.log"
							}
						},
						{
							"id": 2790,
							"name": "remoteStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/RemoteSuite.ts",
									"line": 318,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2804,
							"name": "runEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All tests have finished running. This is functionally the same as\nafterRun."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1111,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1457,
								"name": "Events.runEnd"
							}
						},
						{
							"id": 2805,
							"name": "runStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted just before tests start running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1114,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1458,
								"name": "Events.runStart"
							}
						},
						{
							"id": 2791,
							"name": "serverEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test server has stopped"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1123,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 3500,
								"name": "Server"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2791,
								"name": "NodeEvents.serverEnd"
							}
						},
						{
							"id": 2792,
							"name": "serverStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test server was started"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1126,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 3500,
								"name": "Server"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2792,
								"name": "NodeEvents.serverStart"
							}
						},
						{
							"id": 2806,
							"name": "suiteAdd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A new suite has been added"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1117,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1459,
								"name": "Events.suiteAdd"
							}
						},
						{
							"id": 2807,
							"name": "suiteEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite has fininshed running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1460,
								"name": "Events.suiteEnd"
							}
						},
						{
							"id": 2808,
							"name": "suiteStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite has started running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1123,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1461,
								"name": "Events.suiteStart"
							}
						},
						{
							"id": 2809,
							"name": "testAdd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A new test has been added"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1126,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1462,
								"name": "Events.testAdd"
							}
						},
						{
							"id": 2810,
							"name": "testEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test has finished"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1129,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1463,
								"name": "Events.testEnd"
							}
						},
						{
							"id": 2811,
							"name": "testStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test has started"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1132,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1464,
								"name": "Events.testStart"
							}
						},
						{
							"id": 2793,
							"name": "tunnelDownloadProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted as a Tunnel executable download is in process"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1129,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2793,
								"name": "NodeEvents.tunnelDownloadProgress"
							}
						},
						{
							"id": 2794,
							"name": "tunnelStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A WebDriver tunnel has been opened"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1132,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2794,
								"name": "NodeEvents.tunnelStart"
							}
						},
						{
							"id": 2795,
							"name": "tunnelStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A status update from a WebDriver tunnel"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1135,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2795,
								"name": "NodeEvents.tunnelStatus"
							}
						},
						{
							"id": 2796,
							"name": "tunnelStop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A WebDriver tunnel has been stopped"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1138,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2796,
								"name": "NodeEvents.tunnelStop"
							}
						},
						{
							"id": 2812,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A non-fatal error occurred"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1135,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1465,
								"name": "Events.warning"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2797,
								2798,
								2799,
								2800,
								2801,
								2802,
								2803,
								2790,
								2804,
								2805,
								2791,
								2792,
								2806,
								2807,
								2808,
								2809,
								2810,
								2811,
								2793,
								2794,
								2795,
								2796,
								2812
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/RemoteSuite.ts",
							"line": 317,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 4542,
							"name": "NodeEvents"
						}
					]
				},
				{
					"id": 2877,
					"name": "intern",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/RemoteSuite.ts",
							"line": 14,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"id": 2545,
						"name": "Browser"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2716
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2813,
						2789
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2877
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/RemoteSuite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3492,
			"name": "\"lib/Server\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/Server.ts",
			"children": [
				{
					"id": 3500,
					"name": "Server",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3519,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3520,
									"name": "new Server",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3521,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3555,
												"name": "ServerOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3500,
										"name": "Server"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 59,
									"character": 54
								}
							]
						},
						{
							"id": 3509,
							"name": "_app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 53,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "express.Express"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3510,
							"name": "_httpServer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 54,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HttpServer"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3511,
							"name": "_sessions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 55,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3512,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3513,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3514,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3515,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3516,
																	"name": "listeners",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/Server.ts",
																			"line": 56,
																			"character": 33
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 3551,
																			"name": "ServerListener"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3516
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/Server.ts",
																	"line": 56,
																	"character": 21
																}
															]
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/Server.ts",
													"line": 56,
													"character": 5
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3518,
							"name": "_wsPingTimers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 59,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Timer"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3517,
							"name": "_wsServer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 58,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Server"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3502,
							"name": "basePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Base path to resolve file requests against"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 32,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3546,
								"name": "ServerProperties.basePath"
							}
						},
						{
							"id": 3501,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Executor managing this Server"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 29,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3547,
								"name": "ServerProperties.executor"
							}
						},
						{
							"id": 3503,
							"name": "port",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Port to use for HTTP connections"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 35,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3548,
								"name": "ServerProperties.port"
							}
						},
						{
							"id": 3504,
							"name": "runInSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, wait for emit handlers to complete before responding to a\nmessage"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 41,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3549,
								"name": "ServerProperties.runInSync"
							}
						},
						{
							"id": 3506,
							"name": "socketPingInterval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Time in ms between websocket keepalive pings"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 47,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3505,
							"name": "socketPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Port to use for WebSocket connections"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3550,
								"name": "ServerProperties.socketPort"
							}
						},
						{
							"id": 3507,
							"name": "stopped",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3508,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 49,
									"character": 13
								}
							]
						},
						{
							"id": 3522,
							"name": "start",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3523,
									"name": "start",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 73,
									"character": 7
								}
							]
						},
						{
							"id": 3524,
							"name": "stop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3525,
									"name": "stop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 245,
									"character": 6
								}
							]
						},
						{
							"id": 3526,
							"name": "subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3527,
									"name": "subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Listen for all events for a specific session"
									},
									"parameters": [
										{
											"id": 3528,
											"name": "sessionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3529,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3551,
												"name": "ServerListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 281,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3519
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3509,
								3510,
								3511,
								3518,
								3517,
								3502,
								3501,
								3503,
								3504,
								3506,
								3505
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3507
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3522,
								3524,
								3526
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Server.ts",
							"line": 27,
							"character": 27
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 3545,
							"name": "ServerProperties"
						}
					]
				},
				{
					"id": 3493,
					"name": "Context",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3495,
							"name": "basePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 22,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3496,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 23,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							}
						},
						{
							"id": 3494,
							"name": "stopped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 21,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3497,
							"name": "handleMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3498,
									"name": "handleMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3499,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3460,
												"name": "Message"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 24,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3495,
								3496,
								3494
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3497
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Server.ts",
							"line": 20,
							"character": 24
						}
					]
				},
				{
					"id": 3551,
					"name": "ServerListener",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3552,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 3553,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3554,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Server.ts",
							"line": 397,
							"character": 31
						}
					]
				},
				{
					"id": 3545,
					"name": "ServerProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3546,
							"name": "basePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 390,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3547,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 391,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							}
						},
						{
							"id": 3548,
							"name": "port",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 392,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3549,
							"name": "runInSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 393,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3550,
							"name": "socketPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Server.ts",
									"line": 394,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3546,
								3547,
								3548,
								3549,
								3550
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Server.ts",
							"line": 389,
							"character": 33
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 3500,
							"name": "Server"
						}
					]
				},
				{
					"id": 3555,
					"name": "ServerOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Server.ts",
							"line": 401,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3545,
										"name": "ServerProperties"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3556,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3557,
											"name": "executor",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Server.ts",
													"line": 401,
													"character": 66
												}
											],
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3557
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/Server.ts",
											"line": 401,
											"character": 55
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3558,
					"name": "resolvedPromise",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Server.ts",
							"line": 403,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					},
					"defaultValue": "Promise.resolve()"
				},
				{
					"id": 3559,
					"name": "getShouldWait",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3560,
							"name": "getShouldWait",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Indicate whether Server should wait for an event to process before sending an\nacknowlegement."
							},
							"parameters": [
								{
									"id": 3561,
									"name": "waitMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								},
								{
									"id": 3562,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3460,
										"name": "Message"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Server.ts",
							"line": 409,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3500
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3493,
						3551,
						3545
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3555
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3558
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3559
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/Server.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 269,
			"name": "\"lib/Suite\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/Suite.ts",
			"children": [
				{
					"id": 270,
					"name": "Suite",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Suite class manages a group of tests."
					},
					"children": [
						{
							"id": 293,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 294,
									"name": "new Suite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 295,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "an object with default property values\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 384,
														"name": "SuiteOptions"
													},
													{
														"type": "reference",
														"id": 389,
														"name": "RootSuiteOptions"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 76,
									"character": 39
								}
							]
						},
						{
							"id": 285,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 68,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "CancelToken"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 271,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run after all the suite's tests have completed"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 22,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 369,
								"name": "SuiteProperties.after"
							}
						},
						{
							"id": 272,
							"name": "afterEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run after each test has completed"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 370,
								"name": "SuiteProperties.afterEach"
							}
						},
						{
							"id": 273,
							"name": "async",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A convenience function that generates and returns a special\n[[lib/Deferred.Deferred]] that can be used for asynchronous testing"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 33,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 274,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 275,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 276,
															"name": "timeout",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 2,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Deferred"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 33,
													"character": 8
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 277,
							"name": "before",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run before any of this suite's tests are\nstarted"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 372,
								"name": "SuiteProperties.before"
							}
						},
						{
							"id": 278,
							"name": "beforeEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An optional method that is run before each test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 373,
								"name": "SuiteProperties.beforeEach"
							}
						},
						{
							"id": 279,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The error that caused this suite to fail"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 47,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 280,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This suite's parent Suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 270,
										"name": "Suite"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 281,
							"name": "publishAfterSetup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, the suite will emit a suiteStart event after the `before`\ncallback has finished, and will emit a suiteEnd event before the `after`\ncallback has finished."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 57,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"implementationOf": {
								"type": "reference",
								"id": 376,
								"name": "SuiteProperties.publishAfterSetup"
							}
						},
						{
							"id": 282,
							"name": "skipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The reason why this suite was skipped"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 60,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 283,
							"name": "tests",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The tests or other suites managed by this suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 63,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 270,
											"name": "Suite"
										},
										{
											"type": "reference",
											"id": 178,
											"name": "Test"
										}
									]
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 284,
							"name": "timeElapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The time required to run all the tests in this suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 66,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 296,
							"name": "bail",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
							},
							"getSignature": [
								{
									"id": 297,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"setSignature": [
								{
									"id": 298,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A flag used to indicate whether a test run should stop after a failed\ntest."
									},
									"parameters": [
										{
											"id": 299,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 104,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 108,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 371,
								"name": "SuiteProperties.bail"
							}
						},
						{
							"id": 300,
							"name": "executor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The executor used to run this Suite."
							},
							"getSignature": [
								{
									"id": 301,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The executor used to run this Suite."
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								}
							],
							"setSignature": [
								{
									"id": 302,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The executor used to run this Suite."
									},
									"parameters": [
										{
											"id": 303,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 115,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 120,
									"character": 14
								}
							]
						},
						{
							"id": 304,
							"name": "grep",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A regular expression used to filter, by test ID, which tests are run."
							},
							"getSignature": [
								{
									"id": 305,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A regular expression used to filter, by test ID, which tests are run."
									},
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								}
							],
							"setSignature": [
								{
									"id": 306,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A regular expression used to filter, by test ID, which tests are run."
									},
									"parameters": [
										{
											"id": 307,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "RegExp"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 132,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 136,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 374,
								"name": "SuiteProperties.grep"
							}
						},
						{
							"id": 332,
							"name": "hasParent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether or not this suite has a parent (for parity with serialized\nSuites)."
							},
							"getSignature": [
								{
									"id": 333,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether or not this suite has a parent (for parity with serialized\nSuites)."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 280,
									"character": 15
								}
							]
						},
						{
							"id": 312,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the suite, assuming all combinations of suite +\ntest are unique."
							},
							"getSignature": [
								{
									"id": 313,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the suite, assuming all combinations of suite +\ntest are unique."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 159,
									"character": 8
								}
							]
						},
						{
							"id": 308,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This suite's name"
							},
							"getSignature": [
								{
									"id": 309,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This suite's name"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"setSignature": [
								{
									"id": 310,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This suite's name"
									},
									"parameters": [
										{
											"id": 311,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 144,
									"character": 10
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 148,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 375,
								"name": "SuiteProperties.name"
							}
						},
						{
							"id": 328,
							"name": "numFailedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite and any sub-suites that\nfailed."
							},
							"getSignature": [
								{
									"id": 329,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite and any sub-suites that\nfailed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 250,
									"character": 20
								}
							]
						},
						{
							"id": 326,
							"name": "numPassedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite that passed."
							},
							"getSignature": [
								{
									"id": 327,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite that passed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 235,
									"character": 20
								}
							]
						},
						{
							"id": 330,
							"name": "numSkippedTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this test suite and any sub-suites that were\nskipped."
							},
							"getSignature": [
								{
									"id": 331,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this test suite and any sub-suites that were\nskipped."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 265,
									"character": 21
								}
							]
						},
						{
							"id": 324,
							"name": "numTests",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total number of tests in this suite and any sub-suites. To get only\nthe number of tests for this suite, look at `this.tests.length`."
							},
							"getSignature": [
								{
									"id": 325,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The total number of tests in this suite and any sub-suites. To get only\nthe number of tests for this suite, look at `this.tests.length`."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 223,
									"character": 14
								}
							]
						},
						{
							"id": 314,
							"name": "parentId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the suite's parent."
							},
							"getSignature": [
								{
									"id": 315,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the suite's parent."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 173,
									"character": 14
								}
							]
						},
						{
							"id": 316,
							"name": "remote",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
							},
							"getSignature": [
								{
									"id": 317,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
									},
									"type": {
										"type": "reference",
										"id": 4093,
										"name": "Remote"
									}
								}
							],
							"setSignature": [
								{
									"id": 318,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment. This value is\nonly guaranteed to exist from the before/beforeEach/afterEach/after and\ntest methods, since environments are not instantiated until they are\nactually ready to be tested against."
									},
									"parameters": [
										{
											"id": 319,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4093,
												"name": "Remote"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 186,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 192,
									"character": 12
								}
							]
						},
						{
							"id": 320,
							"name": "sessionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The sessionId of the environment in which the suite executed."
							},
							"getSignature": [
								{
									"id": 321,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sessionId of the environment in which the suite executed."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 322,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sessionId of the environment in which the suite executed."
									},
									"parameters": [
										{
											"id": 323,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 202,
									"character": 15
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 215,
									"character": 15
								}
							]
						},
						{
							"id": 334,
							"name": "timeout",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 335,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"setSignature": [
								{
									"id": 336,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 337,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 284,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 294,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 377,
								"name": "SuiteProperties.timeout"
							}
						},
						{
							"id": 338,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 339,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a test or suite to this suite."
									},
									"parameters": [
										{
											"id": 340,
											"name": "suiteOrTest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 270,
														"name": "Suite"
													},
													{
														"type": "reference",
														"id": 178,
														"name": "Test"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 301,
									"character": 5
								}
							]
						},
						{
							"id": 346,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 347,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancel this suite if it's in-progress.",
										"text": "This method has no effect if the Suite has finished.\n"
									},
									"parameters": [
										{
											"id": 348,
											"name": "reason",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 357,
									"character": 8
								}
							]
						},
						{
							"id": 349,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 350,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Explicity reset the suite so it may run again"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 364,
									"character": 7
								}
							]
						},
						{
							"id": 351,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 352,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Runs test suite in order:",
										"text": "* before\n* (for each test)\n  * beforeEach\n  * test\n  * afterEach\n* after\n\nIf before, beforeEach, afterEach, or after throw, the suite itself will\nbe marked as failed and no further tests in the suite will be executed.\n"
									},
									"parameters": [
										{
											"id": 353,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "CancelToken"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 383,
									"character": 5
								}
							]
						},
						{
							"id": 354,
							"name": "skip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 355,
									"name": "skip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Skips this suite.",
										"text": "Calling this function will cause all remaining tests in the suite to be\nskipped. If a message was provided, a reporter may report the suite’s\ntests as skipped. Skipped tests are not treated as passing or failing.\n\nIf this method is called from a test function (as this.parent.skip()),\nthe test will be immediately halted, just as if the test’s own skip\nmethod were called.\n"
									},
									"parameters": [
										{
											"id": 356,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "If provided, will be stored in this suite's `skipped`\nproperty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"suite skipped\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 730,
									"character": 6
								}
							]
						},
						{
							"id": 357,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 358,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 737,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								293
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								285,
								271,
								272,
								273,
								277,
								278,
								279,
								280,
								281,
								282,
								283,
								284
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								296,
								300,
								304,
								332,
								312,
								308,
								328,
								326,
								330,
								324,
								314,
								316,
								320,
								334
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								338,
								346,
								349,
								351,
								354,
								357
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 18,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1076,
							"name": "BenchmarkSuite"
						},
						{
							"type": "reference",
							"id": 2716,
							"name": "RemoteSuite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 368,
							"name": "SuiteProperties"
						}
					]
				},
				{
					"id": 359,
					"name": "SuiteLifecycleFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 360,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 361,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								},
								{
									"id": 362,
									"name": "suite",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 789,
							"character": 39
						}
					]
				},
				{
					"id": 368,
					"name": "SuiteProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Properties that can be set on a Suite.",
						"text": "Note that 'tests' isn't included so that other interfaces, such as the object\ninterface, can use a different definition for it.\n"
					},
					"children": [
						{
							"id": 369,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 804,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 370,
							"name": "afterEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 805,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 371,
							"name": "bail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 806,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 372,
							"name": "before",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 807,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 359,
										"name": "SuiteLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 373,
							"name": "beforeEach",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 808,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 363,
										"name": "TestLifecycleFunction"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 374,
							"name": "grep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 809,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "RegExp"
							}
						},
						{
							"id": 375,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 810,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 376,
							"name": "publishAfterSetup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 811,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 377,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Suite.ts",
									"line": 812,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								369,
								370,
								371,
								372,
								373,
								374,
								375,
								376,
								377
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 803,
							"character": 32
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1155,
							"name": "BenchmarkSuiteProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1076,
							"name": "BenchmarkSuite"
						},
						{
							"type": "reference",
							"id": 2716,
							"name": "RemoteSuite"
						},
						{
							"type": "reference",
							"id": 270,
							"name": "Suite"
						}
					]
				},
				{
					"id": 363,
					"name": "TestLifecycleFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 364,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 365,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								},
								{
									"id": 366,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								},
								{
									"id": 367,
									"name": "suite",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 793,
							"character": 38
						}
					]
				},
				{
					"id": 394,
					"name": "LifecycleMethod",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A suite lifecycle method"
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 840,
							"character": 27
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 270,
									"name": "Suite"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "stringLiteral",
											"value": "before"
										},
										{
											"type": "stringLiteral",
											"value": "after"
										},
										{
											"type": "stringLiteral",
											"value": "beforeEach"
										},
										{
											"type": "stringLiteral",
											"value": "afterEach"
										}
									]
								}
							],
							"name": "Pick"
						}
					}
				},
				{
					"id": 389,
					"name": "RootSuiteOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Options that can be passed into a Suite constructor to initialize a root\nsuite"
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 828,
							"character": 28
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 368,
										"name": "SuiteProperties"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 390,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 391,
											"name": "executor",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 829,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 392,
											"name": "tests",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 830,
													"character": 7
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 270,
															"name": "Suite"
														},
														{
															"type": "reference",
															"id": 178,
															"name": "Test"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												391,
												392
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/Suite.ts",
											"line": 828,
											"character": 57
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 384,
					"name": "SuiteOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Options that can be passed into a Suite constructor to initialize a suite"
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 818,
							"character": 24
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 368,
										"name": "SuiteProperties"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 385,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 386,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 819,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 387,
											"name": "parent",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 820,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										},
										{
											"id": 388,
											"name": "tests",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Suite.ts",
													"line": 821,
													"character": 7
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 270,
															"name": "Suite"
														},
														{
															"type": "reference",
															"id": 178,
															"name": "Test"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												386,
												387,
												388
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/Suite.ts",
											"line": 818,
											"character": 53
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 393,
					"name": "BAIL_REASON",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 835,
							"character": 17
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "bailed"
					},
					"defaultValue": "\"bailed\""
				},
				{
					"id": 381,
					"name": "isFailedSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 382,
							"name": "isFailedSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 383,
									"name": "suite",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 785,
							"character": 29
						}
					]
				},
				{
					"id": 378,
					"name": "isSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 379,
							"name": "isSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 380,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "Suite"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Suite.ts",
							"line": 779,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						270
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						359,
						368,
						363
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						394,
						389,
						384
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						393
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						381,
						378
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/Suite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 177,
			"name": "\"lib/Test\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/Test.ts",
			"children": [
				{
					"id": 178,
					"name": "Test",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A Test is a single unit or functional test."
					},
					"children": [
						{
							"id": 194,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 195,
									"name": "new Test",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 196,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 261,
														"name": "TestOptions"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 197,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 199,
																	"name": "hasPassed",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/Test.ts",
																			"line": 59,
																			"character": 60
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "false"
																			},
																			{
																				"type": "intrinsic",
																				"name": "true"
																			}
																		]
																	}
																},
																{
																	"id": 198,
																	"name": "timeElapsed",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/Test.ts",
																			"line": 59,
																			"character": 40
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		199,
																		198
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/Test.ts",
																	"line": 59,
																	"character": 26
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 56,
									"character": 32
								}
							]
						},
						{
							"id": 189,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 46,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "CancelToken"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 185,
							"name": "_hasPassed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 38,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 186,
							"name": "_isAsync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 40,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 188,
							"name": "_runPromise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 44,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 190,
							"name": "_timeElapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 48,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 187,
							"name": "_timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 42,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 192,
							"name": "_timer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 54,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 193,
							"name": "_usesRemote",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 56,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 183,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The error that caused this Test to fail"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 33,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 179,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The name of this test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 21,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 247,
								"name": "TestProperties.name"
							}
						},
						{
							"id": 180,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This test's parent Suite"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 24,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"implementationOf": {
								"type": "reference",
								"id": 248,
								"name": "TestProperties.parent"
							}
						},
						{
							"id": 181,
							"name": "skipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If this test was skipped, this will contain a message indicating why"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 27,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 249,
								"name": "TestProperties.skipped"
							}
						},
						{
							"id": 184,
							"name": "suiteError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite lifecycle error that occurred after executing this Test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 36,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 182,
							"name": "test",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The test function that is run by this Test"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 30,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 241,
								"name": "TestFunction"
							},
							"implementationOf": {
								"type": "reference",
								"id": 250,
								"name": "TestProperties.test"
							}
						},
						{
							"id": 200,
							"name": "executor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The executor running this test."
							},
							"getSignature": [
								{
									"id": 201,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The executor running this test."
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 79,
									"character": 14
								}
							]
						},
						{
							"id": 202,
							"name": "hasPassed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "True if the test function completed successfully"
							},
							"getSignature": [
								{
									"id": 203,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "True if the test function completed successfully"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 86,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 246,
								"name": "TestProperties.hasPassed"
							}
						},
						{
							"id": 204,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the test, assuming all combinations of suite +\ntest are unique."
							},
							"getSignature": [
								{
									"id": 205,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the test, assuming all combinations of suite +\ntest are unique."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 94,
									"character": 8
								}
							]
						},
						{
							"id": 206,
							"name": "isAsync",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, this Test's test function is async"
							},
							"getSignature": [
								{
									"id": 207,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "If true, this Test's test function is async"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 108,
									"character": 13
								}
							]
						},
						{
							"id": 208,
							"name": "parentId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique identifier of the test's parent."
							},
							"getSignature": [
								{
									"id": 209,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The unique identifier of the test's parent."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 115,
									"character": 14
								}
							]
						},
						{
							"id": 210,
							"name": "remote",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The WebDriver interface for driving a remote environment.",
								"tags": [
									{
										"tag": "see",
										"text": "Suite#remote\n"
									}
								]
							},
							"getSignature": [
								{
									"id": 211,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The WebDriver interface for driving a remote environment.",
										"tags": [
											{
												"tag": "see",
												"text": "Suite#remote\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 4093,
										"name": "Remote"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 123,
									"character": 12
								}
							]
						},
						{
							"id": 212,
							"name": "sessionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for the test session this Test is running in."
							},
							"getSignature": [
								{
									"id": 213,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "An identifier for the test session this Test is running in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 131,
									"character": 15
								}
							]
						},
						{
							"id": 214,
							"name": "timeElapsed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of milliseconds the test function took to complete."
							},
							"getSignature": [
								{
									"id": 215,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The number of milliseconds the test function took to complete."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 138,
									"character": 17
								}
							]
						},
						{
							"id": 216,
							"name": "timeout",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of milliseconds this test can run before it will be cancelled."
							},
							"getSignature": [
								{
									"id": 217,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The number of milliseconds this test can run before it will be cancelled."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"setSignature": [
								{
									"id": 218,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The number of milliseconds this test can run before it will be cancelled."
									},
									"parameters": [
										{
											"id": 219,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 145,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 155,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 251,
								"name": "TestProperties.timeout"
							}
						},
						{
							"id": 220,
							"name": "async",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 221,
									"name": "async",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This is a convenience function that generates and returns a special\n[[lib/Deferred.Deferred]] that can be used for asynchronous testing.",
										"text": "Once this method is called, a test is assumed to be asynchronous no\nmatter its return value (the generated Deferred's promise will always be\nused as the implied return value if a promise is not returned by the test\nfunction).\n\nThe optional `numCallsUntilResolution` argument to `async` affects how the\ncallback method operates. By default, the Deferred is resolved (assuming\nit hasn’t already been rejected) the first time the function returned by\n`callback` is called. If `numCallsUntilResolution` is set (it must be a\nvalue > 0), the function returned by `callback` must be called\n`numCallsUntilResolution` times before the Deferred resolves.\n",
										"returns": "a lib/Deferred that can be used to resolve the test\n"
									},
									"parameters": [
										{
											"id": 222,
											"name": "timeout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "If provided, the amount of time to wait before rejecting\nthe test with a timeout error, in milliseconds."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 223,
											"name": "numCallsUntilResolution",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The number of times that resolve needs to\nbe called before the Deferred is actually resolved."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Deferred"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 181,
									"character": 7
								}
							]
						},
						{
							"id": 224,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 225,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancel this test if it's in-progress.",
										"text": "This method has no effect if the Test has finished.\n"
									},
									"parameters": [
										{
											"id": 226,
											"name": "reason",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 206,
									"character": 8
								}
							]
						},
						{
							"id": 227,
							"name": "restartTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 228,
									"name": "restartTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "During an asynchronous test run, restarts the timeout timer."
									},
									"parameters": [
										{
											"id": 229,
											"name": "timeout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 213,
									"character": 16
								}
							]
						},
						{
							"id": 230,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 231,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Runs the test."
									},
									"parameters": [
										{
											"id": 232,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "CancelToken"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 235,
									"character": 5
								}
							]
						},
						{
							"id": 233,
							"name": "skip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 234,
									"name": "skip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Skips this test.",
										"text": "Calling this function will cause a test to halt immediately. If a message\nwas provided, a reporter may report the test as skipped. Skipped tests\nare not treated as passing or failing.\n"
									},
									"parameters": [
										{
											"id": 235,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "If provided, will be stored in this test's `skipped`\nproperty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"skipped\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 352,
									"character": 6
								}
							]
						},
						{
							"id": 236,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 237,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Return a JSON-representation of this test"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 238,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 239,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 240,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 360,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								194
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189,
								185,
								186,
								188,
								190,
								187,
								192,
								193,
								183,
								179,
								180,
								181,
								184,
								182
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								200,
								202,
								204,
								206,
								208,
								210,
								212,
								214,
								216
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								220,
								224,
								227,
								230,
								233,
								236
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 19,
							"character": 25
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 612,
							"name": "BenchmarkTest"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 245,
							"name": "TestProperties"
						}
					]
				},
				{
					"id": 241,
					"name": "TestFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 242,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 243,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								},
								{
									"id": 244,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "Test"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 409,
							"character": 29
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 677,
							"name": "BenchmarkTestFunction"
						}
					]
				},
				{
					"id": 245,
					"name": "TestProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 246,
							"name": "hasPassed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 418,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 247,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 419,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 248,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							}
						},
						{
							"id": 249,
							"name": "skipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 421,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 250,
							"name": "test",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 422,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 241,
								"name": "TestFunction"
							}
						},
						{
							"id": 251,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/Test.ts",
									"line": 423,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								246,
								247,
								248,
								249,
								250,
								251
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 417,
							"character": 31
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 694,
							"name": "BenchmarkTestProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 612,
							"name": "BenchmarkTest"
						},
						{
							"type": "reference",
							"id": 178,
							"name": "Test"
						}
					]
				},
				{
					"id": 261,
					"name": "TestOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 426,
							"character": 23
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 245,
										"name": "TestProperties"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 262,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 263,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Test.ts",
													"line": 427,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 264,
											"name": "test",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/Test.ts",
													"line": 428,
													"character": 6
												}
											],
											"type": {
												"type": "reference",
												"id": 241,
												"name": "TestFunction"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												263,
												264
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/Test.ts",
											"line": 426,
											"character": 51
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 265,
					"name": "SKIP",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 431,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 266,
					"name": "isSkip",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 267,
							"name": "isSkip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 268,
									"name": "reason",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 433,
							"character": 22
						}
					]
				},
				{
					"id": 252,
					"name": "isTest",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 253,
							"name": "isTest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 254,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "Test"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 392,
							"character": 22
						}
					]
				},
				{
					"id": 258,
					"name": "isTestFunction",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 259,
							"name": "isTestFunction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 260,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TestFunction"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 413,
							"character": 30
						}
					]
				},
				{
					"id": 255,
					"name": "isTestOptions",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 256,
							"name": "isTestOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 257,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TestOptions"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/Test.ts",
							"line": 400,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						178
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						241,
						245
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						261
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						265
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						266,
						252,
						258,
						255
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/Test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4719,
			"name": "\"lib/browser/shim\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/browser/shim.ts",
			"children": [
				{
					"id": 4720,
					"name": "global",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/shim.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "<any>window"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4720
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/browser/shim.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2288,
			"name": "\"lib/browser/util\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/browser/util.ts",
			"children": [
				{
					"id": 2306,
					"name": "Url",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Parse a URL"
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 132,
							"character": 15
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2307,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 2313,
									"name": "hash",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/lib/browser/util.ts",
											"line": 138,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2309,
									"name": "hostname",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/lib/browser/util.ts",
											"line": 134,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2311,
									"name": "path",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/lib/browser/util.ts",
											"line": 136,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2310,
									"name": "port",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/lib/browser/util.ts",
											"line": 135,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2308,
									"name": "protocol",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/lib/browser/util.ts",
											"line": 133,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2312,
									"name": "query",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/lib/browser/util.ts",
											"line": 137,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2313,
										2309,
										2311,
										2310,
										2308,
										2312
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/browser/util.ts",
									"line": 132,
									"character": 17
								}
							]
						}
					}
				},
				{
					"id": 2289,
					"name": "getConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2290,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Resolve the user-supplied config data, which may include query args and a\nconfig file."
							},
							"parameters": [
								{
									"id": 2291,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2292,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2293,
													"name": "config",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/browser/util.ts",
															"line": 58,
															"character": 29
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2294,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"indexSignature": [
																{
																	"id": 2295,
																	"name": "__index",
																	"kind": 8192,
																	"kindString": "Index signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 2296,
																			"name": "key",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												},
												{
													"id": 2297,
													"name": "file",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/browser/util.ts",
															"line": 58,
															"character": 35
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2293,
														2297
													]
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 15,
							"character": 25
						}
					]
				},
				{
					"id": 2298,
					"name": "getDefaultBasePath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2299,
							"name": "getDefaultBasePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return a base path based on the current location pathname"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 64,
							"character": 34
						}
					]
				},
				{
					"id": 2317,
					"name": "loadText",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2318,
							"name": "loadText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Load a text resource"
							},
							"parameters": [
								{
									"id": 2319,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 161,
							"character": 17
						}
					]
				},
				{
					"id": 2300,
					"name": "normalizePath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2301,
							"name": "normalizePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Normalize a path (e.g., resolve '..')"
							},
							"parameters": [
								{
									"id": 2302,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 80,
							"character": 29
						}
					]
				},
				{
					"id": 2303,
					"name": "parseQuery",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2304,
							"name": "parseQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parse a query string and return a set of decoded name=value pairs"
							},
							"parameters": [
								{
									"id": 2305,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 111,
							"character": 26
						}
					]
				},
				{
					"id": 2314,
					"name": "parseUrl",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2315,
							"name": "parseUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 2316,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2306,
										"name": "Url"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 140,
							"character": 24
						}
					]
				},
				{
					"id": 2320,
					"name": "resolvePath",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2321,
							"name": "resolvePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve a path against a base path"
							},
							"parameters": [
								{
									"id": 2322,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2323,
									"name": "basePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/browser/util.ts",
							"line": 173,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2306
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2289,
						2298,
						2317,
						2300,
						2303,
						2314,
						2320
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/browser/util.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3440,
			"name": "\"lib/channels/Base\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/channels/Base.ts",
			"children": [
				{
					"id": 3441,
					"name": "BaseChannel",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 3444,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3445,
									"name": "new BaseChannel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3446,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3455,
												"name": "ChannelOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3441,
										"name": "BaseChannel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 5,
									"character": 29
								}
							]
						},
						{
							"id": 3443,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 5,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3442,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 4,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3451,
							"name": "_sendData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 3452,
									"name": "_sendData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3453,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 2789,
													"name": "RemoteEvents"
												}
											}
										},
										{
											"id": 3454,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 28,
									"character": 30
								}
							]
						},
						{
							"id": 3447,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3448,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Send a message, or schedule it to be sent. Return a promise that resolves\nwhen the message has been sent."
									},
									"parameters": [
										{
											"id": 3449,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 2789,
													"name": "RemoteEvents"
												}
											}
										},
										{
											"id": 3450,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 16,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3444
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3443,
								3442
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3451,
								3447
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/Base.ts",
							"line": 3,
							"character": 41
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 4630,
							"name": "WebSocketChannel"
						},
						{
							"type": "reference",
							"id": 4668,
							"name": "HttpChannel"
						}
					]
				},
				{
					"id": 3455,
					"name": "ChannelOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3458,
							"name": "port",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A websocket port\nA WebSocket port"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 41,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 60,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 3456,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 35,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 56,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3459,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A timeout for websocket responses\nA timeout for WebSocket responses"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 44,
									"character": 9
								},
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 63,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 3457,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An HTTP URL that the testing host can be reached at"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 38,
									"character": 5
								},
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 57,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3458,
								3456,
								3459,
								3457
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/Base.ts",
							"line": 34,
							"character": 31
						},
						{
							"fileName": "packages/core/src/lib/channels/Base.ts",
							"line": 55,
							"character": 31
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 4689,
							"name": "HttpChannelOptions"
						}
					]
				},
				{
					"id": 3460,
					"name": "Message",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3464,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 70,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3462,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3463,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 69,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3461,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 67,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3464,
								3462,
								3463,
								3461
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/Base.ts",
							"line": 66,
							"character": 24
						}
					]
				},
				{
					"id": 3465,
					"name": "isChannel",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3466,
							"name": "isChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 3467,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "BaseChannel"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/Base.ts",
							"line": 47,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3441
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3455,
						3460
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3465
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/channels/Base.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4667,
			"name": "\"lib/channels/Http\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/channels/Http.ts",
			"children": [
				{
					"id": 4668,
					"name": "HttpChannel",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4674,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4675,
									"name": "new HttpChannel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4676,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4689,
												"name": "HttpChannelOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4668,
										"name": "HttpChannel"
									},
									"overwrites": {
										"type": "reference",
										"id": 3444,
										"name": "BaseChannel.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 11,
									"character": 53
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3444,
								"name": "BaseChannel.__constructor"
							}
						},
						{
							"id": 4673,
							"name": "_activeRequest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 11,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 4669,
							"name": "_lastRequest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 7,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 4672,
							"name": "_maxPostSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 10,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4670,
							"name": "_messageBuffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 8,
									"character": 26
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4695,
									"name": "MessageEntry"
								}
							}
						},
						{
							"id": 4671,
							"name": "_sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 9,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4684,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 5,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3443,
								"name": "BaseChannel.sessionId"
							}
						},
						{
							"id": 4683,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 4,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3442,
								"name": "BaseChannel.url"
							}
						},
						{
							"id": 4677,
							"name": "_sendData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4678,
									"name": "_sendData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4679,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 2789,
													"name": "RemoteEvents"
												}
											}
										},
										{
											"id": 4680,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 3451,
										"name": "BaseChannel._sendData"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 21,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3451,
								"name": "BaseChannel._sendData"
							}
						},
						{
							"id": 4681,
							"name": "_sendMessages",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4682,
									"name": "_sendMessages",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Some testing services have problems handling large message POSTs, so\nlimit the maximum size of each POST body to maxPostSize bytes. Always\nsend at least one message, even if it's more than maxPostSize bytes."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 45,
									"character": 25
								}
							]
						},
						{
							"id": 4685,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4686,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Send a message, or schedule it to be sent. Return a promise that resolves\nwhen the message has been sent."
									},
									"parameters": [
										{
											"id": 4687,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 2789,
													"name": "RemoteEvents"
												}
											}
										},
										{
											"id": 4688,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3447,
										"name": "BaseChannel.sendMessage"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 16,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3447,
								"name": "BaseChannel.sendMessage"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4674
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4673,
								4669,
								4672,
								4670,
								4671,
								4684,
								4683
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4677,
								4681,
								4685
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/Http.ts",
							"line": 6,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3441,
							"name": "BaseChannel"
						}
					]
				},
				{
					"id": 4689,
					"name": "HttpChannelOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4690,
							"name": "maxPostSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 98,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4693,
							"name": "port",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A websocket port"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 41,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 3458,
								"name": "ChannelOptions.port"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3458,
								"name": "ChannelOptions.port"
							}
						},
						{
							"id": 4691,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 35,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 3456,
								"name": "ChannelOptions.sessionId"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3456,
								"name": "ChannelOptions.sessionId"
							}
						},
						{
							"id": 4694,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A timeout for websocket responses"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 3459,
								"name": "ChannelOptions.timeout"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3459,
								"name": "ChannelOptions.timeout"
							}
						},
						{
							"id": 4692,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An HTTP URL that the testing host can be reached at"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 38,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 3457,
								"name": "ChannelOptions.url"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3457,
								"name": "ChannelOptions.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4690,
								4693,
								4691,
								4694,
								4692
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/Http.ts",
							"line": 97,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3455,
							"name": "ChannelOptions"
						}
					]
				},
				{
					"id": 4695,
					"name": "MessageEntry",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4696,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 102,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4701,
							"name": "reject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 104,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4702,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 4703,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 4704,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Error"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/channels/Http.ts",
											"line": 104,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 4697,
							"name": "resolve",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Http.ts",
									"line": 103,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4698,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 4699,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 4700,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/channels/Http.ts",
											"line": 103,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4696,
								4701,
								4697
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/Http.ts",
							"line": 101,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4668
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4689,
						4695
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/channels/Http.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4629,
			"name": "\"lib/channels/WebSocket\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/channels/WebSocket.ts",
			"children": [
				{
					"id": 4630,
					"name": "WebSocketChannel",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4648,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4649,
									"name": "new WebSocketChannel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4650,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3455,
												"name": "ChannelOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4630,
										"name": "WebSocketChannel"
									},
									"overwrites": {
										"type": "reference",
										"id": 3444,
										"name": "BaseChannel.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 17,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3444,
								"name": "BaseChannel.__constructor"
							}
						},
						{
							"id": 4646,
							"name": "_ready",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 16,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 4633,
							"name": "_sendQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 11,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4634,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 4635,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 4636,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4637,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 4642,
																	"name": "reject",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/channels/WebSocket.ts",
																			"line": 13,
																			"character": 47
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 4643,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"signatures": [
																				{
																					"id": 4644,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {
																						"isExported": true
																					},
																					"parameters": [
																						{
																							"id": 4645,
																							"name": "error",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {
																								"isExported": true
																							},
																							"type": {
																								"type": "reference",
																								"name": "Error"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "void"
																					}
																				}
																			],
																			"sources": [
																				{
																					"fileName": "packages/core/src/lib/channels/WebSocket.ts",
																					"line": 13,
																					"character": 48
																				}
																			]
																		}
																	}
																},
																{
																	"id": 4638,
																	"name": "resolve",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/channels/WebSocket.ts",
																			"line": 13,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 4639,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"signatures": [
																				{
																					"id": 4640,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {
																						"isExported": true
																					},
																					"parameters": [
																						{
																							"id": 4641,
																							"name": "value",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {
																								"isExported": true
																							},
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "void"
																					}
																				}
																			],
																			"sources": [
																				{
																					"fileName": "packages/core/src/lib/channels/WebSocket.ts",
																					"line": 13,
																					"character": 18
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		4642,
																		4638
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/channels/WebSocket.ts",
																	"line": 13,
																	"character": 7
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/channels/WebSocket.ts",
											"line": 11,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 4647,
							"name": "_sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 17,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4632,
							"name": "_socket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 10,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "WebSocket"
							}
						},
						{
							"id": 4662,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 5,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3443,
								"name": "BaseChannel.sessionId"
							}
						},
						{
							"id": 4631,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Time to wait for response before rejecting a send"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4661,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 4,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3442,
								"name": "BaseChannel.url"
							}
						},
						{
							"id": 4658,
							"name": "_handleError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4659,
									"name": "_handleError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4660,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 87,
									"character": 24
								}
							]
						},
						{
							"id": 4655,
							"name": "_handleMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4656,
									"name": "_handleMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4657,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 81,
									"character": 26
								}
							]
						},
						{
							"id": 4651,
							"name": "_sendData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4652,
									"name": "_sendData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4653,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4654,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 3451,
										"name": "BaseChannel._sendData"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/WebSocket.ts",
									"line": 54,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3451,
								"name": "BaseChannel._sendData"
							}
						},
						{
							"id": 4663,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4664,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Send a message, or schedule it to be sent. Return a promise that resolves\nwhen the message has been sent."
									},
									"parameters": [
										{
											"id": 4665,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 2789,
													"name": "RemoteEvents"
												}
											}
										},
										{
											"id": 4666,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3447,
										"name": "BaseChannel.sendMessage"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/channels/Base.ts",
									"line": 16,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3447,
								"name": "BaseChannel.sendMessage"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4648
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4646,
								4633,
								4647,
								4632,
								4662,
								4631,
								4661
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4658,
								4655,
								4651,
								4663
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/channels/WebSocket.ts",
							"line": 6,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3441,
							"name": "BaseChannel"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4630
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/channels/WebSocket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 395,
			"name": "\"lib/common/ErrorFormatter\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/common/ErrorFormatter.ts",
			"children": [
				{
					"id": 396,
					"name": "ErrorFormatter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 398,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 399,
									"name": "new ErrorFormatter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 400,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 396,
										"name": "ErrorFormatter"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 7,
									"character": 30
								}
							]
						},
						{
							"id": 397,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 7,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							},
							"implementationOf": {
								"type": "reference",
								"id": 431,
								"name": "ErrorFormatterProperties.executor"
							}
						},
						{
							"id": 408,
							"name": "_createDiff",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 409,
									"name": "_createDiff",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a unified diff to explain the difference between two objects.",
										"returns": "A unified diff formatted string representing the difference\nbetween the two objects.\n"
									},
									"parameters": [
										{
											"id": 410,
											"name": "actual",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The actual result."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 411,
											"name": "expected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The expected result."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 412,
									"name": "_createDiff",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 413,
											"name": "actual",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 414,
											"name": "expected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 118,
									"character": 23
								},
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 119,
									"character": 23
								},
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 120,
									"character": 23
								}
							]
						},
						{
							"id": 415,
							"name": "_formatLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 416,
									"name": "_formatLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Return a trace line in a standardized format."
									},
									"parameters": [
										{
											"id": 417,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 418,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 419,
															"name": "func",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
																	"line": 151,
																	"character": 36
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														},
														{
															"id": 420,
															"name": "source",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
																	"line": 151,
																	"character": 53
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																419,
																420
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
															"line": 151,
															"character": 29
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 151,
									"character": 23
								}
							]
						},
						{
							"id": 405,
							"name": "_getSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 406,
									"name": "_getSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 407,
											"name": "tracepath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 103,
									"character": 22
								}
							]
						},
						{
							"id": 421,
							"name": "_normalizeStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 422,
									"name": "_normalizeStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Parse a stack trace, apply any source mappings, and normalize its format."
									},
									"parameters": [
										{
											"id": 423,
											"name": "stack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 165,
									"character": 32
								}
							]
						},
						{
							"id": 424,
							"name": "_processChromeTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 425,
									"name": "_processChromeTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process Chrome, Opera, and IE traces.",
										"text": "Ex)\n  at Object._updateExpressionOptions (AxiomEditor.js:511)\n  at Object.<anonymous> (AxiomEditor.js:291)\n  at Function.m.emit (dojo.js.uncompressed.js:8875)\n"
									},
									"parameters": [
										{
											"id": 426,
											"name": "lines",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 205,
									"character": 31
								}
							]
						},
						{
							"id": 427,
							"name": "_processSafariTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 428,
									"name": "_processSafariTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process Safari and Firefox traces.",
										"text": "Ex)\n  _updateExpressionOptions@http://localhost:8080/AxiomEditor.js:511:49\n  http://localhost:8080/AxiomEditor.js:291:34\n  dispatchEvent@[native code]\n  emit@http://ajax.googleapis.com/ajax/libs/dojo/1.12.2/dojo/dojo.js:118:282\n"
									},
									"parameters": [
										{
											"id": 429,
											"name": "lines",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 227,
									"character": 31
								}
							]
						},
						{
							"id": 401,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 402,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a full error message from a plain Error object, avoiding\nduplicate error messages that might be caused by different opinions on\nwhat a stack trace should look like.",
										"returns": "A string message describing the error.\n"
									},
									"parameters": [
										{
											"id": 403,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "An object describing the error."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Error"
													},
													{
														"type": "reference",
														"id": 31,
														"name": "InternError"
													}
												]
											}
										},
										{
											"id": 404,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 21,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								398
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								397
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								408,
								415,
								405,
								421,
								424,
								427,
								401
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
							"line": 6,
							"character": 35
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1816,
							"name": "NodeErrorFormatter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 430,
							"name": "ErrorFormatterProperties"
						}
					]
				},
				{
					"id": 432,
					"name": "ErrorFormatOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 433,
							"name": "space",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 252,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								433
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
							"line": 251,
							"character": 35
						}
					]
				},
				{
					"id": 430,
					"name": "ErrorFormatterProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 431,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 248,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								431
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
							"line": 247,
							"character": 41
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 396,
							"name": "ErrorFormatter"
						},
						{
							"type": "reference",
							"id": 1816,
							"name": "NodeErrorFormatter"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						396
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						432,
						430
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1648,
			"name": "\"lib/common/config\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/common/config.ts",
			"children": [
				{
					"id": 1733,
					"name": "BenchmarkConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1734,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 500,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1734
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 499,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reflection",
							"declaration": {
								"id": 1735,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "packages/core/src/lib/common/config.ts",
										"line": 499,
										"character": 40
									}
								]
							}
						}
					]
				},
				{
					"id": 1649,
					"name": "Config",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This interface describes the configuration data used by Intern. Its\nproperties can be set from the command line when running the intern bin\nscript, or via an object passed to the executor's\n[[lib/executors/Executor.Executor.configure]] method."
					},
					"children": [
						{
							"id": 1650,
							"name": "bail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "By default, Intern will run all configured tests. Setting this option\nto `true` will cause Intern to stop running tests after the first failure."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 18,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1652,
							"name": "basePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The path to the project base. This will always end with a path separator\n(e.g., /)."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 26,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1651,
							"name": "baseline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1653,
							"name": "benchmark",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This property must be set to `true` for benchmark tests to run. If it is\nunset or `false`, any suites registered using the benchmark interface will\nbe ignored."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 33,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1654,
							"name": "benchmarkConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 35,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 1733,
								"name": "BenchmarkConfig"
							}
						},
						{
							"id": 1655,
							"name": "browser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 37,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1724,
								"name": "ResourceConfig"
							}
						},
						{
							"id": 1667,
							"name": "capabilities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The default capabilities for all test environments.",
								"text": "They will be extended for each environment by values in the\n[`environments`](#environments) array.\n\nCloud testing services such as BrowserStack may have unique capabilities.\nIt’s important to use the proper capabilities for the WebDriver server or\ncloud service being used to run tests.\n\n* [Selenium capabilities](https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities)\n* [BrowserStack capabilities](https://www.browserstack.com/automate/capabilities)\n* [CrossBrowserTesting capabilities](https://help.crossbrowsertesting.com/selenium-testing/automation-capabilities)\n* [Sauce Labs capabilities](https://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options#TestConfigurationOptions-Selenium-SpecificOptions) and [environments](https://saucelabs.com/platforms)\n* [TestingBot capabilities](https://testingbot.com/support/other/test-options) and [environments](https://testingbot.com/support/getting-started/browsers.html)\n\n[Chrome-specific options](https://sites.google.com/a/chromium.org/chromedriver/capabilities)\nmay be passed using a `goog:chromeOptions` capability.\n\n[Firefox-specific options](https://github.com/mozilla/geckodriver#firefox-capabilities)\nmay be passed using a `moz:firefoxOptions` capability.\n\nIntern will automatically provide certain capabilities to provide better\nfeedback with cloud service dashboards:\n\n* `name` will be set to the name of the test config\n* `build` will be set to the commit ID from the `TRAVIS_COMMIT` and\n  `BUILD_TAG` environment variables, if either exists\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 124,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1668,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1671,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1672,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"children": [
										{
											"id": 1670,
											"name": "build",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 126,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1669,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 125,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1670,
												1669
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/common/config.ts",
											"line": 124,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 1673,
							"name": "connectTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Time to wait for contact from a remote server"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 131,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1674,
							"name": "coverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An array of file paths or globs that should be instrumented for code\ncoverage, or false to completely disable coverage.",
								"text": "This property should point to the actual JavaScript files that will be\nexecuted, not pre-transpiled sources (coverage results will still be\nmapped back to original sources). Coverage data will be collected for\nthese files even if they’re not loaded by Intern for tests, allowing a\ntest writer to see which files _haven’t_ been tested, as well as coverage\non files that were tested.\n\nWhen this value is unset, Intern will still look for coverage data on a\nglobal coverage variable, and it will request coverage data from remote\nsessions. Explicitly setting coverage to false will prevent Intern from\neven checking for coverage data.\n\n> 💡This property replaces the `excludeInstrumentation` property used in\nprevious versions of Intern, which acted as a filter rather than an\ninclusive list.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 153,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1656,
							"name": "coverageVariable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The global variable that will be used to store coverage data"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 42,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1657,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "When set to true, Intern will emit 'log' events for many internal\noperations. Reporters that register for these events, such as the Runner\nreporter, will display them during testing."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 49,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1658,
							"name": "defaultTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This is the number of milliseconds that Intern will wait for an\n[asynchronous test](https://github.com/theintern/intern/blob/master/docs/writing_tests.md#testing-asynchronous-code)\nto complete before timing out. A timed out test is considered to have\nfailed."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 57,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1659,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A description for this test run"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 60,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1675,
							"name": "environments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The environments that will be used to run tests.",
								"text": "Its value can be a single browser name or an environment object, or an\narray of these.\n\n```js\nenvironments: 'chrome'\nenvironments: ['chrome', 'firefox']\nenvironments: { browserName: 'chrome', version: '57.0' }\nenvironments: { browserName: 'chrome', fixSessionCapabilities: false }\n```\n\nThe syntax for browser names and other properties depends on where tests\nare being run. For example, when running tests using a local Selenium\nserver, the browser name should be the lowercase name of a locally\navailable browser, such as ‘chrome’ or ‘firefox’, and other properties\nsuch as the platform name will generally be ignored. When running on a\ncloud testing service such as [Sauce Labs](https://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options#TestConfigurationOptions-RequiredSeleniumTestConfigurationSettings)\nor [BrowserStack](https://www.browserstack.com/automate/capabilities),\nbrowser names and other properties may have different acceptable values\n(e.g., ‘googlechrome’ instead of ‘chrome’, or ‘MacOS’ vs ‘OSX’).\n\nThe [fixSessionCapabilities](https://theintern.io/docs.html#Leadfoot/2/api/Server/fixsessioncapabilities)\nproperty determines whether feature and defect tests will be run in the\nremote browser. Setting it to `false` entirely disables feature tests\n(assuming that all features are enabled), while setting it to\n`'no-detect'` will set certain already-known feature and defect flags\nbased on the browser and platform. The current set of capabilities are\navailable on `this.remote.session.capabilities` in functional tests.\n\n> 💡Note that 'node' is an environment. If no environments are specified,\nthe Node executor will automatically add 'node' to the resolved config.\nIf any environments are specified, though, unit tests will only be run in\nthis environments.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 191,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1742,
									"name": "EnvironmentSpec"
								}
							}
						},
						{
							"id": 1676,
							"name": "excludeInstrumentation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 194,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						{
							"id": 1660,
							"name": "filterErrorStack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, filter external library calls and runtime calls out of error\nstacks."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 66,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1677,
							"name": "functionalBaseUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The base URL to use for relative addresses in functional tests"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 197,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1678,
							"name": "functionalCoverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to collect coverage data from functional tests"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 200,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1679,
							"name": "functionalRetries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of times to rerun failed sessions when at least one other session succeeds"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 203,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1680,
							"name": "functionalSuites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of paths or glob expressions that point to functional suites.",
								"text": "Functional suites are files that register\n[WebDriver tests](writing_tests.md).\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 211,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1681,
							"name": "functionalTimeouts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Default timeout values for functional tests",
								"text": "  * **find** is the time to wait for findBy commands to find an element\n  * **executeAsync** is the time to wait for executeAsync calls to\n    complete\n  * **pageLoad** is the time to wait for a page to finish loading\n    synchronous resources\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 222,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1682,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1683,
											"name": "connectTimeout",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 224,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1685,
											"name": "executeAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Time to wait for an executeAsync to complete"
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 230,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 1684,
											"name": "find",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Time to wait for a findBy command to find a matching element"
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 227,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 1686,
											"name": "pageLoad",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Time to wait for initial page load to complete"
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/config.ts",
													"line": 233,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1683,
												1685,
												1684,
												1686
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/common/config.ts",
											"line": 222,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 1661,
							"name": "grep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This property is a regular expression that is used to filter which tests\nare run. Grep operates on test IDs. A test ID is the concatenation of a\ntest name with all of its parent suite names. Every test ID that matches\nthe current grep expression will be run."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 74,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "RegExp"
							}
						},
						{
							"id": 1687,
							"name": "heartbeatInterval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "How often to send a heartbeat message to a remote browser, in seconds"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 237,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1688,
							"name": "instrumenterOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An object containing options for the\n[Istanbul instrumenter](https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter)."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 243,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1689,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1690,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1691,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/common/config.ts",
											"line": 243,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 1662,
							"name": "internPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The path to Intern. This will always end with a path separator (e.g., /)."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 79,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1692,
							"name": "leaveRemoteOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to leave the remote browser open after testing.",
								"text": "Normally when Intern runs tests on remote browsers, it shuts the browser\ndown when testing is finished. However, you may sometimes want to inspect\nthe state of a remote browser after tests have run, particularly if\nyou're trying to debug why a test is failing. Setting `leaveRemoteOpen`\nto true will cause Intern to leave the browser open after testing.\nSetting it to `'fail'` will cause Intern to leave it open only if there\nwere test failures.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 256,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "fail"
									}
								]
							}
						},
						{
							"id": 1705,
							"name": "loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The loader used to load test suites and application modules.",
								"text": "When passed in as part of a config object, the `loader` property can be a\nstring with a loader name or the path to a loader script. It may also be\nan object with `script` and `config` properties. Intern provides built-in\nloader scripts for Dojo and Dojo2, which can be specified with the IDs\n'dojo' and 'dojo2'.\n\n```ts\nloader: 'dojo2'\nloader: 'tests/loader.js'\nloader: {\n    script: 'dojo',\n    config: {\n        packages: [\n            { name: 'app', location: './js' }\n        ]\n    }\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 423,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1736,
								"name": "LoaderDescriptor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1705,
								"name": "ResourceConfig.loader"
							}
						},
						{
							"id": 1693,
							"name": "maxConcurrency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of concurrent remote test sessions to run at once.",
								"text": "The default value is Infinity, meaning Intern will try to run all of its\ntest sessions in parallel. Note that cloud testing services often limit\nthe number of concurrent sessions they will allow to 2 or 5.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 265,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1663,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A top-level name for this configuration."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 82,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1664,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 84,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 1724,
								"name": "ResourceConfig"
							}
						},
						{
							"id": 1707,
							"name": "plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of scripts or modules to load before suites are loaded."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 467,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1716,
									"name": "PluginDescriptor"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1707,
								"name": "ResourceConfig.plugins"
							}
						},
						{
							"id": 1694,
							"name": "proxy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A proxy that should be used for outgoing web connections. If specified,\nthis will be used for Intern's WebDriver client instead of the Dig Dug\ntunnel's proxy value."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 272,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1695,
							"name": "remoteOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Options to pass to the remote runner."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 277,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 1746,
								"name": "RemoteOptions"
							}
						},
						{
							"id": 1706,
							"name": "reporters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of reporter names or descriptors.",
								"text": "Reporters specified in this list must have been previously installed\nusing\n[`registerReporter`](https://theintern.io/docs.html#Intern/4/api/lib%2Fexecutors%2FExecutor/registerreporter)\nor\n[`registerPlugin`](https://theintern.io/docs.html#Intern/4/api/lib%2Fexecutors%2FExecutor/registerplugin).\n\nList entries may be reporter names or objects of the format\n\n```js\n{\n    name: 'reporter name',\n    options: {\n        // reporter-specific options\n    }\n}\n```\n\nThe built-in reporters under Node are:\n  * benchmark - output benchmark test results\n  * cobertura - output coverage data in the cobertura format\n  * htmlcoverage - output coverage data as an HTML report\n  * jsoncoverage - output coverage data in a JSON format\n  * junit - output results in JUnit format\n  * lcov - output coverage results in lcov format\n  * pretty - draw text results in a terminal\n  * runner - output test results as formatted text (default Node reporter)\n  * simple - output test results as simple text\n  * teamcity - output results in TeamCity format\n\nThe built-in reporters available in browsers are:\n  * console - output to the browser console\n  * dom - output results as text in the DOM\n  * html - output a pretty HTML report (default browser reporter)\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 462,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1713,
									"name": "ReporterDescriptor"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1706,
								"name": "ResourceConfig.reporters"
							}
						},
						{
							"id": 1710,
							"name": "require",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 494,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1710,
								"name": "ResourceConfig.require"
							}
						},
						{
							"id": 1711,
							"name": "requires",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 495,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1711,
								"name": "ResourceConfig.requires"
							}
						},
						{
							"id": 1696,
							"name": "runInSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, a remote will wait for reponses from Intern for any executor\nevents."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 283,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1712,
							"name": "scripts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 496,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1712,
								"name": "ResourceConfig.scripts"
							}
						},
						{
							"id": 1697,
							"name": "serveOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, start Intern's static test server but do not run any tests."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 286,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1698,
							"name": "serverPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The port Intern's static server will listen on during functional tests."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 291,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1699,
							"name": "serverUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The URL a remote should use to access Intern's static server. By default\nthis is http://localhost:9000, but the domain or port may be different if\nIntern is behind a proxy."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 298,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1665,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this test session. By default it will have the value\n''."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 90,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1666,
							"name": "showConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true, display the resolved config and exit"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 93,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1700,
							"name": "socketPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The port that a remote will use to access Intern's websocket server. The\nhostname will be the same as for serverUrl. For example, if serverPort is\nset to 9001 and the default serverUrl is used (http://localhost:9000),\nthe full websocket URL will be ws://localhost:9001."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 306,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1708,
							"name": "suites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of paths or glob expressions that point to suite scripts.",
								"text": "```js\n{\n    suites: [\n        'tests/unit/**\\/*.js',\n        'tests/intergration/request.js'\n    ]\n}\n```\n\nNote that using globs with the browser client requires that Intern's\nserver be used to serve the tests. The server can be run in standalone\nmode by setting the `serveOnly` option.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 485,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1708,
								"name": "ResourceConfig.suites"
							}
						},
						{
							"id": 1709,
							"name": "tsconfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An optional path to a tsconfig for ts-node, or false if TypeScript\nsupport is not needed. This option can be used if tests need to use a\ndifferent tsconfig than the project uses normally."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 492,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "false"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1709,
								"name": "ResourceConfig.tsconfig"
							}
						},
						{
							"id": 1701,
							"name": "tunnel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The Dig Dug tunnel class to use for WebDriver testing.",
								"text": "There are several built in tunnel types, and others can be added through\nthe Node executor’s [`registerPlugin`\nmethod](./architecture.md#extension-points).\n\nThe built in tunnel classes are:\n\n* 'null'\n* 'selenium'\n* 'browserstack'\n* 'cbt' (CrossBrowserTesting)\n* 'saucelabs'\n* 'testingbot'\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 324,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1702,
							"name": "tunnelOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Options for the currently selected tunnel.",
								"text": "The available options depend on the current tunnel. Common options\ninclude:\n\n** All tunnels**\n\n| Property   | Value                                                    |\n| :---       | :---                                                     |\n| `username` | Username for the tunnel service (e.g., BrowserStack)     |\n| `apiKey`   | API key for the tunnel service (e.g., BrowserStack)      |\n| `pathname` | The path for the tunnel’s REST endpoint (e.g., `wd/hub`) |\n\n**Selenium tunnel**\n\n| Property  | Value                                                                   |\n| :---      | :---                                                                    |\n| `drivers` | A list of driver names, or objects with `name` and `options` properties |\n| `verbose` | If true, show tunnel debug information                                  |\n\nSee also:\n\n* [[https://theintern.io/docs.html#Dig%20Dug/2/api/Tunnel/tunnelproperties|Tunnel]]\n* [[https://theintern.io/docs.html#Dig%20Dug/2/api/SeleniumTunnel/seleniumproperties|SeleniumTunnel]]\n* [[https://theintern.io/docs.html#Dig%20Dug/2/api/BrowserStackTunnel/browserstackproperties|BrowserStackTunnel]]\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 353,
									"character": 15
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "TunnelOptions"
									},
									{
										"type": "reference",
										"name": "BrowserStackOptions"
									},
									{
										"type": "reference",
										"name": "SeleniumOptions"
									}
								]
							}
						},
						{
							"id": 1704,
							"name": "warnOnUncaughtException",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "By default, an Intern session will fail if the Executor catches a\nbrowser-level unhandled error. This setting allows unhandled errors to be\ntreated as warnings instead of failing errors. If this setting is true or\nset to a RegExp that matches an unhandled error, Intern will emit a warning\nrather than failing the test run."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 371,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "RegExp"
									}
								]
							}
						},
						{
							"id": 1703,
							"name": "warnOnUnhandledRejection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "By default, an Intern session will fail if the Executor catches a\nbrowser-level unhandled Promise rejection. This setting allows unhandled\nrejections to be treated as warnings instead of failing errors. If this\nsetting is true or set to a RegExp that matches the reason for an unhandled\nrejection, Intern will emit a warning rather than failing the test run."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 362,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "RegExp"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1650,
								1652,
								1651,
								1653,
								1654,
								1655,
								1667,
								1673,
								1674,
								1656,
								1657,
								1658,
								1659,
								1675,
								1676,
								1660,
								1677,
								1678,
								1679,
								1680,
								1681,
								1661,
								1687,
								1688,
								1662,
								1692,
								1705,
								1693,
								1663,
								1664,
								1707,
								1694,
								1695,
								1706,
								1710,
								1711,
								1696,
								1712,
								1697,
								1698,
								1699,
								1665,
								1666,
								1700,
								1708,
								1709,
								1701,
								1702,
								1704,
								1703
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 13,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1724,
							"name": "ResourceConfig"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2813,
							"name": "RemoteConfig"
						}
					]
				},
				{
					"id": 1742,
					"name": "EnvironmentSpec",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 1744,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1745,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 1743,
							"name": "browserName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 509,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1743
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 508,
							"character": 32
						}
					]
				},
				{
					"id": 1720,
					"name": "Listener",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A generic event listener"
					},
					"typeParameter": [
						{
							"id": 1721,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"signatures": [
						{
							"id": 1722,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A generic event listener"
							},
							"parameters": [
								{
									"id": 1723,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "PromiseLike"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 396,
							"character": 25
						}
					]
				},
				{
					"id": 1736,
					"name": "LoaderDescriptor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1738,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 505,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1739,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 1740,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1741,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1737,
							"name": "script",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 504,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1738,
								1737
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 503,
							"character": 33
						}
					]
				},
				{
					"id": 1716,
					"name": "PluginDescriptor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A descriptor object for a script. If an options value is present, the\ndescriptor is assumed to refer to a plugin, and the options will be passed to\nthe plugins initializer function."
					},
					"children": [
						{
							"id": 1719,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 390,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1717,
							"name": "script",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 388,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1718,
							"name": "useLoader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 389,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1719,
								1717,
								1718
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 387,
							"character": 33
						}
					]
				},
				{
					"id": 1746,
					"name": "RemoteOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1747,
							"name": "disableDomUpdates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 514,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1747
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 513,
							"character": 30
						}
					]
				},
				{
					"id": 1713,
					"name": "ReporterDescriptor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A descriptor object used to load a built-in reporter"
					},
					"children": [
						{
							"id": 1714,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 378,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1715,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 379,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1537,
								"name": "ReporterOptions"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1714,
								1715
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 377,
							"character": 35
						}
					]
				},
				{
					"id": 1724,
					"name": "ResourceConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1725,
							"name": "loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The loader used to load test suites and application modules.",
								"text": "When passed in as part of a config object, the `loader` property can be a\nstring with a loader name or the path to a loader script. It may also be\nan object with `script` and `config` properties. Intern provides built-in\nloader scripts for Dojo and Dojo2, which can be specified with the IDs\n'dojo' and 'dojo2'.\n\n```ts\nloader: 'dojo2'\nloader: 'tests/loader.js'\nloader: {\n    script: 'dojo',\n    config: {\n        packages: [\n            { name: 'app', location: './js' }\n        ]\n    }\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 423,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1736,
								"name": "LoaderDescriptor"
							}
						},
						{
							"id": 1727,
							"name": "plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of scripts or modules to load before suites are loaded."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 467,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1716,
									"name": "PluginDescriptor"
								}
							}
						},
						{
							"id": 1726,
							"name": "reporters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of reporter names or descriptors.",
								"text": "Reporters specified in this list must have been previously installed\nusing\n[`registerReporter`](https://theintern.io/docs.html#Intern/4/api/lib%2Fexecutors%2FExecutor/registerreporter)\nor\n[`registerPlugin`](https://theintern.io/docs.html#Intern/4/api/lib%2Fexecutors%2FExecutor/registerplugin).\n\nList entries may be reporter names or objects of the format\n\n```js\n{\n    name: 'reporter name',\n    options: {\n        // reporter-specific options\n    }\n}\n```\n\nThe built-in reporters under Node are:\n  * benchmark - output benchmark test results\n  * cobertura - output coverage data in the cobertura format\n  * htmlcoverage - output coverage data as an HTML report\n  * jsoncoverage - output coverage data in a JSON format\n  * junit - output results in JUnit format\n  * lcov - output coverage results in lcov format\n  * pretty - draw text results in a terminal\n  * runner - output test results as formatted text (default Node reporter)\n  * simple - output test results as simple text\n  * teamcity - output results in TeamCity format\n\nThe built-in reporters available in browsers are:\n  * console - output to the browser console\n  * dom - output results as text in the DOM\n  * html - output a pretty HTML report (default browser reporter)\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 462,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1713,
									"name": "ReporterDescriptor"
								}
							}
						},
						{
							"id": 1730,
							"name": "require",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 494,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						{
							"id": 1731,
							"name": "requires",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 495,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						{
							"id": 1732,
							"name": "scripts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 496,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						{
							"id": 1728,
							"name": "suites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of paths or glob expressions that point to suite scripts.",
								"text": "```js\n{\n    suites: [\n        'tests/unit/**\\/*.js',\n        'tests/intergration/request.js'\n    ]\n}\n```\n\nNote that using globs with the browser client requires that Intern's\nserver be used to serve the tests. The server can be run in standalone\nmode by setting the `serveOnly` option.\n"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 485,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1729,
							"name": "tsconfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An optional path to a tsconfig for ts-node, or false if TypeScript\nsupport is not needed. This option can be used if tests need to use a\ndifferent tsconfig than the project uses normally."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/config.ts",
									"line": 492,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "false"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1725,
								1727,
								1726,
								1730,
								1731,
								1732,
								1728,
								1729
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/config.ts",
							"line": 400,
							"character": 31
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1649,
							"name": "Config"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1733,
						1649,
						1742,
						1720,
						1736,
						1716,
						1746,
						1713,
						1724
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/common/config.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1209,
			"name": "\"lib/common/console\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/common/console.ts",
			"children": [
				{
					"id": 1213,
					"name": "error",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1214,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1215,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/console.ts",
							"line": 11,
							"character": 21
						}
					]
				},
				{
					"id": 1210,
					"name": "log",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1211,
							"name": "log",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1212,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/console.ts",
							"line": 3,
							"character": 19
						}
					]
				},
				{
					"id": 1216,
					"name": "warn",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1217,
							"name": "warn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1218,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/console.ts",
							"line": 19,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1213,
						1210,
						1216
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/common/console.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 42,
			"name": "\"lib/common/path\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/common/path.ts",
			"children": [
				{
					"id": 43,
					"name": "dirname",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 44,
							"name": "dirname",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get the parent directory name of a path"
							},
							"parameters": [
								{
									"id": 45,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/path.ts",
							"line": 4,
							"character": 23
						}
					]
				},
				{
					"id": 46,
					"name": "getPathSep",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 47,
							"name": "getPathSep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get the path separator used for a given set of paths."
							},
							"parameters": [
								{
									"id": 48,
									"name": "paths",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "\\"
									},
									{
										"type": "stringLiteral",
										"value": "/"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/path.ts",
							"line": 17,
							"character": 26
						}
					]
				},
				{
					"id": 49,
					"name": "join",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 50,
							"name": "join",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Join a set of paths, resolving any relative segments (. or ..) in subsequent\npaths against the first path."
							},
							"parameters": [
								{
									"id": 51,
									"name": "paths",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/path.ts",
							"line": 25,
							"character": 20
						}
					]
				},
				{
					"id": 52,
					"name": "normalize",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 53,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Normalize a path, replacing any occurrences of '\\' with '/'"
							},
							"parameters": [
								{
									"id": 54,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/path.ts",
							"line": 52,
							"character": 25
						}
					]
				},
				{
					"id": 55,
					"name": "normalizePathEnding",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 56,
							"name": "normalizePathEnding",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Normalize a path such that it ends with a path separator"
							},
							"parameters": [
								{
									"id": 57,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58,
									"name": "pathSep",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/path.ts",
							"line": 59,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						43,
						46,
						49,
						52,
						55
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/common/path.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 167,
			"name": "\"lib/common/time\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/common/time.ts",
			"children": [
				{
					"id": 176,
					"name": "clearInterval",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 171
				},
				{
					"id": 174,
					"name": "clearTimeout",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 169
				},
				{
					"id": 175,
					"name": "setInterval",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 170
				},
				{
					"id": 173,
					"name": "setTimeout",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 168
				},
				{
					"id": 171,
					"name": "_clearInterval",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/time.ts",
							"line": 6,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "clearInterval"
					},
					"defaultValue": "clearInterval"
				},
				{
					"id": 169,
					"name": "_clearTimeout",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/time.ts",
							"line": 4,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "clearTimeout"
					},
					"defaultValue": "clearTimeout"
				},
				{
					"id": 170,
					"name": "_setInterval",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/time.ts",
							"line": 5,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "setInterval"
					},
					"defaultValue": "setInterval"
				},
				{
					"id": 168,
					"name": "_setTimeout",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/time.ts",
							"line": 3,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "setTimeout"
					},
					"defaultValue": "setTimeout"
				},
				{
					"id": 172,
					"name": "now",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/time.ts",
							"line": 9,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "now"
					},
					"defaultValue": "Date.now"
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						176,
						174,
						175,
						173
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						171,
						169,
						170,
						168,
						172
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/common/time.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 59,
			"name": "\"lib/common/util\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/common/util.ts",
			"children": [
				{
					"id": 60,
					"name": "EvaluatedProperty",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 62,
							"name": "addToExisting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/util.ts",
									"line": 12,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 61,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/util.ts",
									"line": 11,
									"character": 6
								}
							],
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 1649,
									"name": "Config"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								62,
								61
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 10,
							"character": 34
						}
					]
				},
				{
					"id": 63,
					"name": "TextLoader",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 64,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 65,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 15,
							"character": 27
						}
					]
				},
				{
					"id": 68,
					"name": "Parser",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 69,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 28,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 70,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 71,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 72,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/util.ts",
									"line": 28,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 67,
					"name": "TypeName",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 19,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "regexp"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string[]"
							},
							{
								"type": "stringLiteral",
								"value": "object[]"
							}
						]
					}
				},
				{
					"id": 159,
					"name": "configPathSeparator",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 983,
							"character": 25
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "@"
					},
					"defaultValue": "\"@\""
				},
				{
					"id": 66,
					"name": "defaultConfig",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 8,
							"character": 26
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "intern.json"
					},
					"defaultValue": "\"intern.json\""
				},
				{
					"id": 150,
					"name": "_loadConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 151,
							"name": "_loadConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 152,
									"name": "configPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 153,
									"name": "loadText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 63,
										"name": "TextLoader"
									}
								},
								{
									"id": 154,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 155,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 156,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 157,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 158,
									"name": "childConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 843,
							"character": 20
						}
					]
				},
				{
					"id": 164,
					"name": "errorToJSON",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 165,
							"name": "errorToJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 166,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 31,
										"name": "InternError"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 31,
										"name": "InternError"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 1004,
							"character": 27
						}
					]
				},
				{
					"id": 73,
					"name": "evalProperty",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 74,
							"name": "evalProperty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Evaluate a config property key"
							},
							"typeParameter": [
								{
									"id": 75,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 76,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "C"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 60,
								"name": "EvaluatedProperty"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 33,
							"character": 28
						}
					]
				},
				{
					"id": 77,
					"name": "getBasePath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 78,
							"name": "getBasePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get the base path based on a config file path and a user-supplied base path.",
								"text": "The path separator will be normalized based on the separator used in\nconfigFile or basePath and the optional pathSep arg.\n"
							},
							"parameters": [
								{
									"id": 79,
									"name": "configFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 80,
									"name": "basePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 81,
									"name": "isAbsolute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 82,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 83,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 84,
															"name": "path",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/util.ts",
													"line": 51,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 85,
									"name": "pathSep",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 48,
							"character": 27
						}
					]
				},
				{
					"id": 86,
					"name": "getConfigDescription",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 87,
							"name": "getConfigDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return a string describing a config file, including any child configs."
							},
							"parameters": [
								{
									"id": 88,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 89,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 89,
							"character": 36
						}
					]
				},
				{
					"id": 90,
					"name": "loadConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 91,
							"name": "loadConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Load config data from a given path, using a given text loader, and mixing\nargs and/or a childConfig into the final config value if provided."
							},
							"parameters": [
								{
									"id": 92,
									"name": "configPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 93,
									"name": "loadText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 63,
										"name": "TextLoader"
									}
								},
								{
									"id": 94,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 95,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"indexSignature": [
														{
															"id": 96,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 97,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 98,
									"name": "childConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 123,
							"character": 26
						}
					]
				},
				{
					"id": 99,
					"name": "parseArgs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 100,
							"name": "parseArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parse an array of name=value arguments into an object"
							},
							"parameters": [
								{
									"id": 101,
									"name": "rawArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 102,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 103,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 104,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 147,
							"character": 25
						}
					]
				},
				{
					"id": 105,
					"name": "parseJson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 106,
							"name": "parseJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parse a JSON string that may contain comments"
							},
							"parameters": [
								{
									"id": 107,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 193,
							"character": 25
						}
					]
				},
				{
					"id": 108,
					"name": "parseValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 109,
							"name": "parseValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parse a particular type of value from a given value"
							},
							"parameters": [
								{
									"id": 110,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The 'name' of the value being parsed (used for error messages)"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 111,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A value to parse something from"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 112,
									"name": "parser",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The type of thing to parse, or a parser function"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 67,
												"name": "TypeName"
											},
											{
												"type": "reference",
												"id": 68,
												"name": "Parser"
											}
										]
									}
								},
								{
									"id": 113,
									"name": "requiredProperty",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Only used with 'object' and 'object[]' parsers\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 205,
							"character": 26
						}
					]
				},
				{
					"id": 114,
					"name": "prefix",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 115,
							"name": "prefix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return a string with all lines prefixed with a given prefix."
							},
							"parameters": [
								{
									"id": 116,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 117,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 306,
							"character": 22
						}
					]
				},
				{
					"id": 118,
					"name": "processOption",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 119,
							"name": "processOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Process a Config option, transforming it to a canonical form and storing it\non the given config object.",
								"text": "If an executor is provided, it will be used to emit deprecation and log\nevents.\n"
							},
							"typeParameter": [
								{
									"id": 120,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1649,
										"name": "Config"
									}
								}
							],
							"parameters": [
								{
									"id": 121,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "C",
											"constraint": {
												"type": "reference",
												"id": 1649,
												"name": "Config"
											}
										}
									}
								},
								{
									"id": 122,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 123,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "C",
										"constraint": {
											"type": "reference",
											"id": 1649,
											"name": "Config"
										}
									}
								},
								{
									"id": 124,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 320,
							"character": 29
						}
					]
				},
				{
					"id": 125,
					"name": "pullFromArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 126,
							"name": "pullFromArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Remove all instances of of an item from any array and return the removed\ninstances."
							},
							"typeParameter": [
								{
									"id": 127,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 128,
									"name": "haystack",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 129,
									"name": "needle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 692,
							"character": 29
						}
					]
				},
				{
					"id": 130,
					"name": "removeComments",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 131,
							"name": "removeComments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove JS-style line and block comments from a string"
							},
							"parameters": [
								{
									"id": 132,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 706,
							"character": 23
						}
					]
				},
				{
					"id": 160,
					"name": "serializeReplacer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 161,
							"name": "serializeReplacer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replacer function used in stringify"
							},
							"parameters": [
								{
									"id": 162,
									"name": "_key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 163,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 988,
							"character": 26
						}
					]
				},
				{
					"id": 133,
					"name": "setOption",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 134,
							"name": "setOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Set an option value."
							},
							"parameters": [
								{
									"id": 135,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1649,
										"name": "Config"
									}
								},
								{
									"id": 136,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 1649,
											"name": "Config"
										}
									}
								},
								{
									"id": 137,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 138,
									"name": "addToExisting",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 779,
							"character": 25
						}
					]
				},
				{
					"id": 139,
					"name": "splitConfigPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 140,
							"name": "splitConfigPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Split a config path into a file name and a child config name.",
								"text": "This allows for the case where a file name itself may include the config\nseparator (e.g., a scoped npm package).\n"
							},
							"parameters": [
								{
									"id": 141,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 142,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/\""
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 143,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 145,
											"name": "childConfig",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/util.ts",
													"line": 810,
													"character": 36
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 144,
											"name": "configFile",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/common/util.ts",
													"line": 810,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												145,
												144
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/common/util.ts",
											"line": 810,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 807,
							"character": 31
						}
					]
				},
				{
					"id": 146,
					"name": "stringify",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 147,
							"name": "stringify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Convert an object to JSON, handling non-primitive properties",
								"returns": "A JSON string\n"
							},
							"parameters": [
								{
									"id": 148,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to serialise."
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 149,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/common/util.ts",
							"line": 836,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						60,
						63
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						68,
						67
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						159,
						66
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						150,
						164,
						73,
						77,
						86,
						90,
						99,
						105,
						108,
						114,
						118,
						125,
						130,
						160,
						133,
						139,
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/common/util.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2544,
			"name": "\"lib/executors/Browser\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/executors/Browser.ts",
			"children": [
				{
					"id": 2545,
					"name": "Browser",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A Browser executor is used to run unit tests in a browser."
					},
					"children": [
						{
							"id": 2546,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2547,
									"name": "new Browser",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2548,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2549,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2545,
										"name": "Browser"
									},
									"overwrites": {
										"type": "reference",
										"id": 1293,
										"name": "BaseExecutor.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Browser.ts",
									"line": 18,
									"character": 72
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1293,
								"name": "BaseExecutor.__constructor"
							}
						},
						{
							"id": 2584,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 98,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "CancelToken"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1292,
								"name": "BaseExecutor._cancelToken"
							}
						},
						{
							"id": 2558,
							"name": "_config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 79,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1649,
								"name": "Config"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "BaseExecutor._config"
							}
						},
						{
							"id": 2561,
							"name": "_errorFormatter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 82,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 396,
										"name": "ErrorFormatter"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1269,
								"name": "BaseExecutor._errorFormatter"
							}
						},
						{
							"id": 2560,
							"name": "_events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 81,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1430,
									"typeArguments": [
										{
											"type": "reference",
											"id": 1449,
											"name": "Events"
										}
									],
									"name": "InternEvent"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "BaseExecutor._events"
							}
						},
						{
							"id": 2564,
							"name": "_hasEmittedErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 85,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 1272,
								"name": "BaseExecutor._hasEmittedErrors"
							}
						},
						{
							"id": 2562,
							"name": "_hasSuiteErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 83,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "BaseExecutor._hasSuiteErrors"
							}
						},
						{
							"id": 2563,
							"name": "_hasTestErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 84,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 1271,
								"name": "BaseExecutor._hasTestErrors"
							}
						},
						{
							"id": 2573,
							"name": "_listeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 91,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2574,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 2575,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2576,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1434,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Listener"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Executor.ts",
											"line": 91,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1281,
								"name": "BaseExecutor._listeners"
							}
						},
						{
							"id": 2565,
							"name": "_loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 86,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1468,
								"name": "Loader"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1273,
								"name": "BaseExecutor._loader"
							}
						},
						{
							"id": 2567,
							"name": "_loaderInit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 88,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1468,
												"name": "Loader"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1275,
								"name": "BaseExecutor._loaderInit"
							}
						},
						{
							"id": 2566,
							"name": "_loaderOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 87,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "BaseExecutor._loaderOptions"
							}
						},
						{
							"id": 2572,
							"name": "_loadingPluginOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 90,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "BaseExecutor._loadingPluginOptions"
							}
						},
						{
							"id": 2568,
							"name": "_loadingPlugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 89,
									"character": 27
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 2569,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 2571,
												"name": "init",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "packages/core/src/lib/executors/Executor.ts",
														"line": 89,
														"character": 49
													}
												],
												"type": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "void"
														}
													],
													"name": "Promise"
												}
											},
											{
												"id": 2570,
												"name": "name",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "packages/core/src/lib/executors/Executor.ts",
														"line": 89,
														"character": 35
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													2571,
													2570
												]
											}
										],
										"sources": [
											{
												"fileName": "packages/core/src/lib/executors/Executor.ts",
												"line": 89,
												"character": 28
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "BaseExecutor._loadingPlugins"
							}
						},
						{
							"id": 2577,
							"name": "_plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 92,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2578,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 2579,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2580,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Executor.ts",
											"line": 92,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1285,
								"name": "BaseExecutor._plugins"
							}
						},
						{
							"id": 2581,
							"name": "_reporters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 93,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1487,
									"name": "Reporter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1289,
								"name": "BaseExecutor._reporters"
							}
						},
						{
							"id": 2583,
							"name": "_reportersInitialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 95,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1291,
								"name": "BaseExecutor._reportersInitialized"
							}
						},
						{
							"id": 2559,
							"name": "_rootSuite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 80,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1267,
								"name": "BaseExecutor._rootSuite"
							}
						},
						{
							"id": 2582,
							"name": "_runPromise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 94,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1290,
								"name": "BaseExecutor._runPromise"
							}
						},
						{
							"id": 2585,
							"name": "config",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The resolved configuration for this executor."
							},
							"getSignature": [
								{
									"id": 2586,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The resolved configuration for this executor."
									},
									"type": {
										"type": "unknown",
										"name": "C"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1299,
										"name": "BaseExecutor.config"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 175,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1299,
								"name": "BaseExecutor.config"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1221,
								"name": "Executor.config"
							}
						},
						{
							"id": 2550,
							"name": "environment",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2551,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 41,
										"name": "RuntimeEnvironment"
									},
									"overwrites": {
										"type": "reference",
										"id": 1297,
										"name": "BaseExecutor.environment"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Browser.ts",
									"line": 70,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1297,
								"name": "BaseExecutor.environment"
							}
						},
						{
							"id": 2587,
							"name": "suites",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The root suites managed by this executor"
							},
							"getSignature": [
								{
									"id": 2588,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The root suites managed by this executor"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 270,
											"name": "Suite"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1301,
										"name": "BaseExecutor.suites"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 182,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1301,
								"name": "BaseExecutor.suites"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1222,
								"name": "Executor.suites"
							}
						},
						{
							"id": 2675,
							"name": "_afterRun",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2676,
									"name": "_afterRun",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Code to execute after the main test run has finished to shut down the test\nsystem."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1392,
										"name": "BaseExecutor._afterRun"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 779,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1392,
								"name": "BaseExecutor._afterRun"
							}
						},
						{
							"id": 2677,
							"name": "_assignPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2678,
									"name": "_assignPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a resolved plugin to the internal plugins list"
									},
									"parameters": [
										{
											"id": 2679,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2680,
											"name": "plugin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1394,
										"name": "BaseExecutor._assignPlugin"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 786,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1394,
								"name": "BaseExecutor._assignPlugin"
							}
						},
						{
							"id": 2681,
							"name": "_beforeRun",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2682,
									"name": "_beforeRun",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Code to execute before the main test run has started to set up the test\nsystem. This is where Executors can do any last-minute configuration\nbefore the testing process begins.",
										"text": "This method returns a Promise that resolves to a boolean. A\nvalue of true indicates that Intern should skip running tests and exit\nnormally.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1398,
										"name": "BaseExecutor._beforeRun"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 802,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1398,
								"name": "BaseExecutor._beforeRun"
							}
						},
						{
							"id": 2685,
							"name": "_drainEventQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2686,
									"name": "_drainEventQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Emit any queued events. The event queue will be empty after this method\nruns."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1402,
										"name": "BaseExecutor._drainEventQueue"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 851,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1402,
								"name": "BaseExecutor._drainEventQueue"
							}
						},
						{
							"id": 2687,
							"name": "_emitCoverage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2688,
									"name": "_emitCoverage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2689,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1404,
										"name": "BaseExecutor._emitCoverage"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 862,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1404,
								"name": "BaseExecutor._emitCoverage"
							}
						},
						{
							"id": 2683,
							"name": "_initReporters",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2684,
									"name": "_initReporters",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Instantiate any configured built-in reporters"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1400,
										"name": "BaseExecutor._initReporters"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 815,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1400,
								"name": "BaseExecutor._initReporters"
							}
						},
						{
							"id": 2690,
							"name": "_loadLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2691,
									"name": "_loadLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a loader"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1407,
										"name": "BaseExecutor._loadLoader"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 876,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1407,
								"name": "BaseExecutor._loadLoader"
							}
						},
						{
							"id": 2694,
							"name": "_loadPlugins",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2695,
									"name": "_loadPlugins",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load scripts in the `plugins` list using the platform's native loading\nmechanism"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1411,
										"name": "BaseExecutor._loadPlugins"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 936,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1411,
								"name": "BaseExecutor._loadPlugins"
							}
						},
						{
							"id": 2692,
							"name": "_loadPluginsWithLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2693,
									"name": "_loadPluginsWithLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load scripts in the `requires` list using an external loader, if\nconfigured, or the platform's native loading mechanism"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1409,
										"name": "BaseExecutor._loadPluginsWithLoader"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 924,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1409,
								"name": "BaseExecutor._loadPluginsWithLoader"
							}
						},
						{
							"id": 2696,
							"name": "_loadScripts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2697,
									"name": "_loadScripts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a list of scripts using a given loader. These will be loaded\nsequentially in order."
									},
									"parameters": [
										{
											"id": 2698,
											"name": "scripts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1716,
													"name": "PluginDescriptor"
												}
											}
										},
										{
											"id": 2699,
											"name": "loader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2700,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2701,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2702,
																	"name": "script",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 950,
															"character": 11
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1413,
										"name": "BaseExecutor._loadScripts"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 948,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1413,
								"name": "BaseExecutor._loadScripts"
							}
						},
						{
							"id": 2703,
							"name": "_loadSuites",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2704,
									"name": "_loadSuites",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load suites"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1420,
										"name": "BaseExecutor._loadSuites"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 984,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1420,
								"name": "BaseExecutor._loadSuites"
							}
						},
						{
							"id": 2705,
							"name": "_processOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2706,
									"name": "_processOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process an option"
									},
									"parameters": [
										{
											"id": 2707,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1649,
													"name": "Config"
												}
											}
										},
										{
											"id": 2708,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1422,
										"name": "BaseExecutor._processOption"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 996,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1422,
								"name": "BaseExecutor._processOption"
							}
						},
						{
							"id": 2556,
							"name": "_resolveConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2557,
									"name": "_resolveConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1426,
										"name": "BaseExecutor._resolveConfig"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Browser.ts",
									"line": 95,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1426,
								"name": "BaseExecutor._resolveConfig"
							}
						},
						{
							"id": 2709,
							"name": "_runTests",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2710,
									"name": "_runTests",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Runs each of the root suites, limited to a certain number of suites at\nthe same time by `maxConcurrency`."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1428,
										"name": "BaseExecutor._runTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1037,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1428,
								"name": "BaseExecutor._runTests"
							}
						},
						{
							"id": 2595,
							"name": "addSuite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2596,
									"name": "addSuite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a suite to the set of suites that will be run when `run` is called.",
										"text": "The suite is added by calling a factory function. The use of a factory\nallows for distinct instances of a given suite to be create when an\nexecutor has multiple root suites.\n\n```js\nintern.addSuite(parent => {\n    const suite = new Suite({\n        name: 'create new',\n        tests: [\n            new Test({\n                name: 'new test',\n                test: () => assert.doesNotThrow(() => new Component())\n            })\n        ]\n    });\n    parent.add(suite);\n});\n```\n"
									},
									"parameters": [
										{
											"id": 2597,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A function that will add a new Suite object to a given\nparent suite.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2598,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2599,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2600,
																	"name": "parentSuite",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 270,
																		"name": "Suite"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 236,
															"character": 19
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1312,
										"name": "BaseExecutor.addSuite"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 236,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1312,
								"name": "BaseExecutor.addSuite"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1223,
								"name": "Executor.addSuite"
							}
						},
						{
							"id": 2589,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2590,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1303,
										"name": "BaseExecutor.cancel"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1230,
										"name": "Executor.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 186,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1303,
								"name": "BaseExecutor.cancel"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1229,
								"name": "Executor.cancel"
							}
						},
						{
							"id": 2601,
							"name": "configure",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2602,
									"name": "configure",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Configure the executor with an object containing\n[[lib/executors/Executor.Config]] properties."
									},
									"parameters": [
										{
											"id": 2603,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2604,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 244,
															"character": 20
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1318,
										"name": "BaseExecutor.configure"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 244,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1318,
								"name": "BaseExecutor.configure"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1231,
								"name": "Executor.configure"
							}
						},
						{
							"id": 2605,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2606,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Emit an event to all registered listeners.",
										"text": "Event listeners may execute async code, and a failing handler (one that\nrejects or throws an error) will cause the emit to fail.\n",
										"returns": "a Promise that resolves when all listeners have processed the event\n"
									},
									"typeParameter": [
										{
											"id": 2607,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1488,
												"name": "NoDataEvents"
											}
										}
									],
									"parameters": [
										{
											"id": 2608,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the event to emit"
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"id": 1488,
													"name": "NoDataEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1322,
										"name": "BaseExecutor.emit"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1238,
										"name": "Executor.emit"
									}
								},
								{
									"id": 2609,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 2610,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1449,
													"name": "Events"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2611,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 1449,
														"name": "Events"
													}
												}
											}
										},
										{
											"id": 2612,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeParameter",
													"name": "T",
													"constraint": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 1449,
															"name": "Events"
														}
													}
												},
												"objectType": {
													"type": "reference",
													"name": "Events"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1322,
										"name": "BaseExecutor.emit"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1241,
										"name": "Executor.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 261,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 262,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 263,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1322,
								"name": "BaseExecutor.emit"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1237,
								"name": "Executor.emit"
							}
						},
						{
							"id": 2591,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2592,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Format an error, normalizing the stack trace and resolving source map\nreferences"
									},
									"parameters": [
										{
											"id": 2593,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2594,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1305,
										"name": "BaseExecutor.formatError"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1246,
										"name": "Executor.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 194,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1305,
								"name": "BaseExecutor.formatError"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1245,
								"name": "Executor.formatError"
							}
						},
						{
							"id": 2613,
							"name": "getInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2614,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get a registered interface plugin.",
										"text": "This method calls `getPlugin` behind the scenes.\n",
										"returns": "the interface, which may be an object or a callable function, or\nundefined if no such interface was registered.\n"
									},
									"parameters": [
										{
											"id": 2615,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the interface"
											},
											"type": {
												"type": "stringLiteral",
												"value": "object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 435,
										"name": "ObjectInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								},
								{
									"id": 2616,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2617,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "tdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 482,
										"name": "TddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								},
								{
									"id": 2618,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2619,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "bdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 575,
										"name": "BddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								},
								{
									"id": 2620,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2621,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "benchmark"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1173,
										"name": "BenchmarkInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 365,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 366,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 367,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 368,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 369,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1330,
								"name": "BaseExecutor.getInterface"
							}
						},
						{
							"id": 2622,
							"name": "getPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2623,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get any resources registered by a particular plugin.",
										"returns": "the resource registered for the given plugin name, or undefined\nif no such plugin was registered.\n"
									},
									"typeParameter": [
										{
											"id": 2624,
											"name": "Y",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1466,
													"name": "Plugins"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2625,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the type of plugin (e.g., 'interface' or 'reporter')"
											},
											"type": {
												"type": "typeParameter",
												"name": "Y",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 1466,
														"name": "Plugins"
													}
												}
											}
										},
										{
											"id": 2626,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the plugin"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "Y",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1466,
													"name": "Plugins"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "Plugins"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 2627,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2628,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "chai"
											}
										}
									],
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "chai"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 2629,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2630,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 435,
										"name": "ObjectInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 2631,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2632,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.tdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 482,
										"name": "TddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 2633,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2634,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.bdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 575,
										"name": "BddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 2635,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2636,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.benchmark"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1173,
										"name": "BenchmarkInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 2637,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 2638,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 2639,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 381,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 382,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 383,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 384,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 385,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 386,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 387,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 388,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1339,
								"name": "BaseExecutor.getPlugin"
							}
						},
						{
							"id": 2552,
							"name": "loadScript",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2553,
									"name": "loadScript",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a script or scripts via script injection."
									},
									"parameters": [
										{
											"id": 2554,
											"name": "script",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a path to a script\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 2555,
											"name": "isEsm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1309,
										"name": "BaseExecutor.loadScript"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Browser.ts",
									"line": 79,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1309,
								"name": "BaseExecutor.loadScript"
							}
						},
						{
							"id": 2640,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2641,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This is a convenience method for emitting log events.",
										"text": "When debug mode is enabled, this method emits 'log' events using `emit`.\nOtherwise it does nothing.\n",
										"returns": "a Promise that resolves when all listeners have finished processing\nthe event.\n"
									},
									"parameters": [
										{
											"id": 2642,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isRest": true
											},
											"comment": {
												"text": "A list of arguments that will be stringified and combined\ninto a space-separated message."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1357,
										"name": "BaseExecutor.log"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1250,
										"name": "Executor.log"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 409,
									"character": 5
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1357,
								"name": "BaseExecutor.log"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1249,
								"name": "Executor.log"
							}
						},
						{
							"id": 2643,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2644,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a listener for a test event.",
										"text": "```js\nintern.on('error', error => {\n    console.log('An error occurred:', error);\n});\n```\n\nA listener can be notified of all events by registering for the '*'\nevent, or by calling on with only a callback:\n\n```js\nintern.on(event => {\n    console.log(`An ${event.name} event occurred:`, event.data);\n});\n```\nNote that some events are executor-specific. For example, the\n[[lib/executors/Browser]] executor will never emit a tunnelStop\nmessage.\n",
										"returns": "a handle with a `destroy` method that can be used to stop\nlistening\n"
									},
									"typeParameter": [
										{
											"id": 2645,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1449,
													"name": "Events"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2646,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the [[lib/executors/Executor.Events|event]] to listen\nfor"
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 1449,
														"name": "Events"
													}
												}
											}
										},
										{
											"id": 2647,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a callback that accepts a single data parameter; it may\nreturn a Promise if it needs to perform async actions"
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 1449,
																	"name": "Events"
																}
															}
														},
														"objectType": {
															"type": "reference",
															"name": "Events"
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1360,
										"name": "BaseExecutor.on"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1253,
										"name": "Executor.on"
									}
								},
								{
									"id": 2648,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2649,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2650,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 2652,
																	"name": "data",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 469,
																			"character": 44
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 2651,
																	"name": "name",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 469,
																			"character": 30
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		2652,
																		2651
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/executors/Executor.ts",
																	"line": 469,
																	"character": 24
																}
															]
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1360,
										"name": "BaseExecutor.on"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1257,
										"name": "Executor.on"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 468,
									"character": 4
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 469,
									"character": 4
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 470,
									"character": 4
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1360,
								"name": "BaseExecutor.on"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1252,
								"name": "Executor.on"
							}
						},
						{
							"id": 2653,
							"name": "registerInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2654,
									"name": "registerInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register an interface plugin",
										"text": "This is a convenience method for registering test interfaces. This method\ncalls [[lib/executors/Executor.Executor.registerPlugin]] behind the\nscenes using the name `interface.${name}`.\n"
									},
									"parameters": [
										{
											"id": 2655,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2656,
											"name": "iface",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1370,
										"name": "BaseExecutor.registerInterface"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 506,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1370,
								"name": "BaseExecutor.registerInterface"
							}
						},
						{
							"id": 2657,
							"name": "registerLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2658,
									"name": "registerLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a module loader.",
										"text": "This method sets the loader script that will be used to load plugins and\nsuites. The callback should accept an options object and return a\nfunction that can load modules.\n\n```js\nintern.registerLoader(options: any => {\n    // Register loader can return a Promise if it needs to load something\n    // itself\n    return intern.loadScript('some/loader.js').then(() => {\n        loader.config(options);\n        // Return a function that takes a list of modules and returns a\n        // Promise that resolves when they've been loaded.\n        return (modules: string[]) => {\n            return loader.load(modules);\n        });\n    });\n});\n```\n"
									},
									"parameters": [
										{
											"id": 2659,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a loader initialzation callback that should return a loader\nfunction, or a Promise that resolves to a loader function\n"
											},
											"type": {
												"type": "reference",
												"id": 1471,
												"name": "LoaderInit"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1374,
										"name": "BaseExecutor.registerLoader"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 535,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1374,
								"name": "BaseExecutor.registerLoader"
							}
						},
						{
							"id": 2660,
							"name": "registerPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2661,
									"name": "registerPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a plugin.",
										"text": "Plugins are resources that are loaded at the beginning of the testing\nprocess, after the loader but before any suites are registered. The\ncallback may return a Promise if the plugin needs to do some asynchronous\ninitialization. If the plugin is being loaded via the\n[[lib/executors/Executor.Config.plugins|config.plugins]]\nproperty, it's init callback will be passed any configured options. The\nresolved return value of the callback will be returned by\n[[lib/executors/Executor.Executor.getPlugin]].\n\n```js\nintern.registerPlugin('foo', (options: any) => {\n    return {\n        doSomething() {\n            // ...\n        },\n        doSomethingElse() {\n            // ...\n        }\n    };\n});\n```\n\nCode would use the plugin by calling getPlugin:\n\n```js\nconst { doSomething, doSomethingElse } = intern.getPlugin('foo');\ndoSomething();\n```\n"
									},
									"typeParameter": [
										{
											"id": 2662,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1466,
													"name": "Plugins"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2663,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 1466,
														"name": "Plugins"
													}
												}
											}
										},
										{
											"id": 2664,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the plugin name"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2665,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "an initializer function that returns the plugin resource, or\na Promise that resolves to the resource\n"
											},
											"type": {
												"type": "reference",
												"id": 1477,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 1466,
																	"name": "Plugins"
																}
															}
														},
														"objectType": {
															"type": "reference",
															"name": "Plugins"
														}
													}
												],
												"name": "PluginInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1377,
										"name": "BaseExecutor.registerPlugin"
									}
								},
								{
									"id": 2666,
									"name": "registerPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2667,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2668,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1477,
												"name": "PluginInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1377,
										"name": "BaseExecutor.registerPlugin"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 576,
									"character": 16
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 581,
									"character": 16
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 582,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1377,
								"name": "BaseExecutor.registerPlugin"
							}
						},
						{
							"id": 2669,
							"name": "registerReporter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2670,
									"name": "registerReporter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a reporter plugin",
										"text": "This is a convenience method for registering reporter constructors. This\nmethod calls [[lib/executors/Executor.Executor.registerPlugin]] behind\nthe scenes using the name `reporter.${name}`.\n"
									},
									"parameters": [
										{
											"id": 2671,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the reporter name"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2672,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1484,
												"name": "ReporterInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1386,
										"name": "BaseExecutor.registerReporter"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 624,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1386,
								"name": "BaseExecutor.registerReporter"
							}
						},
						{
							"id": 2673,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2674,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Run tests.",
										"text": "This method sets up the environment for test execution, runs the tests,\nand runs any finalization code afterwards.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1390,
										"name": "BaseExecutor.run"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 634,
									"character": 5
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1390,
								"name": "BaseExecutor.run"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2546
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2584,
								2558,
								2561,
								2560,
								2564,
								2562,
								2563,
								2573,
								2565,
								2567,
								2566,
								2572,
								2568,
								2577,
								2581,
								2583,
								2559,
								2582
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2585,
								2550,
								2587
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2675,
								2677,
								2681,
								2685,
								2687,
								2683,
								2690,
								2694,
								2692,
								2696,
								2703,
								2705,
								2556,
								2709,
								2595,
								2589,
								2601,
								2605,
								2591,
								2613,
								2622,
								2552,
								2640,
								2643,
								2653,
								2657,
								2660,
								2669,
								2673
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Browser.ts",
							"line": 18,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1262,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1449,
									"name": "Events"
								},
								{
									"type": "reference",
									"id": 1649,
									"name": "Config"
								},
								{
									"type": "reference",
									"id": 1466,
									"name": "Plugins"
								}
							],
							"name": "BaseExecutor"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1220,
							"name": "Executor"
						}
					]
				},
				{
					"id": 2711,
					"name": "injectScript",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2712,
							"name": "injectScript",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2713,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2714,
									"name": "isEsm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Browser.ts",
							"line": 160,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2545
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2711
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/executors/Browser.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1219,
			"name": "\"lib/executors/Executor\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/executors/Executor.ts",
			"children": [
				{
					"id": 1262,
					"name": "BaseExecutor",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "This is the base executor class.",
						"text": "Executors are the main driver of the testing process. An instance of Executor\nis assigned to the `intern` global.\n"
					},
					"typeParameter": [
						{
							"id": 1263,
							"name": "E",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1449,
								"name": "Events"
							}
						},
						{
							"id": 1264,
							"name": "C",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1649,
								"name": "Config"
							}
						},
						{
							"id": 1265,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1466,
								"name": "Plugins"
							}
						}
					],
					"children": [
						{
							"id": 1293,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1294,
									"name": "new BaseExecutor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1295,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1296,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1262,
										"name": "BaseExecutor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 98,
									"character": 39
								}
							]
						},
						{
							"id": 1292,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 98,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "CancelToken"
							}
						},
						{
							"id": 1266,
							"name": "_config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 79,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "C",
								"constraint": {
									"type": "reference",
									"id": 1649,
									"name": "Config"
								}
							}
						},
						{
							"id": 1269,
							"name": "_errorFormatter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 82,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 396,
										"name": "ErrorFormatter"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1268,
							"name": "_events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 81,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1430,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "E",
											"constraint": {
												"type": "reference",
												"id": 1449,
												"name": "Events"
											}
										}
									],
									"name": "InternEvent"
								}
							}
						},
						{
							"id": 1272,
							"name": "_hasEmittedErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 85,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1270,
							"name": "_hasSuiteErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 83,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1271,
							"name": "_hasTestErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 84,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1281,
							"name": "_listeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 91,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1282,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1283,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1284,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1434,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Listener"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Executor.ts",
											"line": 91,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 1273,
							"name": "_loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 86,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1468,
								"name": "Loader"
							}
						},
						{
							"id": 1275,
							"name": "_loaderInit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 88,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1468,
												"name": "Loader"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1274,
							"name": "_loaderOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 87,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1280,
							"name": "_loadingPluginOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 90,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1276,
							"name": "_loadingPlugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 89,
									"character": 27
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1277,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 1279,
												"name": "init",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "packages/core/src/lib/executors/Executor.ts",
														"line": 89,
														"character": 49
													}
												],
												"type": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "void"
														}
													],
													"name": "Promise"
												}
											},
											{
												"id": 1278,
												"name": "name",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "packages/core/src/lib/executors/Executor.ts",
														"line": 89,
														"character": 35
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													1279,
													1278
												]
											}
										],
										"sources": [
											{
												"fileName": "packages/core/src/lib/executors/Executor.ts",
												"line": 89,
												"character": 28
											}
										]
									}
								}
							}
						},
						{
							"id": 1285,
							"name": "_plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 92,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1286,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1287,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1288,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Executor.ts",
											"line": 92,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 1289,
							"name": "_reporters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 93,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1487,
									"name": "Reporter"
								}
							}
						},
						{
							"id": 1291,
							"name": "_reportersInitialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 95,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1267,
							"name": "_rootSuite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 80,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							}
						},
						{
							"id": 1290,
							"name": "_runPromise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 94,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1299,
							"name": "config",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The resolved configuration for this executor."
							},
							"getSignature": [
								{
									"id": 1300,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The resolved configuration for this executor."
									},
									"type": {
										"type": "unknown",
										"name": "C"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 175,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1221,
								"name": "Executor.config"
							}
						},
						{
							"id": 1297,
							"name": "environment",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get the current enviroment"
							},
							"getSignature": [
								{
									"id": 1298,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get the current enviroment"
									},
									"type": {
										"type": "reference",
										"id": 41,
										"name": "RuntimeEnvironment"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 170,
									"character": 26
								}
							]
						},
						{
							"id": 1301,
							"name": "suites",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The root suites managed by this executor"
							},
							"getSignature": [
								{
									"id": 1302,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The root suites managed by this executor"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 270,
											"name": "Suite"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 182,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1222,
								"name": "Executor.suites"
							}
						},
						{
							"id": 1392,
							"name": "_afterRun",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1393,
									"name": "_afterRun",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Code to execute after the main test run has finished to shut down the test\nsystem."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 779,
									"character": 21
								}
							]
						},
						{
							"id": 1394,
							"name": "_assignPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1395,
									"name": "_assignPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a resolved plugin to the internal plugins list"
									},
									"parameters": [
										{
											"id": 1396,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1397,
											"name": "plugin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 786,
									"character": 25
								}
							]
						},
						{
							"id": 1398,
							"name": "_beforeRun",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1399,
									"name": "_beforeRun",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Code to execute before the main test run has started to set up the test\nsystem. This is where Executors can do any last-minute configuration\nbefore the testing process begins.",
										"text": "This method returns a Promise that resolves to a boolean. A\nvalue of true indicates that Intern should skip running tests and exit\nnormally.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 802,
									"character": 22
								}
							]
						},
						{
							"id": 1402,
							"name": "_drainEventQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1403,
									"name": "_drainEventQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Emit any queued events. The event queue will be empty after this method\nruns."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 851,
									"character": 28
								}
							]
						},
						{
							"id": 1404,
							"name": "_emitCoverage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1405,
									"name": "_emitCoverage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1406,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 862,
									"character": 25
								}
							]
						},
						{
							"id": 1400,
							"name": "_initReporters",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1401,
									"name": "_initReporters",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Instantiate any configured built-in reporters"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 815,
									"character": 26
								}
							]
						},
						{
							"id": 1407,
							"name": "_loadLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1408,
									"name": "_loadLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a loader"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 876,
									"character": 23
								}
							]
						},
						{
							"id": 1411,
							"name": "_loadPlugins",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1412,
									"name": "_loadPlugins",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load scripts in the `plugins` list using the platform's native loading\nmechanism"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 936,
									"character": 24
								}
							]
						},
						{
							"id": 1409,
							"name": "_loadPluginsWithLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1410,
									"name": "_loadPluginsWithLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load scripts in the `requires` list using an external loader, if\nconfigured, or the platform's native loading mechanism"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 924,
									"character": 34
								}
							]
						},
						{
							"id": 1413,
							"name": "_loadScripts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1414,
									"name": "_loadScripts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a list of scripts using a given loader. These will be loaded\nsequentially in order."
									},
									"parameters": [
										{
											"id": 1415,
											"name": "scripts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1716,
													"name": "PluginDescriptor"
												}
											}
										},
										{
											"id": 1416,
											"name": "loader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1417,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1418,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 1419,
																	"name": "script",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 950,
															"character": 11
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 948,
									"character": 24
								}
							]
						},
						{
							"id": 1420,
							"name": "_loadSuites",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1421,
									"name": "_loadSuites",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load suites"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 984,
									"character": 23
								}
							]
						},
						{
							"id": 1422,
							"name": "_processOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1423,
									"name": "_processOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process an option"
									},
									"parameters": [
										{
											"id": 1424,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "C",
													"constraint": {
														"type": "reference",
														"id": 1649,
														"name": "Config"
													}
												}
											}
										},
										{
											"id": 1425,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 996,
									"character": 26
								}
							]
						},
						{
							"id": 1426,
							"name": "_resolveConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1427,
									"name": "_resolveConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Resolve the config object."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1003,
									"character": 26
								}
							]
						},
						{
							"id": 1428,
							"name": "_runTests",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1429,
									"name": "_runTests",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Runs each of the root suites, limited to a certain number of suites at\nthe same time by `maxConcurrency`."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1037,
									"character": 21
								}
							]
						},
						{
							"id": 1312,
							"name": "addSuite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1313,
									"name": "addSuite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a suite to the set of suites that will be run when `run` is called.",
										"text": "The suite is added by calling a factory function. The use of a factory\nallows for distinct instances of a given suite to be create when an\nexecutor has multiple root suites.\n\n```js\nintern.addSuite(parent => {\n    const suite = new Suite({\n        name: 'create new',\n        tests: [\n            new Test({\n                name: 'new test',\n                test: () => assert.doesNotThrow(() => new Component())\n            })\n        ]\n    });\n    parent.add(suite);\n});\n```\n"
									},
									"parameters": [
										{
											"id": 1314,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A function that will add a new Suite object to a given\nparent suite.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1315,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1316,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 1317,
																	"name": "parentSuite",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 270,
																		"name": "Suite"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 236,
															"character": 19
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 236,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1223,
								"name": "Executor.addSuite"
							}
						},
						{
							"id": 1303,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1304,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1230,
										"name": "Executor.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 186,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1229,
								"name": "Executor.cancel"
							}
						},
						{
							"id": 1318,
							"name": "configure",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1319,
									"name": "configure",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Configure the executor with an object containing\n[[lib/executors/Executor.Config]] properties."
									},
									"parameters": [
										{
											"id": 1320,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1321,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 244,
															"character": 20
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 244,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1231,
								"name": "Executor.configure"
							}
						},
						{
							"id": 1322,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1323,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Emit an event to all registered listeners.",
										"text": "Event listeners may execute async code, and a failing handler (one that\nrejects or throws an error) will cause the emit to fail.\n",
										"returns": "a Promise that resolves when all listeners have processed the event\n"
									},
									"typeParameter": [
										{
											"id": 1324,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1488,
												"name": "NoDataEvents"
											}
										}
									],
									"parameters": [
										{
											"id": 1325,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the event to emit"
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"id": 1488,
													"name": "NoDataEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1238,
										"name": "Executor.emit"
									}
								},
								{
									"id": 1326,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1327,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "E",
													"constraint": {
														"type": "reference",
														"id": 1449,
														"name": "Events"
													}
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1328,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "E",
														"constraint": {
															"type": "reference",
															"id": 1449,
															"name": "Events"
														}
													}
												}
											}
										},
										{
											"id": 1329,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeParameter",
													"name": "T",
													"constraint": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "typeParameter",
															"name": "E",
															"constraint": {
																"type": "reference",
																"id": 1449,
																"name": "Events"
															}
														}
													}
												},
												"objectType": {
													"type": "typeParameter",
													"name": "E",
													"constraint": {
														"type": "reference",
														"id": 1449,
														"name": "Events"
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 261,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 262,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 263,
									"character": 6
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1237,
								"name": "Executor.emit"
							}
						},
						{
							"id": 1305,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1306,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Format an error, normalizing the stack trace and resolving source map\nreferences"
									},
									"parameters": [
										{
											"id": 1307,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1308,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1246,
										"name": "Executor.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 194,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1245,
								"name": "Executor.formatError"
							}
						},
						{
							"id": 1330,
							"name": "getInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1331,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get a registered interface plugin.",
										"text": "This method calls `getPlugin` behind the scenes.\n",
										"returns": "the interface, which may be an object or a callable function, or\nundefined if no such interface was registered.\n"
									},
									"parameters": [
										{
											"id": 1332,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the interface"
											},
											"type": {
												"type": "stringLiteral",
												"value": "object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 435,
										"name": "ObjectInterface"
									}
								},
								{
									"id": 1333,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1334,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "tdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 482,
										"name": "TddInterface"
									}
								},
								{
									"id": 1335,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1336,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "bdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 575,
										"name": "BddInterface"
									}
								},
								{
									"id": 1337,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1338,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "benchmark"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1173,
										"name": "BenchmarkInterface"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 365,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 366,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 367,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 368,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 369,
									"character": 14
								}
							]
						},
						{
							"id": 1339,
							"name": "getPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1340,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get any resources registered by a particular plugin.",
										"returns": "the resource registered for the given plugin name, or undefined\nif no such plugin was registered.\n"
									},
									"typeParameter": [
										{
											"id": 1341,
											"name": "Y",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "P",
													"constraint": {
														"type": "reference",
														"id": 1466,
														"name": "Plugins"
													}
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1342,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the type of plugin (e.g., 'interface' or 'reporter')"
											},
											"type": {
												"type": "typeParameter",
												"name": "Y",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "P",
														"constraint": {
															"type": "reference",
															"id": 1466,
															"name": "Plugins"
														}
													}
												}
											}
										},
										{
											"id": 1343,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the plugin"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "Y",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "P",
													"constraint": {
														"type": "reference",
														"id": 1466,
														"name": "Plugins"
													}
												}
											}
										},
										"objectType": {
											"type": "typeParameter",
											"name": "P",
											"constraint": {
												"type": "reference",
												"id": 1466,
												"name": "Plugins"
											}
										}
									}
								},
								{
									"id": 1344,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1345,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "chai"
											}
										}
									],
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "chai"
										}
									}
								},
								{
									"id": 1346,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1347,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 435,
										"name": "ObjectInterface"
									}
								},
								{
									"id": 1348,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1349,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.tdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 482,
										"name": "TddInterface"
									}
								},
								{
									"id": 1350,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1351,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.bdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 575,
										"name": "BddInterface"
									}
								},
								{
									"id": 1352,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1353,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.benchmark"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1173,
										"name": "BenchmarkInterface"
									}
								},
								{
									"id": 1354,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1355,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 1356,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 381,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 382,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 383,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 384,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 385,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 386,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 387,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 388,
									"character": 11
								}
							]
						},
						{
							"id": 1309,
							"name": "loadScript",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1310,
									"name": "loadScript",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a script or scripts. This is a convenience method for loading and\nevaluating simple scripts, not necessarily modules. If multiple script\npaths are provided, scripts will be loaded sequentially in the order\ngiven."
									},
									"parameters": [
										{
											"id": 1311,
											"name": "script",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a path to a script\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 209,
									"character": 21
								}
							]
						},
						{
							"id": 1357,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1358,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This is a convenience method for emitting log events.",
										"text": "When debug mode is enabled, this method emits 'log' events using `emit`.\nOtherwise it does nothing.\n",
										"returns": "a Promise that resolves when all listeners have finished processing\nthe event.\n"
									},
									"parameters": [
										{
											"id": 1359,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isRest": true
											},
											"comment": {
												"text": "A list of arguments that will be stringified and combined\ninto a space-separated message."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1250,
										"name": "Executor.log"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 409,
									"character": 5
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1249,
								"name": "Executor.log"
							}
						},
						{
							"id": 1360,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1361,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a listener for a test event.",
										"text": "```js\nintern.on('error', error => {\n    console.log('An error occurred:', error);\n});\n```\n\nA listener can be notified of all events by registering for the '*'\nevent, or by calling on with only a callback:\n\n```js\nintern.on(event => {\n    console.log(`An ${event.name} event occurred:`, event.data);\n});\n```\nNote that some events are executor-specific. For example, the\n[[lib/executors/Browser]] executor will never emit a tunnelStop\nmessage.\n",
										"returns": "a handle with a `destroy` method that can be used to stop\nlistening\n"
									},
									"typeParameter": [
										{
											"id": 1362,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "E",
													"constraint": {
														"type": "reference",
														"id": 1449,
														"name": "Events"
													}
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1363,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the [[lib/executors/Executor.Events|event]] to listen\nfor"
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "E",
														"constraint": {
															"type": "reference",
															"id": 1449,
															"name": "Events"
														}
													}
												}
											}
										},
										{
											"id": 1364,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a callback that accepts a single data parameter; it may\nreturn a Promise if it needs to perform async actions"
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "E",
																	"constraint": {
																		"type": "reference",
																		"id": 1449,
																		"name": "Events"
																	}
																}
															}
														},
														"objectType": {
															"type": "typeParameter",
															"name": "E",
															"constraint": {
																"type": "reference",
																"id": 1449,
																"name": "Events"
															}
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									}
								},
								{
									"id": 1365,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1366,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1367,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 1369,
																	"name": "data",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 469,
																			"character": 44
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 1368,
																	"name": "name",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 469,
																			"character": 30
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		1369,
																		1368
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/executors/Executor.ts",
																	"line": 469,
																	"character": 24
																}
															]
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1257,
										"name": "Executor.on"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 468,
									"character": 4
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 469,
									"character": 4
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 470,
									"character": 4
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1252,
								"name": "Executor.on"
							}
						},
						{
							"id": 1370,
							"name": "registerInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1371,
									"name": "registerInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register an interface plugin",
										"text": "This is a convenience method for registering test interfaces. This method\ncalls [[lib/executors/Executor.Executor.registerPlugin]] behind the\nscenes using the name `interface.${name}`.\n"
									},
									"parameters": [
										{
											"id": 1372,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1373,
											"name": "iface",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 506,
									"character": 19
								}
							]
						},
						{
							"id": 1374,
							"name": "registerLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1375,
									"name": "registerLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a module loader.",
										"text": "This method sets the loader script that will be used to load plugins and\nsuites. The callback should accept an options object and return a\nfunction that can load modules.\n\n```js\nintern.registerLoader(options: any => {\n    // Register loader can return a Promise if it needs to load something\n    // itself\n    return intern.loadScript('some/loader.js').then(() => {\n        loader.config(options);\n        // Return a function that takes a list of modules and returns a\n        // Promise that resolves when they've been loaded.\n        return (modules: string[]) => {\n            return loader.load(modules);\n        });\n    });\n});\n```\n"
									},
									"parameters": [
										{
											"id": 1376,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a loader initialzation callback that should return a loader\nfunction, or a Promise that resolves to a loader function\n"
											},
											"type": {
												"type": "reference",
												"id": 1471,
												"name": "LoaderInit"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 535,
									"character": 16
								}
							]
						},
						{
							"id": 1377,
							"name": "registerPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1378,
									"name": "registerPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a plugin.",
										"text": "Plugins are resources that are loaded at the beginning of the testing\nprocess, after the loader but before any suites are registered. The\ncallback may return a Promise if the plugin needs to do some asynchronous\ninitialization. If the plugin is being loaded via the\n[[lib/executors/Executor.Config.plugins|config.plugins]]\nproperty, it's init callback will be passed any configured options. The\nresolved return value of the callback will be returned by\n[[lib/executors/Executor.Executor.getPlugin]].\n\n```js\nintern.registerPlugin('foo', (options: any) => {\n    return {\n        doSomething() {\n            // ...\n        },\n        doSomethingElse() {\n            // ...\n        }\n    };\n});\n```\n\nCode would use the plugin by calling getPlugin:\n\n```js\nconst { doSomething, doSomethingElse } = intern.getPlugin('foo');\ndoSomething();\n```\n"
									},
									"typeParameter": [
										{
											"id": 1379,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "P",
													"constraint": {
														"type": "reference",
														"id": 1466,
														"name": "Plugins"
													}
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1380,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "P",
														"constraint": {
															"type": "reference",
															"id": 1466,
															"name": "Plugins"
														}
													}
												}
											}
										},
										{
											"id": 1381,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the plugin name"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1382,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "an initializer function that returns the plugin resource, or\na Promise that resolves to the resource\n"
											},
											"type": {
												"type": "reference",
												"id": 1477,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "P",
																	"constraint": {
																		"type": "reference",
																		"id": 1466,
																		"name": "Plugins"
																	}
																}
															}
														},
														"objectType": {
															"type": "typeParameter",
															"name": "P",
															"constraint": {
																"type": "reference",
																"id": 1466,
																"name": "Plugins"
															}
														}
													}
												],
												"name": "PluginInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 1383,
									"name": "registerPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1384,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1385,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1477,
												"name": "PluginInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 576,
									"character": 16
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 581,
									"character": 16
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 582,
									"character": 16
								}
							]
						},
						{
							"id": 1386,
							"name": "registerReporter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1387,
									"name": "registerReporter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a reporter plugin",
										"text": "This is a convenience method for registering reporter constructors. This\nmethod calls [[lib/executors/Executor.Executor.registerPlugin]] behind\nthe scenes using the name `reporter.${name}`.\n"
									},
									"parameters": [
										{
											"id": 1388,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the reporter name"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1389,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1484,
												"name": "ReporterInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 624,
									"character": 18
								}
							]
						},
						{
							"id": 1390,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1391,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Run tests.",
										"text": "This method sets up the environment for test execution, runs the tests,\nand runs any finalization code afterwards.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 634,
									"character": 5
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1293
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1292,
								1266,
								1269,
								1268,
								1272,
								1270,
								1271,
								1281,
								1273,
								1275,
								1274,
								1280,
								1276,
								1285,
								1289,
								1291,
								1267,
								1290
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1299,
								1297,
								1301
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1392,
								1394,
								1398,
								1402,
								1404,
								1400,
								1407,
								1411,
								1409,
								1413,
								1420,
								1422,
								1426,
								1428,
								1312,
								1303,
								1318,
								1322,
								1305,
								1330,
								1339,
								1309,
								1357,
								1360,
								1370,
								1374,
								1377,
								1386,
								1390
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 74,
							"character": 42
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2545,
							"name": "Browser"
						},
						{
							"type": "reference",
							"id": 3871,
							"name": "Node"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1220,
							"name": "Executor"
						}
					]
				},
				{
					"id": 1438,
					"name": "CoverageMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The data accompanying a coverage event"
					},
					"children": [
						{
							"id": 1441,
							"name": "coverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1064,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1439,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1062,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1440,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1063,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1441,
								1439,
								1440
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1061,
							"character": 32
						}
					]
				},
				{
					"id": 1442,
					"name": "DeprecationMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1445,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1070,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1443,
							"name": "original",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1068,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1444,
							"name": "replacement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1069,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1445,
								1443,
								1444
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1067,
							"character": 35
						}
					]
				},
				{
					"id": 1449,
					"name": "Events",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Events that may be emitted by an Executor. Each event has at most one\nassociated message type. A few (e.g., afterRun) don't have messages."
					},
					"children": [
						{
							"id": 1450,
							"name": "*",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A listener can listen for this event to be notified of all events"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1084,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"id": 1446,
								"name": "ExecutorEvent"
							}
						},
						{
							"id": 1451,
							"name": "afterRun",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted after the local executor has finished running suites. This is\nfunctionally the same as runEnd."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1090,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1452,
							"name": "beforeRun",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted before the local executor loads suites"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1093,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1453,
							"name": "coverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Coverage info has been gathered"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1096,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1438,
								"name": "CoverageMessage"
							}
						},
						{
							"id": 1454,
							"name": "deprecated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A deprecated method was called"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1099,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1442,
								"name": "DeprecationMessage"
							}
						},
						{
							"id": 1455,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An unhandled error occurs"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1102,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Error"
							}
						},
						{
							"id": 1456,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A debug log event"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1105,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1457,
							"name": "runEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All tests have finished running. This is functionally the same as\nafterRun."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1111,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1458,
							"name": "runStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted just before tests start running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1114,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1459,
							"name": "suiteAdd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A new suite has been added"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1117,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							}
						},
						{
							"id": 1460,
							"name": "suiteEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite has fininshed running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							}
						},
						{
							"id": 1461,
							"name": "suiteStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite has started running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1123,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							}
						},
						{
							"id": 1462,
							"name": "testAdd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A new test has been added"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1126,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							}
						},
						{
							"id": 1463,
							"name": "testEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test has finished"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1129,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							}
						},
						{
							"id": 1464,
							"name": "testStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test has started"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1132,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							}
						},
						{
							"id": 1465,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A non-fatal error occurred"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1135,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1450,
								1451,
								1452,
								1453,
								1454,
								1455,
								1456,
								1457,
								1458,
								1459,
								1460,
								1461,
								1462,
								1463,
								1464,
								1465
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1082,
							"character": 23
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 4542,
							"name": "NodeEvents"
						}
					]
				},
				{
					"id": 1220,
					"name": "Executor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This interface represents the core functionality of an Executor"
					},
					"children": [
						{
							"id": 1221,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 45,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 1649,
								"name": "Config"
							}
						},
						{
							"id": 1222,
							"name": "suites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 270,
									"name": "Suite"
								}
							}
						},
						{
							"id": 1223,
							"name": "addSuite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1224,
									"name": "addSuite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1225,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1226,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1227,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 1228,
																	"name": "parentSuite",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 270,
																		"name": "Suite"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 48,
															"character": 19
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 48,
									"character": 10
								}
							]
						},
						{
							"id": 1229,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1230,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 50,
									"character": 8
								}
							]
						},
						{
							"id": 1231,
							"name": "configure",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1232,
									"name": "configure",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1233,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1234,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"indexSignature": [
														{
															"id": 1235,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 1236,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 52,
															"character": 20
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 52,
									"character": 11
								}
							]
						},
						{
							"id": 1237,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1238,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1239,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1488,
												"name": "NoDataEvents"
											}
										}
									],
									"parameters": [
										{
											"id": 1240,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"id": 1488,
													"name": "NoDataEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 1241,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1242,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1449,
													"name": "Events"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1243,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 1449,
														"name": "Events"
													}
												}
											}
										},
										{
											"id": 1244,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeParameter",
													"name": "T",
													"constraint": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 1449,
															"name": "Events"
														}
													}
												},
												"objectType": {
													"type": "reference",
													"name": "Events"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 54,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 55,
									"character": 6
								}
							]
						},
						{
							"id": 1245,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1246,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1247,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1248,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 57,
									"character": 13
								}
							]
						},
						{
							"id": 1249,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1250,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1251,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 59,
									"character": 5
								}
							]
						},
						{
							"id": 1252,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1253,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 1254,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1449,
													"name": "Events"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1255,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 1449,
														"name": "Events"
													}
												}
											}
										},
										{
											"id": 1256,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 1449,
																	"name": "Events"
																}
															}
														},
														"objectType": {
															"type": "reference",
															"name": "Events"
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									}
								},
								{
									"id": 1257,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1258,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1259,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 1261,
																	"name": "data",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 65,
																			"character": 44
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 1260,
																	"name": "name",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 65,
																			"character": 30
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		1261,
																		1260
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/executors/Executor.ts",
																	"line": 65,
																	"character": 24
																}
															]
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 61,
									"character": 4
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 65,
									"character": 4
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1221,
								1222
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1223,
								1229,
								1231,
								1237,
								1245,
								1249,
								1252
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 44,
							"character": 25
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1262,
							"name": "BaseExecutor"
						},
						{
							"type": "reference",
							"id": 2545,
							"name": "Browser"
						},
						{
							"type": "reference",
							"id": 3871,
							"name": "Node"
						}
					]
				},
				{
					"id": 1446,
					"name": "ExecutorEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1448,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1075,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1447,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1074,
									"character": 6
								}
							],
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 1449,
									"name": "Events"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1448,
								1447
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1073,
							"character": 30
						}
					]
				},
				{
					"id": 1430,
					"name": "InternEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1431,
							"name": "E",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1449,
								"name": "Events"
							}
						}
					],
					"children": [
						{
							"id": 1433,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1046,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1432,
							"name": "eventName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1045,
									"character": 11
								}
							],
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "E",
									"constraint": {
										"type": "reference",
										"id": 1449,
										"name": "Events"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1433,
								1432
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1044,
							"character": 28
						}
					]
				},
				{
					"id": 1434,
					"name": "Listener",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A generic event listener"
					},
					"typeParameter": [
						{
							"id": 1435,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"signatures": [
						{
							"id": 1436,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A generic event listener"
							},
							"parameters": [
								{
									"id": 1437,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1054,
							"character": 25
						}
					]
				},
				{
					"id": 1468,
					"name": "Loader",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An async loader callback."
					},
					"signatures": [
						{
							"id": 1469,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An async loader callback."
							},
							"parameters": [
								{
									"id": 1470,
									"name": "modules",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1151,
							"character": 23
						}
					]
				},
				{
					"id": 1471,
					"name": "LoaderInit",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A loader initialization function."
					},
					"signatures": [
						{
							"id": 1472,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A loader initialization function."
							},
							"parameters": [
								{
									"id": 1473,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1474,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 1475,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1476,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/executors/Executor.ts",
													"line": 1159,
													"character": 11
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1468,
												"name": "Loader"
											}
										],
										"name": "Promise"
									},
									{
										"type": "reference",
										"id": 1468,
										"name": "Loader"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1158,
							"character": 27
						}
					]
				},
				{
					"id": 1477,
					"name": "PluginInitializer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1478,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"signatures": [
						{
							"id": 1479,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1480,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1481,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"indexSignature": [
														{
															"id": 1482,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 1483,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									},
									{
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1162,
							"character": 34
						}
					]
				},
				{
					"id": 1466,
					"name": "Plugins",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Known plugin types"
					},
					"children": [
						{
							"id": 1467,
							"name": "reporter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1145,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1484,
								"name": "ReporterInitializer"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1467
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1144,
							"character": 24
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 4090,
							"name": "NodePlugins"
						}
					]
				},
				{
					"id": 1487,
					"name": "Reporter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A 'reporter' as far as Executor is concerned. There is currently no\npre-defined functionality required for reporters."
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1174,
							"character": 25
						}
					]
				},
				{
					"id": 1484,
					"name": "ReporterInitializer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1485,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1486,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1487,
								"name": "Reporter"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1166,
							"character": 36
						}
					]
				},
				{
					"id": 1488,
					"name": "NoDataEvents",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A list of event names that don't have associated data"
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Executor.ts",
							"line": 1139,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "runStart"
							},
							{
								"type": "stringLiteral",
								"value": "runEnd"
							},
							{
								"type": "stringLiteral",
								"value": "beforeRun"
							},
							{
								"type": "stringLiteral",
								"value": "afterRun"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1262
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1438,
						1442,
						1449,
						1220,
						1446,
						1430,
						1434,
						1468,
						1471,
						1477,
						1466,
						1487,
						1484
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1488
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/executors/Executor.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3870,
			"name": "\"lib/executors/Node\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/executors/Node.ts",
			"children": [
				{
					"id": 4565,
					"name": "FunctionQueue",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A basic FIFO function queue to limit the number of currently executing\nasynchronous functions."
					},
					"children": [
						{
							"id": 4570,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4571,
									"name": "new FunctionQueue",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4572,
											"name": "maxConcurrency",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4565,
										"name": "FunctionQueue"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1149,
									"character": 31
								}
							]
						},
						{
							"id": 4568,
							"name": "activePromises",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1148,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Promise"
								}
							}
						},
						{
							"id": 4569,
							"name": "funcPromises",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1149,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Promise"
								}
							}
						},
						{
							"id": 4566,
							"name": "maxConcurrency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1146,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4567,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1147,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4582,
									"name": "QueueEntry"
								}
							}
						},
						{
							"id": 4578,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 4579,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1171,
									"character": 7
								}
							]
						},
						{
							"id": 4573,
							"name": "enqueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 4574,
									"name": "enqueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4575,
											"name": "func",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4576,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 4577,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Node.ts",
															"line": 1158,
															"character": 15
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1158,
									"character": 9
								}
							]
						},
						{
							"id": 4580,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 4581,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1177,
									"character": 6
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4570
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4568,
								4569,
								4566,
								4567
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4578,
								4573,
								4580
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1145,
							"character": 19
						}
					]
				},
				{
					"id": 3871,
					"name": "Node",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3888,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3889,
									"name": "new Node",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3890,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3891,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3871,
										"name": "Node"
									},
									"overwrites": {
										"type": "reference",
										"id": 1293,
										"name": "BaseExecutor.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 73,
									"character": 48
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1293,
								"name": "BaseExecutor.__constructor"
							}
						},
						{
							"id": 3979,
							"name": "_cancelToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 98,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "CancelToken"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1292,
								"name": "BaseExecutor._cancelToken"
							}
						},
						{
							"id": 3953,
							"name": "_config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 79,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1649,
								"name": "Config"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "BaseExecutor._config"
							}
						},
						{
							"id": 3875,
							"name": "_coverageFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 66,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3876,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3877,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3878,
															"name": "filename",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/executors/Node.ts",
													"line": 66,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3874,
							"name": "_coverageMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 65,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "CoverageMap"
							}
						},
						{
							"id": 3956,
							"name": "_errorFormatter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 82,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 396,
										"name": "ErrorFormatter"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1269,
								"name": "BaseExecutor._errorFormatter"
							}
						},
						{
							"id": 3955,
							"name": "_events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 81,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1430,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4542,
											"name": "NodeEvents"
										}
									],
									"name": "InternEvent"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "BaseExecutor._events"
							}
						},
						{
							"id": 3959,
							"name": "_hasEmittedErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 85,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 1272,
								"name": "BaseExecutor._hasEmittedErrors"
							}
						},
						{
							"id": 3957,
							"name": "_hasSuiteErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 83,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "BaseExecutor._hasSuiteErrors"
							}
						},
						{
							"id": 3958,
							"name": "_hasTestErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 84,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"id": 1271,
								"name": "BaseExecutor._hasTestErrors"
							}
						},
						{
							"id": 3880,
							"name": "_instrumentBasePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 68,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3883,
							"name": "_instrumentedMaps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 71,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "MapStore"
							}
						},
						{
							"id": 3881,
							"name": "_instrumenter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 69,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Instrumenter"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3968,
							"name": "_listeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 91,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3969,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 3970,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3971,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1434,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Listener"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Executor.ts",
											"line": 91,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1281,
								"name": "BaseExecutor._listeners"
							}
						},
						{
							"id": 3960,
							"name": "_loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 86,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1468,
								"name": "Loader"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1273,
								"name": "BaseExecutor._loader"
							}
						},
						{
							"id": 3962,
							"name": "_loaderInit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 88,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1468,
												"name": "Loader"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1275,
								"name": "BaseExecutor._loaderInit"
							}
						},
						{
							"id": 3961,
							"name": "_loaderOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 87,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "BaseExecutor._loaderOptions"
							}
						},
						{
							"id": 3879,
							"name": "_loadingFunctionalSuites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 67,
									"character": 36
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3967,
							"name": "_loadingPluginOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 90,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "BaseExecutor._loadingPluginOptions"
							}
						},
						{
							"id": 3963,
							"name": "_loadingPlugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 89,
									"character": 27
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3964,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 3966,
												"name": "init",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "packages/core/src/lib/executors/Executor.ts",
														"line": 89,
														"character": 49
													}
												],
												"type": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "void"
														}
													],
													"name": "Promise"
												}
											},
											{
												"id": 3965,
												"name": "name",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "packages/core/src/lib/executors/Executor.ts",
														"line": 89,
														"character": 35
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													3966,
													3965
												]
											}
										],
										"sources": [
											{
												"fileName": "packages/core/src/lib/executors/Executor.ts",
												"line": 89,
												"character": 28
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "BaseExecutor._loadingPlugins"
							}
						},
						{
							"id": 3972,
							"name": "_plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 92,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3973,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 3974,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3975,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Executor.ts",
											"line": 92,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1285,
								"name": "BaseExecutor._plugins"
							}
						},
						{
							"id": 3976,
							"name": "_reporters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 93,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1487,
									"name": "Reporter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1289,
								"name": "BaseExecutor._reporters"
							}
						},
						{
							"id": 3978,
							"name": "_reportersInitialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 95,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1291,
								"name": "BaseExecutor._reportersInitialized"
							}
						},
						{
							"id": 3954,
							"name": "_rootSuite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 80,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1267,
								"name": "BaseExecutor._rootSuite"
							}
						},
						{
							"id": 3977,
							"name": "_runPromise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 94,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1290,
								"name": "BaseExecutor._runPromise"
							}
						},
						{
							"id": 3887,
							"name": "_sessionSuites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 73,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 270,
											"name": "Suite"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3882,
							"name": "_sourceMaps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 70,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "MapStore"
							}
						},
						{
							"id": 3884,
							"name": "_unhookRequire",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 72,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3885,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3886,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/executors/Node.ts",
													"line": 72,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3872,
							"name": "server",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 3500,
										"name": "Server"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3873,
							"name": "tunnel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 63,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Tunnel"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3980,
							"name": "config",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The resolved configuration for this executor."
							},
							"getSignature": [
								{
									"id": 3981,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The resolved configuration for this executor."
									},
									"type": {
										"type": "unknown",
										"name": "C"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1299,
										"name": "BaseExecutor.config"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 175,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1299,
								"name": "BaseExecutor.config"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1221,
								"name": "Executor.config"
							}
						},
						{
							"id": 3892,
							"name": "coverageMap",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3893,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "CoverageMap"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 167,
									"character": 17
								}
							]
						},
						{
							"id": 3894,
							"name": "environment",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3895,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 41,
										"name": "RuntimeEnvironment"
									},
									"overwrites": {
										"type": "reference",
										"id": 1297,
										"name": "BaseExecutor.environment"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 171,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1297,
								"name": "BaseExecutor.environment"
							}
						},
						{
							"id": 3900,
							"name": "hasCoveredFiles",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3901,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 183,
									"character": 21
								}
							]
						},
						{
							"id": 3896,
							"name": "instrumentedMapStore",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3897,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "MapStore"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 175,
									"character": 26
								}
							]
						},
						{
							"id": 3898,
							"name": "sourceMapStore",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3899,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "MapStore"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 179,
									"character": 20
								}
							]
						},
						{
							"id": 3902,
							"name": "suites",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The root suites managed by this executor"
							},
							"getSignature": [
								{
									"id": 3903,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The root suites managed by this executor"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 270,
											"name": "Suite"
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 1301,
										"name": "BaseExecutor.suites"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 192,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1301,
								"name": "BaseExecutor.suites"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1222,
								"name": "Executor.suites"
							}
						},
						{
							"id": 3928,
							"name": "_afterRun",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3929,
									"name": "_afterRun",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1392,
										"name": "BaseExecutor._afterRun"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 322,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1392,
								"name": "BaseExecutor._afterRun"
							}
						},
						{
							"id": 4062,
							"name": "_assignPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4063,
									"name": "_assignPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a resolved plugin to the internal plugins list"
									},
									"parameters": [
										{
											"id": 4064,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4065,
											"name": "plugin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1394,
										"name": "BaseExecutor._assignPlugin"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 786,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1394,
								"name": "BaseExecutor._assignPlugin"
							}
						},
						{
							"id": 3930,
							"name": "_beforeRun",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3931,
									"name": "_beforeRun",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1398,
										"name": "BaseExecutor._beforeRun"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 349,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1398,
								"name": "BaseExecutor._beforeRun"
							}
						},
						{
							"id": 3934,
							"name": "_createSessionSuites",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3935,
									"name": "_createSessionSuites",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates suites for each environment in which tests will be executed. This\nmethod will only be called if there are both environments and suites to\nrun."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 462,
									"character": 32
								}
							]
						},
						{
							"id": 3932,
							"name": "_createTunnel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3933,
									"name": "_createTunnel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Tunnel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 423,
									"character": 25
								}
							]
						},
						{
							"id": 4068,
							"name": "_drainEventQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4069,
									"name": "_drainEventQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Emit any queued events. The event queue will be empty after this method\nruns."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1402,
										"name": "BaseExecutor._drainEventQueue"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 851,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1402,
								"name": "BaseExecutor._drainEventQueue"
							}
						},
						{
							"id": 4070,
							"name": "_emitCoverage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4071,
									"name": "_emitCoverage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4072,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1404,
										"name": "BaseExecutor._emitCoverage"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 862,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1404,
								"name": "BaseExecutor._emitCoverage"
							}
						},
						{
							"id": 3942,
							"name": "_getSeleniumDriverNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3943,
									"name": "_getSeleniumDriverNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Return the names of all the selenium drivers that should be needed based\non the environments specified in the config."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 915,
									"character": 35
								}
							]
						},
						{
							"id": 4066,
							"name": "_initReporters",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4067,
									"name": "_initReporters",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Instantiate any configured built-in reporters"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1400,
										"name": "BaseExecutor._initReporters"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 815,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1400,
								"name": "BaseExecutor._initReporters"
							}
						},
						{
							"id": 3936,
							"name": "_loadFunctionalSuites",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3937,
									"name": "_loadFunctionalSuites",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load functional test suites"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 602,
									"character": 33
								}
							]
						},
						{
							"id": 4073,
							"name": "_loadLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4074,
									"name": "_loadLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a loader"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1407,
										"name": "BaseExecutor._loadLoader"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 876,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1407,
								"name": "BaseExecutor._loadLoader"
							}
						},
						{
							"id": 4077,
							"name": "_loadPlugins",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4078,
									"name": "_loadPlugins",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load scripts in the `plugins` list using the platform's native loading\nmechanism"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1411,
										"name": "BaseExecutor._loadPlugins"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 936,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1411,
								"name": "BaseExecutor._loadPlugins"
							}
						},
						{
							"id": 4075,
							"name": "_loadPluginsWithLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4076,
									"name": "_loadPluginsWithLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load scripts in the `requires` list using an external loader, if\nconfigured, or the platform's native loading mechanism"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1409,
										"name": "BaseExecutor._loadPluginsWithLoader"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 924,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1409,
								"name": "BaseExecutor._loadPluginsWithLoader"
							}
						},
						{
							"id": 4079,
							"name": "_loadScripts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4080,
									"name": "_loadScripts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load a list of scripts using a given loader. These will be loaded\nsequentially in order."
									},
									"parameters": [
										{
											"id": 4081,
											"name": "scripts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1716,
													"name": "PluginDescriptor"
												}
											}
										},
										{
											"id": 4082,
											"name": "loader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4083,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4084,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 4085,
																	"name": "script",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 950,
															"character": 11
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1413,
										"name": "BaseExecutor._loadScripts"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 948,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1413,
								"name": "BaseExecutor._loadScripts"
							}
						},
						{
							"id": 3938,
							"name": "_loadSuites",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3939,
									"name": "_loadSuites",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Override Executor#_loadSuites to set instrumentation hooks before loading\nsuites"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1420,
										"name": "BaseExecutor._loadSuites"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 629,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1420,
								"name": "BaseExecutor._loadSuites"
							}
						},
						{
							"id": 4086,
							"name": "_processOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4087,
									"name": "_processOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process an option"
									},
									"parameters": [
										{
											"id": 4088,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 1649,
													"name": "Config"
												}
											}
										},
										{
											"id": 4089,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1422,
										"name": "BaseExecutor._processOption"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 996,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1422,
								"name": "BaseExecutor._processOption"
							}
						},
						{
							"id": 3951,
							"name": "_removeInstrumentationHooks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3952,
									"name": "_removeInstrumentationHooks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Removes instrumentation hooks"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1094,
									"character": 39
								}
							]
						},
						{
							"id": 3940,
							"name": "_resolveConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3941,
									"name": "_resolveConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1426,
										"name": "BaseExecutor._resolveConfig"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 646,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1426,
								"name": "BaseExecutor._resolveConfig"
							}
						},
						{
							"id": 3946,
							"name": "_runRemoteTests",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3947,
									"name": "_runRemoteTests",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3948,
											"name": "sessions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 270,
													"name": "Suite"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1033,
									"character": 27
								}
							]
						},
						{
							"id": 3944,
							"name": "_runTests",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3945,
									"name": "_runTests",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1428,
										"name": "BaseExecutor._runTests"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 945,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1428,
								"name": "BaseExecutor._runTests"
							}
						},
						{
							"id": 3949,
							"name": "_setInstrumentationHooks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3950,
									"name": "_setInstrumentationHooks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds hooks for code coverage instrumentation in the Node.js loader."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1072,
									"character": 36
								}
							]
						},
						{
							"id": 3904,
							"name": "addSuite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3905,
									"name": "addSuite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Override Executor#addSuite to handle functional suites"
									},
									"parameters": [
										{
											"id": 3906,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3907,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 3908,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 3909,
																	"name": "parentSuite",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 270,
																		"name": "Suite"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Node.ts",
															"line": 210,
															"character": 19
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 1312,
										"name": "BaseExecutor.addSuite"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 210,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1312,
								"name": "BaseExecutor.addSuite"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1223,
								"name": "Executor.addSuite"
							}
						},
						{
							"id": 3982,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3983,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1303,
										"name": "BaseExecutor.cancel"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1230,
										"name": "Executor.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 186,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1303,
								"name": "BaseExecutor.cancel"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1229,
								"name": "Executor.cancel"
							}
						},
						{
							"id": 3988,
							"name": "configure",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3989,
									"name": "configure",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Configure the executor with an object containing\n[[lib/executors/Executor.Config]] properties."
									},
									"parameters": [
										{
											"id": 3990,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3991,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/executors/Executor.ts",
															"line": 244,
															"character": 20
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1318,
										"name": "BaseExecutor.configure"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 244,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1318,
								"name": "BaseExecutor.configure"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1231,
								"name": "Executor.configure"
							}
						},
						{
							"id": 3992,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3993,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Emit an event to all registered listeners.",
										"text": "Event listeners may execute async code, and a failing handler (one that\nrejects or throws an error) will cause the emit to fail.\n",
										"returns": "a Promise that resolves when all listeners have processed the event\n"
									},
									"typeParameter": [
										{
											"id": 3994,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1488,
												"name": "NoDataEvents"
											}
										}
									],
									"parameters": [
										{
											"id": 3995,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the event to emit"
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"id": 1488,
													"name": "NoDataEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1322,
										"name": "BaseExecutor.emit"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1238,
										"name": "Executor.emit"
									}
								},
								{
									"id": 3996,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 3997,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4542,
													"name": "NodeEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3998,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 4542,
														"name": "NodeEvents"
													}
												}
											}
										},
										{
											"id": 3999,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeParameter",
													"name": "T",
													"constraint": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 4542,
															"name": "NodeEvents"
														}
													}
												},
												"objectType": {
													"type": "reference",
													"name": "NodeEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1322,
										"name": "BaseExecutor.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 261,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 262,
									"character": 6
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 263,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1322,
								"name": "BaseExecutor.emit"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1237,
								"name": "Executor.emit"
							}
						},
						{
							"id": 3984,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3985,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Format an error, normalizing the stack trace and resolving source map\nreferences"
									},
									"parameters": [
										{
											"id": 3986,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3987,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1305,
										"name": "BaseExecutor.formatError"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1246,
										"name": "Executor.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 194,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1305,
								"name": "BaseExecutor.formatError"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1245,
								"name": "Executor.formatError"
							}
						},
						{
							"id": 4000,
							"name": "getInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4001,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get a registered interface plugin.",
										"text": "This method calls `getPlugin` behind the scenes.\n",
										"returns": "the interface, which may be an object or a callable function, or\nundefined if no such interface was registered.\n"
									},
									"parameters": [
										{
											"id": 4002,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the interface"
											},
											"type": {
												"type": "stringLiteral",
												"value": "object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 435,
										"name": "ObjectInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								},
								{
									"id": 4003,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4004,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "tdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 482,
										"name": "TddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								},
								{
									"id": 4005,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4006,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "bdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 575,
										"name": "BddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								},
								{
									"id": 4007,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4008,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "benchmark"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1173,
										"name": "BenchmarkInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1330,
										"name": "BaseExecutor.getInterface"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 365,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 366,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 367,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 368,
									"character": 14
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 369,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1330,
								"name": "BaseExecutor.getInterface"
							}
						},
						{
							"id": 4009,
							"name": "getPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4010,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get any resources registered by a particular plugin.",
										"returns": "the resource registered for the given plugin name, or undefined\nif no such plugin was registered.\n"
									},
									"typeParameter": [
										{
											"id": 4011,
											"name": "Y",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4090,
													"name": "NodePlugins"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4012,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the type of plugin (e.g., 'interface' or 'reporter')"
											},
											"type": {
												"type": "typeParameter",
												"name": "Y",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 4090,
														"name": "NodePlugins"
													}
												}
											}
										},
										{
											"id": 4013,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the name of the plugin"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "Y",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4090,
													"name": "NodePlugins"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "NodePlugins"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 4014,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4015,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "chai"
											}
										}
									],
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "chai"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 4016,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4017,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 435,
										"name": "ObjectInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 4018,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4019,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.tdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 482,
										"name": "TddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 4020,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4021,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.bdd"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 575,
										"name": "BddInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 4022,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4023,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "stringLiteral",
												"value": "interface.benchmark"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1173,
										"name": "BenchmarkInterface"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								},
								{
									"id": 4024,
									"name": "getPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 4025,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 4026,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1339,
										"name": "BaseExecutor.getPlugin"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 381,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 382,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 383,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 384,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 385,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 386,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 387,
									"character": 11
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 388,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1339,
								"name": "BaseExecutor.getPlugin"
							}
						},
						{
							"id": 3910,
							"name": "getTunnel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3911,
									"name": "getTunnel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Retrieve a registered tunnel constructor"
									},
									"parameters": [
										{
											"id": 3912,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "Tunnel"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 221,
									"character": 11
								}
							]
						},
						{
							"id": 3913,
							"name": "instrumentCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3914,
									"name": "instrumentCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Insert coverage instrumentation into a given code string"
									},
									"parameters": [
										{
											"id": 3915,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3916,
											"name": "filename",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3917,
											"name": "shouldCompile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 228,
									"character": 16
								}
							]
						},
						{
							"id": 3918,
							"name": "loadScript",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3919,
									"name": "loadScript",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Load scripts using Node's require"
									},
									"parameters": [
										{
											"id": 3920,
											"name": "script",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 1309,
										"name": "BaseExecutor.loadScript"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 273,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1309,
								"name": "BaseExecutor.loadScript"
							}
						},
						{
							"id": 4027,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4028,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This is a convenience method for emitting log events.",
										"text": "When debug mode is enabled, this method emits 'log' events using `emit`.\nOtherwise it does nothing.\n",
										"returns": "a Promise that resolves when all listeners have finished processing\nthe event.\n"
									},
									"parameters": [
										{
											"id": 4029,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isRest": true
											},
											"comment": {
												"text": "A list of arguments that will be stringified and combined\ninto a space-separated message."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1357,
										"name": "BaseExecutor.log"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1250,
										"name": "Executor.log"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 409,
									"character": 5
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1357,
								"name": "BaseExecutor.log"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1249,
								"name": "Executor.log"
							}
						},
						{
							"id": 4030,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4031,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Add a listener for a test event.",
										"text": "```js\nintern.on('error', error => {\n    console.log('An error occurred:', error);\n});\n```\n\nA listener can be notified of all events by registering for the '*'\nevent, or by calling on with only a callback:\n\n```js\nintern.on(event => {\n    console.log(`An ${event.name} event occurred:`, event.data);\n});\n```\nNote that some events are executor-specific. For example, the\n[[lib/executors/Browser]] executor will never emit a tunnelStop\nmessage.\n",
										"returns": "a handle with a `destroy` method that can be used to stop\nlistening\n"
									},
									"typeParameter": [
										{
											"id": 4032,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4542,
													"name": "NodeEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4033,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the [[lib/executors/Executor.Events|event]] to listen\nfor"
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 4542,
														"name": "NodeEvents"
													}
												}
											}
										},
										{
											"id": 4034,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a callback that accepts a single data parameter; it may\nreturn a Promise if it needs to perform async actions"
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 4542,
																	"name": "NodeEvents"
																}
															}
														},
														"objectType": {
															"type": "reference",
															"name": "NodeEvents"
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1360,
										"name": "BaseExecutor.on"
									}
								},
								{
									"id": 4035,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4036,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1434,
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4037,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 4039,
																	"name": "data",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 469,
																			"character": 44
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 4038,
																	"name": "name",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/core/src/lib/executors/Executor.ts",
																			"line": 469,
																			"character": 30
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		4039,
																		4038
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/executors/Executor.ts",
																	"line": 469,
																	"character": 24
																}
															]
														}
													}
												],
												"name": "Listener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Handle"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1360,
										"name": "BaseExecutor.on"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1257,
										"name": "Executor.on"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 468,
									"character": 4
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 469,
									"character": 4
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 470,
									"character": 4
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1360,
								"name": "BaseExecutor.on"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1252,
								"name": "Executor.on"
							}
						},
						{
							"id": 4040,
							"name": "registerInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4041,
									"name": "registerInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register an interface plugin",
										"text": "This is a convenience method for registering test interfaces. This method\ncalls [[lib/executors/Executor.Executor.registerPlugin]] behind the\nscenes using the name `interface.${name}`.\n"
									},
									"parameters": [
										{
											"id": 4042,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4043,
											"name": "iface",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1370,
										"name": "BaseExecutor.registerInterface"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 506,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1370,
								"name": "BaseExecutor.registerInterface"
							}
						},
						{
							"id": 4044,
							"name": "registerLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4045,
									"name": "registerLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a module loader.",
										"text": "This method sets the loader script that will be used to load plugins and\nsuites. The callback should accept an options object and return a\nfunction that can load modules.\n\n```js\nintern.registerLoader(options: any => {\n    // Register loader can return a Promise if it needs to load something\n    // itself\n    return intern.loadScript('some/loader.js').then(() => {\n        loader.config(options);\n        // Return a function that takes a list of modules and returns a\n        // Promise that resolves when they've been loaded.\n        return (modules: string[]) => {\n            return loader.load(modules);\n        });\n    });\n});\n```\n"
									},
									"parameters": [
										{
											"id": 4046,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a loader initialzation callback that should return a loader\nfunction, or a Promise that resolves to a loader function\n"
											},
											"type": {
												"type": "reference",
												"id": 1471,
												"name": "LoaderInit"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1374,
										"name": "BaseExecutor.registerLoader"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 535,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1374,
								"name": "BaseExecutor.registerLoader"
							}
						},
						{
							"id": 4047,
							"name": "registerPlugin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4048,
									"name": "registerPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a plugin.",
										"text": "Plugins are resources that are loaded at the beginning of the testing\nprocess, after the loader but before any suites are registered. The\ncallback may return a Promise if the plugin needs to do some asynchronous\ninitialization. If the plugin is being loaded via the\n[[lib/executors/Executor.Config.plugins|config.plugins]]\nproperty, it's init callback will be passed any configured options. The\nresolved return value of the callback will be returned by\n[[lib/executors/Executor.Executor.getPlugin]].\n\n```js\nintern.registerPlugin('foo', (options: any) => {\n    return {\n        doSomething() {\n            // ...\n        },\n        doSomethingElse() {\n            // ...\n        }\n    };\n});\n```\n\nCode would use the plugin by calling getPlugin:\n\n```js\nconst { doSomething, doSomethingElse } = intern.getPlugin('foo');\ndoSomething();\n```\n"
									},
									"typeParameter": [
										{
											"id": 4049,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4090,
													"name": "NodePlugins"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4050,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 4090,
														"name": "NodePlugins"
													}
												}
											}
										},
										{
											"id": 4051,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the plugin name"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4052,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "an initializer function that returns the plugin resource, or\na Promise that resolves to the resource\n"
											},
											"type": {
												"type": "reference",
												"id": 1477,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 4090,
																	"name": "NodePlugins"
																}
															}
														},
														"objectType": {
															"type": "reference",
															"name": "NodePlugins"
														}
													}
												],
												"name": "PluginInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1377,
										"name": "BaseExecutor.registerPlugin"
									}
								},
								{
									"id": 4053,
									"name": "registerPlugin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4054,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4055,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1477,
												"name": "PluginInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1377,
										"name": "BaseExecutor.registerPlugin"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 576,
									"character": 16
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 581,
									"character": 16
								},
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 582,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1377,
								"name": "BaseExecutor.registerPlugin"
							}
						},
						{
							"id": 4056,
							"name": "registerReporter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4057,
									"name": "registerReporter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a reporter plugin",
										"text": "This is a convenience method for registering reporter constructors. This\nmethod calls [[lib/executors/Executor.Executor.registerPlugin]] behind\nthe scenes using the name `reporter.${name}`.\n"
									},
									"parameters": [
										{
											"id": 4058,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the reporter name"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4059,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1484,
												"name": "ReporterInitializer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1386,
										"name": "BaseExecutor.registerReporter"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 624,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1386,
								"name": "BaseExecutor.registerReporter"
							}
						},
						{
							"id": 3921,
							"name": "registerTunnel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3922,
									"name": "registerTunnel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register a tunnel constructor with the plugin system. It can be retrieved\nlater with getTunnel or getPlugin."
									},
									"parameters": [
										{
											"id": 3923,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3924,
											"name": "Ctor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "query",
												"queryType": {
													"type": "reference",
													"name": "Tunnel"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 305,
									"character": 16
								}
							]
						},
						{
							"id": 4060,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4061,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Run tests.",
										"text": "This method sets up the environment for test execution, runs the tests,\nand runs any finalization code afterwards.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1390,
										"name": "BaseExecutor.run"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 634,
									"character": 5
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1390,
								"name": "BaseExecutor.run"
							}
						},
						{
							"id": 3925,
							"name": "shouldInstrumentFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3926,
									"name": "shouldInstrumentFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Return true if a given file should be instrumented based on the current\nconfig"
									},
									"parameters": [
										{
											"id": 3927,
											"name": "filename",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 313,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3888
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3979,
								3953,
								3875,
								3874,
								3956,
								3955,
								3959,
								3957,
								3958,
								3880,
								3883,
								3881,
								3968,
								3960,
								3962,
								3961,
								3879,
								3967,
								3963,
								3972,
								3976,
								3978,
								3954,
								3977,
								3887,
								3882,
								3884,
								3872,
								3873
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3980,
								3892,
								3894,
								3900,
								3896,
								3898,
								3902
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3928,
								4062,
								3930,
								3934,
								3932,
								4068,
								4070,
								3942,
								4066,
								3936,
								4073,
								4077,
								4075,
								4079,
								3938,
								4086,
								3951,
								3940,
								3946,
								3944,
								3949,
								3904,
								3982,
								3988,
								3992,
								3984,
								4000,
								4009,
								3910,
								3913,
								3918,
								4027,
								4030,
								4040,
								4044,
								4047,
								4056,
								3921,
								4060,
								3925
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 61,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1262,
							"typeArguments": [
								{
									"type": "reference",
									"id": 4542,
									"name": "NodeEvents"
								},
								{
									"type": "reference",
									"id": 1649,
									"name": "Config"
								},
								{
									"type": "reference",
									"id": 4090,
									"name": "NodePlugins"
								}
							],
							"name": "BaseExecutor"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1220,
							"name": "Executor"
						}
					]
				},
				{
					"id": 4542,
					"name": "NodeEvents",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4549,
							"name": "*",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A listener can listen for this event to be notified of all events"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1084,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"id": 1446,
								"name": "ExecutorEvent"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1450,
								"name": "Events.'*'"
							}
						},
						{
							"id": 4550,
							"name": "afterRun",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted after the local executor has finished running suites. This is\nfunctionally the same as runEnd."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1090,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1451,
								"name": "Events.afterRun"
							}
						},
						{
							"id": 4551,
							"name": "beforeRun",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted before the local executor loads suites"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1093,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1452,
								"name": "Events.beforeRun"
							}
						},
						{
							"id": 4552,
							"name": "coverage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Coverage info has been gathered"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1096,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1438,
								"name": "CoverageMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1453,
								"name": "Events.coverage"
							}
						},
						{
							"id": 4553,
							"name": "deprecated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A deprecated method was called"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1099,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1442,
								"name": "DeprecationMessage"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1454,
								"name": "Events.deprecated"
							}
						},
						{
							"id": 4554,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An unhandled error occurs"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1102,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Error"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1455,
								"name": "Events.error"
							}
						},
						{
							"id": 4555,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A debug log event"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1105,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1456,
								"name": "Events.log"
							}
						},
						{
							"id": 4556,
							"name": "runEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All tests have finished running. This is functionally the same as\nafterRun."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1111,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1457,
								"name": "Events.runEnd"
							}
						},
						{
							"id": 4557,
							"name": "runStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted just before tests start running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1114,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1458,
								"name": "Events.runStart"
							}
						},
						{
							"id": 4543,
							"name": "serverEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test server has stopped"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1123,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 3500,
								"name": "Server"
							}
						},
						{
							"id": 4544,
							"name": "serverStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test server was started"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1126,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 3500,
								"name": "Server"
							}
						},
						{
							"id": 4558,
							"name": "suiteAdd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A new suite has been added"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1117,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1459,
								"name": "Events.suiteAdd"
							}
						},
						{
							"id": 4559,
							"name": "suiteEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite has fininshed running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1460,
								"name": "Events.suiteEnd"
							}
						},
						{
							"id": 4560,
							"name": "suiteStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A suite has started running"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1123,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1461,
								"name": "Events.suiteStart"
							}
						},
						{
							"id": 4561,
							"name": "testAdd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A new test has been added"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1126,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1462,
								"name": "Events.testAdd"
							}
						},
						{
							"id": 4562,
							"name": "testEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test has finished"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1129,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1463,
								"name": "Events.testEnd"
							}
						},
						{
							"id": 4563,
							"name": "testStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A test has started"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1132,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1464,
								"name": "Events.testStart"
							}
						},
						{
							"id": 4545,
							"name": "tunnelDownloadProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emitted as a Tunnel executable download is in process"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1129,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							}
						},
						{
							"id": 4546,
							"name": "tunnelStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A WebDriver tunnel has been opened"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1132,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							}
						},
						{
							"id": 4547,
							"name": "tunnelStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A status update from a WebDriver tunnel"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1135,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							}
						},
						{
							"id": 4548,
							"name": "tunnelStop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A WebDriver tunnel has been stopped"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1138,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 4538,
								"name": "TunnelMessage"
							}
						},
						{
							"id": 4564,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A non-fatal error occurred"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1135,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1465,
								"name": "Events.warning"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4549,
								4550,
								4551,
								4552,
								4553,
								4554,
								4555,
								4556,
								4557,
								4543,
								4544,
								4558,
								4559,
								4560,
								4561,
								4562,
								4563,
								4545,
								4546,
								4547,
								4548,
								4564
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1121,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1449,
							"name": "Events"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2789,
							"name": "RemoteEvents"
						}
					]
				},
				{
					"id": 4090,
					"name": "NodePlugins",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4092,
							"name": "reporter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Executor.ts",
									"line": 1145,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1484,
								"name": "ReporterInitializer"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1467,
								"name": "Plugins.reporter"
							}
						},
						{
							"id": 4091,
							"name": "tunnel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1106,
									"character": 8
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"name": "Tunnel"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4092,
								4091
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1105,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1466,
							"name": "Plugins"
						}
					]
				},
				{
					"id": 4582,
					"name": "QueueEntry",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4583,
							"name": "func",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1194,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4584,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 4585,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Node.ts",
											"line": 1194,
											"character": 7
										}
									]
								}
							}
						},
						{
							"id": 4589,
							"name": "reject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1196,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4590,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 4591,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Node.ts",
											"line": 1196,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 4586,
							"name": "resolve",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1195,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4587,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 4588,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/executors/Node.ts",
											"line": 1195,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4583,
								4589,
								4586
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1193,
							"character": 20
						}
					]
				},
				{
					"id": 4093,
					"name": "Remote",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4099,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						},
						{
							"id": 4100,
							"name": "StringResult",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 4117,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 4118,
									"name": "new Remote",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 4119,
											"name": "parentOrSession",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Session"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "P"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "typeParameter",
																"name": "StringResult",
																"constraint": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														],
														"name": "Command"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 4120,
											"name": "initialiser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A function that will be executed when all parent\ncommands have completed execution. This function can create a new\ncontext for this command by calling the passed `setContext` function any\ntime prior to resolving the Promise that it returns. If no context is\nexplicitly provided, the context from the parent command will be used.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 4121,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 4122,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 4123,
																			"name": "this",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					},
																					{
																						"type": "typeParameter",
																						"name": "P"
																					},
																					{
																						"type": "typeParameter",
																						"name": "StringResult",
																						"constraint": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							]
																						}
																					}
																				],
																				"name": "Command"
																			}
																		},
																		{
																			"id": 4124,
																			"name": "setContext",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "reference",
																				"name": "SetContextMethod"
																			}
																		},
																		{
																			"id": 4125,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "PromiseLike"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 4126,
											"name": "errback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A function that will be executed if any parent commands\nfailed to complete successfully. This function can create a new context\nfor the current command by calling the passed `setContext` function any\ntime prior to resolving the Promise that it returns. If no context is\nexplicitly provided, the context from the parent command will be used.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 4127,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 4128,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 4129,
																			"name": "this",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					},
																					{
																						"type": "typeParameter",
																						"name": "P"
																					},
																					{
																						"type": "typeParameter",
																						"name": "StringResult",
																						"constraint": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							]
																						}
																					}
																				],
																				"name": "Command"
																			}
																		},
																		{
																			"id": 4130,
																			"name": "setContext",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "reference",
																				"name": "SetContextMethod"
																			}
																		},
																		{
																			"id": 4131,
																			"name": "error",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "PromiseLike"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 4132,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A cancellation token.\n"
											},
											"type": {
												"type": "reference",
												"name": "CancelToken"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4093,
										"name": "Remote"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4117,
										"name": "Command.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 204,
									"character": 45
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4117,
								"name": "Command.__constructor"
							}
						},
						{
							"id": 4116,
							"name": "[Symbol.toStringTag]",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 204,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4116,
								"name": "Command.[Symbol.toStringTag]"
							}
						},
						{
							"id": 4094,
							"name": "environmentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1110,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 1749,
								"name": "Environment"
							}
						},
						{
							"id": 4095,
							"name": "requestedEnvironment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1111,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 1749,
								"name": "Environment"
							}
						},
						{
							"id": 4137,
							"name": "context",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The filtered elements that will be used if an element-specific method is\ninvoked. Note that this property is not valid until the parent Command\nhas been settled. The context array also has two additional properties:",
								"text": "* `isSingle` (boolean): If true, the context will always contain a\n  single element. This is used to differentiate between methods that\n  should still return scalar values (`find`) and methods that should\n  return arrays of values even if there is only one element in the\n  context (`findAll`).\n* `depth` (number): The depth of the context within the command chain.\n  This is used to prevent traversal into higher filtering levels by\n  [[Command.Command.end]].\n"
							},
							"getSignature": [
								{
									"id": 4138,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The filtered elements that will be used if an element-specific method is\ninvoked. Note that this property is not valid until the parent Command\nhas been settled. The context array also has two additional properties:",
										"text": "* `isSingle` (boolean): If true, the context will always contain a\n  single element. This is used to differentiate between methods that\n  should still return scalar values (`find`) and methods that should\n  return arrays of values even if there is only one element in the\n  context (`findAll`).\n* `depth` (number): The depth of the context within the command chain.\n  This is used to prevent traversal into higher filtering levels by\n  [[Command.Command.end]].\n"
									},
									"type": {
										"type": "reference",
										"name": "Context"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4137,
										"name": "Command.context"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 248,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4137,
								"name": "Command.context"
							}
						},
						{
							"id": 4133,
							"name": "parent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The parent Command of the Command, if one exists. This will be defined\nfor all commands but the top-level Session command (i.e., in most\ncontexts user code will call it)."
							},
							"getSignature": [
								{
									"id": 4134,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The parent Command of the Command, if one exists. This will be defined\nfor all commands but the top-level Session command (i.e., in most\ncontexts user code will call it)."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4133,
										"name": "Command.parent"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 229,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4133,
								"name": "Command.parent"
							}
						},
						{
							"id": 4139,
							"name": "promise",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The underlying Promise for the Command.",
								"tags": [
									{
										"tag": "readonly",
										"text": "\n"
									}
								]
							},
							"getSignature": [
								{
									"id": 4140,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The underlying Promise for the Command.",
										"tags": [
											{
												"tag": "readonly",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4139,
										"name": "Command.promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 254,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4139,
								"name": "Command.promise"
							}
						},
						{
							"id": 4135,
							"name": "session",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The parent Session of the Command."
							},
							"getSignature": [
								{
									"id": 4136,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The parent Session of the Command."
									},
									"type": {
										"type": "reference",
										"name": "Session"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4135,
										"name": "Command.session"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 233,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4135,
								"name": "Command.session"
							}
						},
						{
							"id": 4304,
							"name": "acceptAlert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4305,
									"name": "acceptAlert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Accepts an alert, prompt, or confirmation pop-up. Equivalent to clicking\nthe 'OK' button."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4304,
										"name": "Command.acceptAlert"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 640,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4304,
								"name": "Command.acceptAlert"
							}
						},
						{
							"id": 4231,
							"name": "activateIme",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4232,
									"name": "activateIme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Activates an input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
									},
									"parameters": [
										{
											"id": 4233,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of IME to activate.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4231,
										"name": "Command.activateIme"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 465,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4231,
								"name": "Command.activateIme"
							}
						},
						{
							"id": 4175,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4176,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancels all outstanding chained operations of the Command. Calling this\nmethod will cause this command, all subsequent chained commands, and all\nunresolved parent commands to fail with a CancelError."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4175,
										"name": "Command.cancel"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 318,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4175,
								"name": "Command.cancel"
							}
						},
						{
							"id": 4162,
							"name": "catch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4163,
									"name": "catch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds a callback to be invoked when any of the previously chained\noperations have failed."
									},
									"typeParameter": [
										{
											"id": 4164,
											"name": "R",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 4165,
											"name": "errback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4166,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4167,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 4168,
																	"name": "this",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "typeParameter",
																				"name": "P"
																			},
																			{
																				"type": "typeParameter",
																				"name": "StringResult",
																				"constraint": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					]
																				}
																			}
																		],
																		"name": "Command"
																	}
																},
																{
																	"id": 4169,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "R"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeParameter",
																				"name": "R"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Command.d.ts",
															"line": 307,
															"character": 29
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "R"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4162,
										"name": "Command.catch"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 307,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4162,
								"name": "Command.catch"
							}
						},
						{
							"id": 4280,
							"name": "clearCookies",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4281,
									"name": "clearCookies",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clears all cookies for the current page."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4280,
										"name": "Command.clearCookies"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 580,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4280,
								"name": "Command.clearCookies"
							}
						},
						{
							"id": 4410,
							"name": "clearValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4411,
									"name": "clearValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clears the value of a form element."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4410,
										"name": "Command.clearValue"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 905,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4410,
								"name": "Command.clearValue"
							}
						},
						{
							"id": 4399,
							"name": "click",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4400,
									"name": "click",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clicks the element. This method works on both mouse and touch platforms."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4399,
										"name": "Command.click"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 868,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4399,
								"name": "Command.click"
							}
						},
						{
							"id": 4316,
							"name": "clickMouseButton",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4317,
									"name": "clickMouseButton",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clicks a mouse button at the point where the mouse cursor is currently\npositioned. This method may fail to execute with an error if the mouse\nhas not been moved anywhere since the page was loaded."
									},
									"parameters": [
										{
											"id": 4318,
											"name": "button",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The button to click. 0 corresponds to the primary mouse\nbutton, 1 to the middle mouse button, 2 to the secondary mouse button.\nNumbers above 2 correspond to any additional buttons a mouse might\nprovide.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4316,
										"name": "Command.clickMouseButton"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 680,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4316,
								"name": "Command.clickMouseButton"
							}
						},
						{
							"id": 4242,
							"name": "closeCurrentWindow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4243,
									"name": "closeCurrentWindow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Closes the currently focused window. In most environments, after the\nwindow has been closed, it is necessary to explicitly switch to whatever\nwindow is now focused."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4242,
										"name": "Command.closeCurrentWindow"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 498,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4242,
								"name": "Command.closeCurrentWindow"
							}
						},
						{
							"id": 4229,
							"name": "deactivateIme",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4230,
									"name": "deactivateIme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Deactivates any active input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4229,
										"name": "Command.deactivateIme"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 458,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4229,
								"name": "Command.deactivateIme"
							}
						},
						{
							"id": 4282,
							"name": "deleteCookie",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4283,
									"name": "deleteCookie",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Deletes a cookie on the current page."
									},
									"parameters": [
										{
											"id": 4284,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the cookie to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4282,
										"name": "Command.deleteCookie"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 586,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4282,
								"name": "Command.deleteCookie"
							}
						},
						{
							"id": 4306,
							"name": "dismissAlert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4307,
									"name": "dismissAlert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Dismisses an alert, prompt, or confirmation pop-up. Equivalent to\nclicking the 'OK' button of an alert pop-up or the 'Cancel' button of a\nprompt or confirmation pop-up."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4306,
										"name": "Command.dismissAlert"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 646,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4306,
								"name": "Command.dismissAlert"
							}
						},
						{
							"id": 4325,
							"name": "doubleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4326,
									"name": "doubleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Double-clicks the primary mouse button."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4325,
										"name": "Command.doubleClick"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 698,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4325,
								"name": "Command.doubleClick"
							}
						},
						{
							"id": 4350,
							"name": "doubleTap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4351,
									"name": "doubleTap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs a double-tap gesture on an element.",
										"tags": [
											{
												"tag": "method",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 4352,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The element to double-tap.\n"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4350,
										"name": "Command.doubleTap"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 755,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4350,
								"name": "Command.doubleTap"
							}
						},
						{
							"id": 4144,
							"name": "end",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4145,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Ends the most recent filtering operation in the current Command chain\nand returns the set of matched elements to the previous state. This is\nequivalent to the `jQuery#end` method.",
										"text": "```js\ncommand\n    .findById('parent') // sets filter to #parent\n    .findByClassName('child') // sets filter to all .child inside #parent\n    .getVisibleText()\n    .then(function (visibleTexts) {\n        // all the visible texts from the children\n    })\n    .end() // resets filter to #parent\n    .end(); // resets filter to nothing (the whole document)\n ```\n"
									},
									"parameters": [
										{
											"id": 4146,
											"name": "numCommandsToPop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The number of element contexts to pop. Defaults\nto 1.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4144,
										"name": "Command.end"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 281,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4144,
								"name": "Command.end"
							}
						},
						{
							"id": 4427,
							"name": "equals",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4428,
									"name": "equals",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Determines if this element is equal to another element."
									},
									"parameters": [
										{
											"id": 4429,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4427,
										"name": "Command.equals"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 974,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4427,
								"name": "Command.equals"
							}
						},
						{
							"id": 4211,
							"name": "execute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4212,
									"name": "execute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Executes JavaScript code within the focused window/frame. The code\nshould return a value synchronously.",
										"text": "See [[Command.Command.executeAsync]] to execute code that returns values\nasynchronously.\n",
										"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
									},
									"typeParameter": [
										{
											"id": 4213,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 4214,
											"name": "script",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Function"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 4215,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus [[Element]]\nobjects, can be specified as arguments.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4211,
										"name": "Command.execute"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 402,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4211,
								"name": "Command.execute"
							}
						},
						{
							"id": 4216,
							"name": "executeAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4217,
									"name": "executeAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Executes JavaScript code within the focused window/frame. The code must\ninvoke the provided callback in order to signal that it has completed\nexecution.",
										"text": "See [[Command.Command.execute]] to execute code that returns values\nsynchronously.\n\nSee [[Command.Command.setExecuteAsyncTimeout]] to set the time until an\nasynchronous script is considered timed out.\n",
										"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
									},
									"typeParameter": [
										{
											"id": 4218,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 4219,
											"name": "script",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Function"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 4220,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus [[Element]]\nobjects, can be specified as arguments. In addition to these arguments,\na callback function will always be passed as the final argument to the\nfunction specified in `script`. This callback function must be invoked\nin order to signal that execution has completed. The return value of the\nexecution, if any, should be passed to this callback function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4216,
										"name": "Command.executeAsync"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 432,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4216,
								"name": "Command.executeAsync"
							}
						},
						{
							"id": 4170,
							"name": "finally",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4171,
									"name": "finally",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds a callback to be invoked once the previously chained operations\nhave resolved."
									},
									"parameters": [
										{
											"id": 4172,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4173,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4174,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Command.d.ts",
															"line": 312,
															"character": 21
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4170,
										"name": "Command.finally"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 312,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4170,
								"name": "Command.finally"
							}
						},
						{
							"id": 4177,
							"name": "find",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4178,
									"name": "find",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4179,
											"name": "strategy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 4180,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.find"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4177,
										"name": "Command.find"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 319,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.find"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4177,
								"name": "Command.find"
							}
						},
						{
							"id": 4181,
							"name": "findAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4182,
									"name": "findAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4183,
											"name": "strategy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 4184,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.findAll"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4181,
										"name": "Command.findAll"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 320,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.findAll"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4181,
								"name": "Command.findAll"
							}
						},
						{
							"id": 4469,
							"name": "findAllByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4470,
									"name": "findAllByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given CSS class name."
									},
									"parameters": [
										{
											"id": 4471,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2216,
										"name": "Locator.findAllByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 78,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2216,
								"name": "Locator.findAllByClassName"
							}
						},
						{
							"id": 4472,
							"name": "findAllByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4473,
									"name": "findAllByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given CSS selector."
									},
									"parameters": [
										{
											"id": 4474,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2219,
										"name": "Locator.findAllByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 84,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2219,
								"name": "Locator.findAllByCssSelector"
							}
						},
						{
							"id": 4478,
							"name": "findAllByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4479,
									"name": "findAllByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 4480,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2225,
										"name": "Locator.findAllByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 97,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2225,
								"name": "Locator.findAllByLinkText"
							}
						},
						{
							"id": 4475,
							"name": "findAllByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4476,
									"name": "findAllByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given name attribute."
									},
									"parameters": [
										{
											"id": 4477,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2222,
										"name": "Locator.findAllByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 90,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2222,
								"name": "Locator.findAllByName"
							}
						},
						{
							"id": 4481,
							"name": "findAllByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4482,
									"name": "findAllByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element partially matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 4483,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2228,
										"name": "Locator.findAllByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 104,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2228,
								"name": "Locator.findAllByPartialLinkText"
							}
						},
						{
							"id": 4484,
							"name": "findAllByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4485,
									"name": "findAllByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given HTML tag name."
									},
									"parameters": [
										{
											"id": 4486,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2231,
										"name": "Locator.findAllByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 110,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2231,
								"name": "Locator.findAllByTagName"
							}
						},
						{
							"id": 4487,
							"name": "findAllByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4488,
									"name": "findAllByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all elements inside this element matching the given XPath selector."
									},
									"parameters": [
										{
											"id": 4489,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2234,
										"name": "Locator.findAllByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 116,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2234,
								"name": "Locator.findAllByXpath"
							}
						},
						{
							"id": 4445,
							"name": "findByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4446,
									"name": "findByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given CSS class\nname."
									},
									"parameters": [
										{
											"id": 4447,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2192,
										"name": "Locator.findByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 24,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2192,
								"name": "Locator.findByClassName"
							}
						},
						{
							"id": 4448,
							"name": "findByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4449,
									"name": "findByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given CSS\nselector."
									},
									"parameters": [
										{
											"id": 4450,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2195,
										"name": "Locator.findByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 31,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2195,
								"name": "Locator.findByCssSelector"
							}
						},
						{
							"id": 4451,
							"name": "findById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4452,
									"name": "findById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given ID."
									},
									"parameters": [
										{
											"id": 4453,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The ID of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2198,
										"name": "Locator.findById"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 37,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2198,
								"name": "Locator.findById"
							}
						},
						{
							"id": 4457,
							"name": "findByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4458,
									"name": "findByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 4459,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2204,
										"name": "Locator.findByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 51,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2204,
								"name": "Locator.findByLinkText"
							}
						},
						{
							"id": 4454,
							"name": "findByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4455,
									"name": "findByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given name\nattribute."
									},
									"parameters": [
										{
											"id": 4456,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2201,
										"name": "Locator.findByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 44,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2201,
								"name": "Locator.findByName"
							}
						},
						{
							"id": 4460,
							"name": "findByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4461,
									"name": "findByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element partially matching the given\ncase-insensitive link text."
									},
									"parameters": [
										{
											"id": 4462,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2207,
										"name": "Locator.findByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 58,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2207,
								"name": "Locator.findByPartialLinkText"
							}
						},
						{
							"id": 4463,
							"name": "findByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4464,
									"name": "findByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given HTML tag\nname."
									},
									"parameters": [
										{
											"id": 4465,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2210,
										"name": "Locator.findByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 65,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2210,
								"name": "Locator.findByTagName"
							}
						},
						{
							"id": 4466,
							"name": "findByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4467,
									"name": "findByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first element inside this element matching the given XPath\nselector."
									},
									"parameters": [
										{
											"id": 4468,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2213,
										"name": "Locator.findByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 72,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2213,
								"name": "Locator.findByXpath"
							}
						},
						{
							"id": 4185,
							"name": "findDisplayed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4186,
									"name": "findDisplayed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4187,
											"name": "strategy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 4188,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.findDisplayed"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4185,
										"name": "Command.findDisplayed"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 321,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.findDisplayed"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4185,
								"name": "Command.findDisplayed"
							}
						},
						{
							"id": 4490,
							"name": "findDisplayedByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4491,
									"name": "findDisplayedByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS class name. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4492,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2237,
										"name": "Locator.findDisplayedByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 126,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2237,
								"name": "Locator.findDisplayedByClassName"
							}
						},
						{
							"id": 4493,
							"name": "findDisplayedByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4494,
									"name": "findDisplayedByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS selector. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4495,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2240,
										"name": "Locator.findDisplayedByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 136,
									"character": 30
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2240,
								"name": "Locator.findDisplayedByCssSelector"
							}
						},
						{
							"id": 4496,
							"name": "findDisplayedById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4497,
									"name": "findDisplayedById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given ID. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4498,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The ID of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2243,
										"name": "Locator.findDisplayedById"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 146,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2243,
								"name": "Locator.findDisplayedById"
							}
						},
						{
							"id": 4502,
							"name": "findDisplayedByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4503,
									"name": "findDisplayedByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4504,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2249,
										"name": "Locator.findDisplayedByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 166,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2249,
								"name": "Locator.findDisplayedByLinkText"
							}
						},
						{
							"id": 4499,
							"name": "findDisplayedByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4500,
									"name": "findDisplayedByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given name attribute. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4501,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2246,
										"name": "Locator.findDisplayedByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 156,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2246,
								"name": "Locator.findDisplayedByName"
							}
						},
						{
							"id": 4505,
							"name": "findDisplayedByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4506,
									"name": "findDisplayedByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement partially matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4507,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2252,
										"name": "Locator.findDisplayedByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 176,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2252,
								"name": "Locator.findDisplayedByPartialLinkText"
							}
						},
						{
							"id": 4508,
							"name": "findDisplayedByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4509,
									"name": "findDisplayedByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given HTML tag name. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4510,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2255,
										"name": "Locator.findDisplayedByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 186,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2255,
								"name": "Locator.findDisplayedByTagName"
							}
						},
						{
							"id": 4511,
							"name": "findDisplayedByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4512,
									"name": "findDisplayedByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given XPath selector. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
										"tags": [
											{
												"tag": "since",
												"text": "1.6"
											}
										]
									},
									"parameters": [
										{
											"id": 4513,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2258,
										"name": "Locator.findDisplayedByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 196,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2258,
								"name": "Locator.findDisplayedByXpath"
							}
						},
						{
							"id": 4356,
							"name": "flickFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4357,
									"name": "flickFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Flicks a finger. Note that this method is currently badly specified and\nhighly dysfunctional and is only provided for the sake of completeness."
									},
									"parameters": [
										{
											"id": 4358,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element where the flick should start."
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 4359,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The x-offset in pixels to flick by."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4360,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The x-offset in pixels to flick by."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4361,
											"name": "speed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The speed of the flick, in pixels per *second*. Most human\nflicks are 100–200ms, so this value will be higher than expected.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4356,
										"name": "Command.flickFinger"
									}
								},
								{
									"id": 4362,
									"name": "flickFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4363,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4364,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4365,
											"name": "speed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4356,
										"name": "Command.flickFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 773,
									"character": 15
								},
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 774,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4356,
								"name": "Command.flickFinger"
							}
						},
						{
							"id": 4202,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4203,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigates the focused window/frame to a new URL."
									},
									"parameters": [
										{
											"id": 4204,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4202,
										"name": "Command.get"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 366,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4202,
								"name": "Command.get"
							}
						},
						{
							"id": 4289,
							"name": "getActiveElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4290,
									"name": "getActiveElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the currently focused element from the focused window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4289,
										"name": "Command.getActiveElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 601,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4289,
								"name": "Command.getActiveElement"
							}
						},
						{
							"id": 4225,
							"name": "getActiveImeEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4226,
									"name": "getActiveImeEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the currently active input method editor for the remote environment.\nAs of April 2014, no known remote environments support IME functions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4225,
										"name": "Command.getActiveImeEngine"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 447,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4225,
								"name": "Command.getActiveImeEngine"
							}
						},
						{
							"id": 4299,
							"name": "getAlertText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4300,
									"name": "getAlertText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the text displayed in the currently active alert pop-up."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4299,
										"name": "Command.getAlertText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 629,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4299,
								"name": "Command.getAlertText"
							}
						},
						{
							"id": 4198,
							"name": "getAllWindowHandles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4199,
									"name": "getAllWindowHandles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a list of identifiers for all currently open windows."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4198,
										"name": "Command.getAllWindowHandles"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 358,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4198,
								"name": "Command.getAllWindowHandles"
							}
						},
						{
							"id": 4376,
							"name": "getApplicationCacheStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4377,
									"name": "getApplicationCacheStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current state of the HTML5 application cache for the current\npage.",
										"returns": "The cache status. One of 0 (uncached), 1 (cached/idle), 2\n(checking), 3 (downloading), 4 (update ready), 5 (obsolete).\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4376,
										"name": "Command.getApplicationCacheStatus"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 818,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4376,
								"name": "Command.getApplicationCacheStatus"
							}
						},
						{
							"id": 4419,
							"name": "getAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4420,
									"name": "getAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets an attribute of the element.",
										"text": "See [[Element.Element.getProperty]] to retrieve an element property.\n",
										"returns": "The value of the attribute, or `null` if no such attribute\nexists.\n"
									},
									"typeParameter": [
										{
											"id": 4421,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 4422,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the attribute."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "S"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4419,
										"name": "Command.getAttribute"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 961,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4419,
								"name": "Command.getAttribute"
							}
						},
						{
							"id": 4223,
							"name": "getAvailableImeEngines",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4224,
									"name": "getAvailableImeEngines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a list of input method editor engines available to the remote\nenvironment. As of April 2014, no known remote environments support IME\nfunctions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4223,
										"name": "Command.getAvailableImeEngines"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 442,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4223,
								"name": "Command.getAvailableImeEngines"
							}
						},
						{
							"id": 4374,
							"name": "getAvailableLogTypes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4375,
									"name": "getAvailableLogTypes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the types of logs that are currently available for retrieval from\nthe remote environment."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4374,
										"name": "Command.getAvailableLogTypes"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 810,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4374,
								"name": "Command.getAvailableLogTypes"
							}
						},
						{
							"id": 4442,
							"name": "getComputedStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4443,
									"name": "getComputedStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a CSS computed property value for the element."
									},
									"parameters": [
										{
											"id": 4444,
											"name": "propertyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS property to retrieve. This argument must be\nhyphenated, *not* camel-case.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4442,
										"name": "Command.getComputedStyle"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 1011,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4442,
								"name": "Command.getComputedStyle"
							}
						},
						{
							"id": 4275,
							"name": "getCookies",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4276,
									"name": "getCookies",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all cookies set on the current page."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "WebDriverCookie"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4275,
										"name": "Command.getCookies"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 572,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4275,
								"name": "Command.getCookies"
							}
						},
						{
							"id": 4200,
							"name": "getCurrentUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4201,
									"name": "getCurrentUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the URL that is loaded in the focused window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4200,
										"name": "Command.getCurrentUrl"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 362,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4200,
								"name": "Command.getCurrentUrl"
							}
						},
						{
							"id": 4196,
							"name": "getCurrentWindowHandle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4197,
									"name": "getCurrentWindowHandle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the identifier for the window that is currently focused.",
										"returns": "A window handle identifier that can be used with other window\nhandling functions.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4196,
										"name": "Command.getCurrentWindowHandle"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 354,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4196,
								"name": "Command.getCurrentWindowHandle"
							}
						},
						{
							"id": 4384,
							"name": "getExecuteAsyncTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4385,
									"name": "getExecuteAsyncTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the timeout for [[Command.Command.executeAsync]] calls."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4384,
										"name": "Command.getExecuteAsyncTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 838,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4384,
								"name": "Command.getExecuteAsyncTimeout"
							}
						},
						{
							"id": 4389,
							"name": "getFindTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4390,
									"name": "getFindTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the timeout for [[Command.Command.find]] calls."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4389,
										"name": "Command.getFindTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 848,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4389,
								"name": "Command.getFindTimeout"
							}
						},
						{
							"id": 4366,
							"name": "getGeolocation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4367,
									"name": "getGeolocation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current geographical location of the remote environment.",
										"returns": "a [[interfaces.Geolocation]] value with latitude and longitude\nspecified using standard WGS84 decimal latitude/longitude. Altitude is\nspecified as meters above the WGS84 ellipsoid. Not all environments\nsupport altitude.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Geolocation"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4366,
										"name": "Command.getGeolocation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 783,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4366,
								"name": "Command.getGeolocation"
							}
						},
						{
							"id": 4371,
							"name": "getLogsFor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4372,
									"name": "getLogsFor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets all logs from the remote environment of the given type. The logs in\nthe remote environment are cleared once they have been retrieved.",
										"returns": "An array of log entry objects. Timestamps in log entries are\nUnix timestamps, in seconds.\n"
									},
									"parameters": [
										{
											"id": 4373,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of log entries to retrieve. Available log types\ndiffer between remote environments. Use\n[[Command.Command.getAvailableLogTypes]] to learn what log types are\ncurrently available. Not all environments support all possible log\ntypes.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "LogEntry"
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4371,
										"name": "Command.getLogsFor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 805,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4371,
								"name": "Command.getLogsFor"
							}
						},
						{
							"id": 4294,
							"name": "getOrientation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4295,
									"name": "getOrientation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current screen orientation."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "portrait"
													},
													{
														"type": "stringLiteral",
														"value": "landscape"
													}
												]
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4294,
										"name": "Command.getOrientation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 619,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4294,
								"name": "Command.getOrientation"
							}
						},
						{
							"id": 4394,
							"name": "getPageLoadTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4395,
									"name": "getPageLoadTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the timeout for [[Command.Command.get]] calls."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4394,
										"name": "Command.getPageLoadTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 858,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4394,
								"name": "Command.getPageLoadTimeout"
							}
						},
						{
							"id": 4285,
							"name": "getPageSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4286,
									"name": "getPageSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the HTML loaded in the focused window/frame. This markup is\nserialised by the remote environment so may not exactly match the HTML\nprovided by the Web server."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4285,
										"name": "Command.getPageSource"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 592,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4285,
								"name": "Command.getPageSource"
							}
						},
						{
							"id": 4287,
							"name": "getPageTitle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4288,
									"name": "getPageTitle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the title of the top-level browsing context of the current window\nor tab."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4287,
										"name": "Command.getPageTitle"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 597,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4287,
								"name": "Command.getPageTitle"
							}
						},
						{
							"id": 4432,
							"name": "getPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4433,
									"name": "getPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the position of the element relative to the top-left corner of the\ndocument, taking into account scrolling and CSS transformations (if they\nare supported)."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4434,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 4435,
															"name": "x",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 994,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 4436,
															"name": "y",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 995,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4435,
																4436
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Command.d.ts",
															"line": 993,
															"character": 27
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4432,
										"name": "Command.getPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 993,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4432,
								"name": "Command.getPosition"
							}
						},
						{
							"id": 4423,
							"name": "getProperty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4424,
									"name": "getProperty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a property of the element.",
										"text": "See [[Element.Element.getAttribute]] to retrieve an element attribute.\n",
										"returns": "The value of the property.\n"
									},
									"typeParameter": [
										{
											"id": 4425,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 4426,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the property."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4423,
										"name": "Command.getProperty"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 970,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4423,
								"name": "Command.getProperty"
							}
						},
						{
							"id": 4437,
							"name": "getSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4438,
									"name": "getSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the size of the element, taking into account CSS transformations\n(if they are supported)."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4439,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 4441,
															"name": "height",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 1003,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 4440,
															"name": "width",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 1002,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4441,
																4440
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Command.d.ts",
															"line": 1001,
															"character": 23
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4437,
										"name": "Command.getSize"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 1001,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4437,
								"name": "Command.getSize"
							}
						},
						{
							"id": 4416,
							"name": "getSpecAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4417,
									"name": "getSpecAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a property or attribute of the element according to the WebDriver\nspecification algorithm. Use of this method is not recommended; instead,\nuse [[Command.Command.getAttribute]] to retrieve DOM attributes and\n[[Command.Command.getProperty]] to retrieve DOM properties.",
										"text": "This method uses the following algorithm on the server to determine what\nvalue to return:\n\n1. If `name` is 'style', returns the `style.cssText` property of the\n   element.\n2. If the attribute exists and is a boolean attribute, returns 'true' if\n   the attribute is true, or null otherwise.\n3. If the element is an `<option>` element and `name` is 'value',\n   returns the `value` attribute if it exists, otherwise returns the\n   visible text content of the option.\n4. If the element is a checkbox or radio button and `name` is\n   'selected', returns 'true' if the element is checked, or null\n   otherwise.\n5. If the returned value is expected to be a URL (e.g. element is `<a>`\n   and attribute is `href`), returns the fully resolved URL from the\n   `href`/`src` property of the element, not the attribute.\n6. If `name` is 'class', returns the `className` property of the\n   element.\n7. If `name` is 'readonly', returns 'true' if the `readOnly` property is\n   true, or null otherwise.\n8. If `name` corresponds to a property of the element, and the property\n   is not an Object, return the property value coerced to a string.\n9. If `name` corresponds to an attribute of the element, return the\n   attribute value.\n",
										"returns": "The value of the attribute as a string, or `null` if no such\nproperty or attribute exists.\n"
									},
									"parameters": [
										{
											"id": 4418,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The property or attribute name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4416,
										"name": "Command.getSpecAttribute"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 951,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4416,
								"name": "Command.getSpecAttribute"
							}
						},
						{
							"id": 4408,
							"name": "getTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4409,
									"name": "getTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the tag name of the element. For HTML documents, the value is\nalways lowercase."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4408,
										"name": "Command.getTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 901,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4408,
								"name": "Command.getTagName"
							}
						},
						{
							"id": 4189,
							"name": "getTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4190,
									"name": "getTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the current value of a timeout for the session.",
										"returns": "The timeout, in milliseconds.\n"
									},
									"parameters": [
										{
											"id": 4191,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of timeout to retrieve. One of 'script',\n'implicit', or 'page load'."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4189,
										"name": "Command.getTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 337,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4189,
								"name": "Command.getTimeout"
							}
						},
						{
							"id": 4403,
							"name": "getVisibleText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4404,
									"name": "getVisibleText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the visible text within the element. `<br>` elements are converted\nto line breaks in the returned text, and whitespace is normalised per\nthe usual XML/HTML whitespace normalisation rules."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4403,
										"name": "Command.getVisibleText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 879,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4403,
								"name": "Command.getVisibleText"
							}
						},
						{
							"id": 4266,
							"name": "getWindowPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4267,
									"name": "getWindowPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the position of a window.",
										"text": "Note that this method is not part of the W3C WebDriver standard.\n",
										"returns": "An object describing the position of the window, in CSS pixels,\nrelative to the top-left corner of the primary monitor. If a secondary\nmonitor exists above or to the left of the primary monitor, these values\nwill be negative.\n"
									},
									"parameters": [
										{
											"id": 4268,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The name of the window to query. See\n[[Command.Command.switchToWindow]] to learn about valid window names.\nOmit this argument to query the currently focused window.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4269,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 4270,
															"name": "x",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 558,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 4271,
															"name": "y",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 559,
																	"character": 9
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4270,
																4271
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Command.d.ts",
															"line": 557,
															"character": 54
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4266,
										"name": "Command.getWindowPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 557,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4266,
								"name": "Command.getWindowPosition"
							}
						},
						{
							"id": 4252,
							"name": "getWindowSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4253,
									"name": "getWindowSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the dimensions of a window.",
										"returns": "An object describing the width and height of the window, in CSS\npixels.\n"
									},
									"parameters": [
										{
											"id": 4254,
											"name": "_windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4255,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 4257,
															"name": "height",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 524,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 4256,
															"name": "width",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 523,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4257,
																4256
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/leadfoot/dist/Command.d.ts",
															"line": 522,
															"character": 51
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4252,
										"name": "Command.getWindowSize"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 522,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4252,
								"name": "Command.getWindowSize"
							}
						},
						{
							"id": 4207,
							"name": "goBack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4208,
									"name": "goBack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigates the focused window/frame back one page using the browser’s\nnavigation history."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4207,
										"name": "Command.goBack"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 376,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4207,
								"name": "Command.goBack"
							}
						},
						{
							"id": 4205,
							"name": "goForward",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4206,
									"name": "goForward",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigates the focused window/frame forward one page using the browser’s\nnavigation history."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4205,
										"name": "Command.goForward"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 371,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4205,
								"name": "Command.goForward"
							}
						},
						{
							"id": 4430,
							"name": "isDisplayed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4431,
									"name": "isDisplayed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns whether or not the element would be visible to an actual user.\nThis means that the following types of elements are considered to be not\ndisplayed:",
										"text": "1. Elements with `display: none`\n2. Elements with `visibility: hidden`\n3. Elements positioned outside of the viewport that cannot be scrolled\n   into view\n4. Elements with `opacity: 0`\n5. Elements with no `offsetWidth` or `offsetHeight`\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4430,
										"name": "Command.isDisplayed"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 987,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4430,
								"name": "Command.isDisplayed"
							}
						},
						{
							"id": 4414,
							"name": "isEnabled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4415,
									"name": "isEnabled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns whether or not a form element can be interacted with."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4414,
										"name": "Command.isEnabled"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 915,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4414,
								"name": "Command.isEnabled"
							}
						},
						{
							"id": 4227,
							"name": "isImeActivated",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4228,
									"name": "isImeActivated",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns whether or not an input method editor is currently active in the\nremote environment. As of April 2014, no known remote environments\nsupport IME functions."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4227,
										"name": "Command.isImeActivated"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 453,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4227,
								"name": "Command.isImeActivated"
							}
						},
						{
							"id": 4412,
							"name": "isSelected",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4413,
									"name": "isSelected",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns whether or not a form element is currently selected (for\ndrop-down options and radio buttons), or whether or not the element is\ncurrently checked (for checkboxes)."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4412,
										"name": "Command.isSelected"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 911,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4412,
								"name": "Command.isSelected"
							}
						},
						{
							"id": 4353,
							"name": "longTap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4354,
									"name": "longTap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs a long-tap gesture on an element.",
										"tags": [
											{
												"tag": "method",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 4355,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The element to long-tap.\n"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4353,
										"name": "Command.longTap"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 762,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4353,
								"name": "Command.longTap"
							}
						},
						{
							"id": 4272,
							"name": "maximizeWindow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4273,
									"name": "maximizeWindow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximises a window according to the platform’s window system behaviour."
									},
									"parameters": [
										{
											"id": 4274,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The name of the window to resize. See\n[[Command.Command.switchToWindow] to learn about valid window names.\nOmit this argument to resize the currently focused window.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4272,
										"name": "Command.maximizeWindow"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 568,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4272,
								"name": "Command.maximizeWindow"
							}
						},
						{
							"id": 4338,
							"name": "moveFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4339,
									"name": "moveFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Moves the last depressed finger to a new point on the touch screen."
									},
									"parameters": [
										{
											"id": 4340,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate to move to, maybe in device pixels."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4341,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate to move to, maybe in device pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4338,
										"name": "Command.moveFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 731,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4338,
								"name": "Command.moveFinger"
							}
						},
						{
							"id": 4308,
							"name": "moveMouseTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4309,
									"name": "moveMouseTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Moves the remote environment’s mouse cursor to the specified element or\nrelative position. If the element is outside of the viewport, the remote\ndriver will attempt to scroll it into view automatically."
									},
									"parameters": [
										{
											"id": 4310,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The element to move the mouse to. If x-offset and\ny-offset are not specified, the mouse will be moved to the centre of the\nelement.\n"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 4311,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The x-offset of the cursor, maybe in CSS pixels, relative\nto the left edge of the specified element’s bounding client rectangle.\nIf no element is specified, the offset is relative to the previous\nposition of the mouse, or to the left edge of the page’s root element if\nthe mouse was never moved before.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 4312,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The y-offset of the cursor, maybe in CSS pixels, relative\nto the top edge of the specified element’s bounding client rectangle. If\nno element is specified, the offset is relative to the previous position\nof the mouse, or to the top edge of the page’s root element if the mouse\nwas never moved before.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4308,
										"name": "Command.moveMouseTo"
									}
								},
								{
									"id": 4313,
									"name": "moveMouseTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4314,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 4315,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4308,
										"name": "Command.moveMouseTo"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 668,
									"character": 15
								},
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 669,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4308,
								"name": "Command.moveMouseTo"
							}
						},
						{
							"id": 4330,
							"name": "pressFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4331,
									"name": "pressFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Depresses a new finger at the given point on a touch screen device\nwithout releasing it."
									},
									"parameters": [
										{
											"id": 4332,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate to press, maybe in device pixels."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4333,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate to press, maybe in device pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4330,
										"name": "Command.pressFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 714,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4330,
								"name": "Command.pressFinger"
							}
						},
						{
							"id": 4291,
							"name": "pressKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4292,
									"name": "pressKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Types into the focused window/frame/element."
									},
									"parameters": [
										{
											"id": 4293,
											"name": "keys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The text to type in the remote environment. It is possible\nto type keys that do not have normal character representations (modifier\nkeys, function keys, etc.) as well as keys that have two different\nrepresentations on a typical US-ASCII keyboard (numpad keys); use the\nvalues from [[keys]] to type these special characters. Any modifier keys\nthat are activated by this call will persist until they are deactivated.\nTo deactivate a modifier key, type the same modifier key a second time,\nor send `\\uE000` ('NULL') to deactivate all currently active modifier\nkeys.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4291,
										"name": "Command.pressKeys"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 615,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4291,
								"name": "Command.pressKeys"
							}
						},
						{
							"id": 4319,
							"name": "pressMouseButton",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4320,
									"name": "pressMouseButton",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Depresses a mouse button without releasing it."
									},
									"parameters": [
										{
											"id": 4321,
											"name": "button",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The button to press. See [[Command.Command.click]] for\navailable options.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4319,
										"name": "Command.pressMouseButton"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 687,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4319,
								"name": "Command.pressMouseButton"
							}
						},
						{
							"id": 4378,
							"name": "quit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4379,
									"name": "quit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Terminates the session. No more commands will be accepted by the remote\nafter this point."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4378,
										"name": "Command.quit"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 823,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4378,
								"name": "Command.quit"
							}
						},
						{
							"id": 4209,
							"name": "refresh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4210,
									"name": "refresh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Reloads the current browser window/frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4209,
										"name": "Command.refresh"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 380,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4209,
								"name": "Command.refresh"
							}
						},
						{
							"id": 4334,
							"name": "releaseFinger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4335,
									"name": "releaseFinger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Releases whatever finger exists at the given point on a touch screen\ndevice."
									},
									"parameters": [
										{
											"id": 4336,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate where a finger is pressed, maybe in\ndevice pixels."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4337,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate where a finger is pressed, maybe in\ndevice pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4334,
										"name": "Command.releaseFinger"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 724,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4334,
								"name": "Command.releaseFinger"
							}
						},
						{
							"id": 4322,
							"name": "releaseMouseButton",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4323,
									"name": "releaseMouseButton",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Releases a previously depressed mouse button."
									},
									"parameters": [
										{
											"id": 4324,
											"name": "button",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The button to press. See [[Command.Command.click]] for\navailable options.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4322,
										"name": "Command.releaseMouseButton"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 694,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4322,
								"name": "Command.releaseMouseButton"
							}
						},
						{
							"id": 4277,
							"name": "setCookie",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4278,
									"name": "setCookie",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets a cookie on the current page."
									},
									"parameters": [
										{
											"id": 4279,
											"name": "cookie",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "WebDriverCookie"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4277,
										"name": "Command.setCookie"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 576,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4277,
								"name": "Command.setCookie"
							}
						},
						{
							"id": 4386,
							"name": "setExecuteAsyncTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4387,
									"name": "setExecuteAsyncTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the timeout for [[Command.Command.executeAsync]] calls."
									},
									"parameters": [
										{
											"id": 4388,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of the timeout, in milliseconds.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4386,
										"name": "Command.setExecuteAsyncTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 844,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4386,
								"name": "Command.setExecuteAsyncTimeout"
							}
						},
						{
							"id": 4391,
							"name": "setFindTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4392,
									"name": "setFindTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the timeout for [[Command.Command.find]] calls."
									},
									"parameters": [
										{
											"id": 4393,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of the timeout, in milliseconds.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4391,
										"name": "Command.setFindTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 854,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4391,
								"name": "Command.setFindTimeout"
							}
						},
						{
							"id": 4368,
							"name": "setGeolocation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4369,
									"name": "setGeolocation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the geographical location of the remote environment."
									},
									"parameters": [
										{
											"id": 4370,
											"name": "location",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Latitude and longitude are specified using standard\nWGS84 decimal latitude/longitude. Altitude is specified as meters above\nthe WGS84 ellipsoid. Not all environments support altitude.\n"
											},
											"type": {
												"type": "reference",
												"name": "Geolocation"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4368,
										"name": "Command.setGeolocation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 791,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4368,
								"name": "Command.setGeolocation"
							}
						},
						{
							"id": 4096,
							"name": "setHeartbeatInterval",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4097,
									"name": "setHeartbeatInterval",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4098,
											"name": "delay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Command"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1112,
									"character": 22
								}
							]
						},
						{
							"id": 4296,
							"name": "setOrientation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4297,
									"name": "setOrientation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the screen orientation."
									},
									"parameters": [
										{
											"id": 4298,
											"name": "orientation",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Either 'portrait' or 'landscape'.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "portrait"
													},
													{
														"type": "stringLiteral",
														"value": "landscape"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4296,
										"name": "Command.setOrientation"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 625,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4296,
								"name": "Command.setOrientation"
							}
						},
						{
							"id": 4396,
							"name": "setPageLoadTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4397,
									"name": "setPageLoadTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the timeout for [[Command.Command.get]] calls."
									},
									"parameters": [
										{
											"id": 4398,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of the timeout, in milliseconds.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4396,
										"name": "Command.setPageLoadTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 864,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4396,
								"name": "Command.setPageLoadTimeout"
							}
						},
						{
							"id": 4192,
							"name": "setTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4193,
									"name": "setTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the value of a timeout for the session."
									},
									"parameters": [
										{
											"id": 4194,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of timeout to set. One of 'script', 'implicit', or\n'page load'.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4195,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The length of time to use for the timeout, in milliseconds. A\nvalue of 0 will cause operations to time out immediately.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4192,
										"name": "Command.setTimeout"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 347,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4192,
								"name": "Command.setTimeout"
							}
						},
						{
							"id": 4258,
							"name": "setWindowPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4259,
									"name": "setWindowPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the position of a window.",
										"text": "Note that this method is not part of the W3C WebDriver standard.\n"
									},
									"parameters": [
										{
											"id": 4260,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen x-coordinate to move to, in CSS pixels, relative to\nthe left edge of the primary monitor.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4261,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The screen y-coordinate to move to, in CSS pixels, relative to\nthe top edge of the primary monitor.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4258,
										"name": "Command.setWindowPosition"
									}
								},
								{
									"id": 4262,
									"name": "setWindowPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4263,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4264,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4265,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4258,
										"name": "Command.setWindowPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 541,
									"character": 21
								},
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 542,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4258,
								"name": "Command.setWindowPosition"
							}
						},
						{
							"id": 4244,
							"name": "setWindowSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4245,
									"name": "setWindowSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the dimensions of a window."
									},
									"parameters": [
										{
											"id": 4246,
											"name": "width",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The new width of the window, in CSS pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4247,
											"name": "height",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The new height of the window, in CSS pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4244,
										"name": "Command.setWindowSize"
									}
								},
								{
									"id": 4248,
									"name": "setWindowSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4249,
											"name": "windowHandle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4250,
											"name": "width",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4251,
											"name": "height",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4244,
										"name": "Command.setWindowSize"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 510,
									"character": 17
								},
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 511,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4244,
								"name": "Command.setWindowSize"
							}
						},
						{
							"id": 4141,
							"name": "sleep",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4142,
									"name": "sleep",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Pauses execution of the next command in the chain for `ms` milliseconds."
									},
									"parameters": [
										{
											"id": 4143,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Time to delay, in milliseconds.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4141,
										"name": "Command.sleep"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 260,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4141,
								"name": "Command.sleep"
							}
						},
						{
							"id": 4401,
							"name": "submit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4402,
									"name": "submit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Submits the element, if it is a form, or the form belonging to the\nelement, if it is a form element."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4401,
										"name": "Command.submit"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 873,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4401,
								"name": "Command.submit"
							}
						},
						{
							"id": 4234,
							"name": "switchToFrame",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4235,
									"name": "switchToFrame",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Switches the currently focused frame to a new frame."
									},
									"parameters": [
										{
											"id": 4236,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The frame to switch to. In most environments, a number or\nstring value corresponds to a key in the `window.frames` object of the\ncurrently active frame. If `null`, the topmost (default) frame will be\nused. If an Element is provided, it must correspond to a `<frame>` or\n`<iframe>` element.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "Element"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4234,
										"name": "Command.switchToFrame"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 475,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4234,
								"name": "Command.switchToFrame"
							}
						},
						{
							"id": 4240,
							"name": "switchToParentFrame",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4241,
									"name": "switchToParentFrame",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Switches the currently focused frame to the parent of the currently\nfocused frame."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4240,
										"name": "Command.switchToParentFrame"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 492,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4240,
								"name": "Command.switchToParentFrame"
							}
						},
						{
							"id": 4237,
							"name": "switchToWindow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4238,
									"name": "switchToWindow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Switches the currently focused window to a new window.",
										"text": "In environments using the JsonWireProtocol, this value corresponds to\nthe `window.name` property of a window.\n"
									},
									"parameters": [
										{
											"id": 4239,
											"name": "handle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The handle of the window to switch to. In mobile\nenvironments and environments based on the W3C WebDriver standard, this\nshould be a handle as returned by\n[[Command.Command.getAllWindowHandles]].\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4237,
										"name": "Command.switchToWindow"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 487,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4237,
								"name": "Command.switchToWindow"
							}
						},
						{
							"id": 4221,
							"name": "takeScreenshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4222,
									"name": "takeScreenshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a screenshot of the focused window and returns it in PNG format."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4221,
										"name": "Command.takeScreenshot"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 436,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4221,
								"name": "Command.takeScreenshot"
							}
						},
						{
							"id": 4327,
							"name": "tap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4328,
									"name": "tap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Taps an element on a touch screen device. If the element is outside of\nthe viewport, the remote driver will attempt to scroll it into view\nautomatically."
									},
									"parameters": [
										{
											"id": 4329,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element to tap.\n"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4327,
										"name": "Command.tap"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 706,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4327,
								"name": "Command.tap"
							}
						},
						{
							"id": 4147,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4148,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds a callback to be invoked once the previously chained operation has\ncompleted.",
										"text": "This method is compatible with the `Promise#then` API, with two\nimportant differences:\n\n1. The context (`this`) of the callback is set to the Command object,\n   rather than being `undefined`. This allows promise helpers to be\n   created that can retrieve the appropriate session and element\n   contexts for execution.\n2. A second non-standard `setContext` argument is passed to the\n   callback. This `setContext` function can be called at any time before\n   the callback fulfills its return value and expects either a single\n   [[Element]] or an array of Elements to be provided as its only\n   argument. The provided element(s) will be used as the context for\n   subsequent element method invocations (`click`, etc.). If the\n   `setContext` method is not called, the element context from the\n   parent will be passed through unmodified.\n"
									},
									"typeParameter": [
										{
											"id": 4149,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 4150,
											"name": "R",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 4151,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4152,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 4153,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 4154,
																			"name": "this",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					},
																					{
																						"type": "typeParameter",
																						"name": "P"
																					},
																					{
																						"type": "typeParameter",
																						"name": "StringResult",
																						"constraint": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							]
																						}
																					}
																				],
																				"name": "Command"
																			}
																		},
																		{
																			"id": 4155,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 4156,
																			"name": "setContext",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "reference",
																				"name": "SetContextMethod"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "typeParameter",
																				"name": "U"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "U"
																					}
																				],
																				"name": "PromiseLike"
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 302,
																	"character": 37
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 4157,
											"name": "errback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4158,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 4159,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 4160,
																			"name": "this",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					},
																					{
																						"type": "typeParameter",
																						"name": "P"
																					},
																					{
																						"type": "typeParameter",
																						"name": "StringResult",
																						"constraint": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							]
																						}
																					}
																				],
																				"name": "Command"
																			}
																		},
																		{
																			"id": 4161,
																			"name": "error",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "typeParameter",
																				"name": "R"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "R"
																					}
																				],
																				"name": "PromiseLike"
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "packages/leadfoot/dist/Command.d.ts",
																	"line": 302,
																	"character": 167
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "U"
													},
													{
														"type": "typeParameter",
														"name": "R"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4147,
										"name": "Command.then"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 302,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4147,
								"name": "Command.then"
							}
						},
						{
							"id": 4342,
							"name": "touchScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4343,
									"name": "touchScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Scrolls the currently focused window on a touch screen device."
									},
									"parameters": [
										{
											"id": 4344,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "An optional x-offset, relative to the left edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4345,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "An optional y-offset, relative to the top edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4342,
										"name": "Command.touchScroll"
									}
								},
								{
									"id": 4346,
									"name": "touchScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 4347,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 4348,
											"name": "xOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 4349,
											"name": "yOffset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4342,
										"name": "Command.touchScroll"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 747,
									"character": 15
								},
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 748,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4342,
								"name": "Command.touchScroll"
							}
						},
						{
							"id": 4405,
							"name": "type",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4406,
									"name": "type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Types into the element. This method works the same as the\n[[Command.Command.pressKeys]] method except that any modifier keys are\nautomatically released at the end of the command. This method should be\nused instead of [[Command.Command.pressKeys]] to type filenames into\nfile upload fields.",
										"text": "Since 1.5, if the WebDriver server supports remote file uploads, and you\ntype a path to a file on your local computer, that file will be\ntransparently uploaded to the remote server and the remote filename will\nbe typed instead. If you do not want to upload local files, use\n[[Command.Command.pressKeys]] instead.\n"
									},
									"parameters": [
										{
											"id": 4407,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The text to type in the remote environment. See\n[[Command.Command.pressKeys]] for more information.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4405,
										"name": "Command.type"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 896,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4405,
								"name": "Command.type"
							}
						},
						{
							"id": 4301,
							"name": "typeInPrompt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4302,
									"name": "typeInPrompt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Types into the currently active prompt pop-up."
									},
									"parameters": [
										{
											"id": 4303,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The text to type into the pop-up’s input box.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4301,
										"name": "Command.typeInPrompt"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 635,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4301,
								"name": "Command.typeInPrompt"
							}
						},
						{
							"id": 4380,
							"name": "waitForDeleted",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4381,
									"name": "waitForDeleted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements findable in the currently active window/frame\nusing the given strategy and value to be destroyed."
									},
									"parameters": [
										{
											"id": 4382,
											"name": "using",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The element retrieval strategy to use. See\n[[Command.Command.find]] for options.\n"
											},
											"type": {
												"type": "reference",
												"name": "Strategy"
											}
										},
										{
											"id": 4383,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The strategy-specific value to search for. See\n[[Command.Command.find]] for details.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"overwrites": {
										"type": "reference",
										"name": "Locator.waitForDeleted"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4380,
										"name": "Command.waitForDeleted"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 834,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Locator.waitForDeleted"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4380,
								"name": "Command.waitForDeleted"
							}
						},
						{
							"id": 4514,
							"name": "waitForDeletedByClassName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4515,
									"name": "waitForDeletedByClassName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given CSS class\nname to be destroyed."
									},
									"parameters": [
										{
											"id": 4516,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS class name to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2261,
										"name": "Locator.waitForDeletedByClassName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 203,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2261,
								"name": "Locator.waitForDeletedByClassName"
							}
						},
						{
							"id": 4517,
							"name": "waitForDeletedByCssSelector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4518,
									"name": "waitForDeletedByCssSelector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given CSS\nselector to be destroyed."
									},
									"parameters": [
										{
											"id": 4519,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The CSS selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2264,
										"name": "Locator.waitForDeletedByCssSelector"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 210,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2264,
								"name": "Locator.waitForDeletedByCssSelector"
							}
						},
						{
							"id": 4520,
							"name": "waitForDeletedById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4521,
									"name": "waitForDeletedById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given ID to be\ndestroyed."
									},
									"parameters": [
										{
											"id": 4522,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The ID of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2267,
										"name": "Locator.waitForDeletedById"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 217,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2267,
								"name": "Locator.waitForDeletedById"
							}
						},
						{
							"id": 4526,
							"name": "waitForDeletedByLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4527,
									"name": "waitForDeletedByLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given\ncase-insensitive link text to be destroyed."
									},
									"parameters": [
										{
											"id": 4528,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2273,
										"name": "Locator.waitForDeletedByLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 231,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2273,
								"name": "Locator.waitForDeletedByLinkText"
							}
						},
						{
							"id": 4523,
							"name": "waitForDeletedByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4524,
									"name": "waitForDeletedByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given name\nattribute to be destroyed."
									},
									"parameters": [
										{
											"id": 4525,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2270,
										"name": "Locator.waitForDeletedByName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 224,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2270,
								"name": "Locator.waitForDeletedByName"
							}
						},
						{
							"id": 4529,
							"name": "waitForDeletedByPartialLinkText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4530,
									"name": "waitForDeletedByPartialLinkText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element partially matching the given\ncase-insensitive link text to be destroyed."
									},
									"parameters": [
										{
											"id": 4531,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The partial link text of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2276,
										"name": "Locator.waitForDeletedByPartialLinkText"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 238,
									"character": 35
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2276,
								"name": "Locator.waitForDeletedByPartialLinkText"
							}
						},
						{
							"id": 4532,
							"name": "waitForDeletedByTagName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4533,
									"name": "waitForDeletedByTagName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given HTML tag\nname to be destroyed."
									},
									"parameters": [
										{
											"id": 4534,
											"name": "tagName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The tag name of the element.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2279,
										"name": "Locator.waitForDeletedByTagName"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 245,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2279,
								"name": "Locator.waitForDeletedByTagName"
							}
						},
						{
							"id": 4535,
							"name": "waitForDeletedByXpath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4536,
									"name": "waitForDeletedByXpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Waits for all elements inside this element matching the given XPath\nselector to be destroyed."
									},
									"parameters": [
										{
											"id": 4537,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The XPath selector to search for.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "typeParameter",
												"name": "P"
											},
											{
												"type": "typeParameter",
												"name": "StringResult",
												"constraint": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										],
										"name": "Command"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2282,
										"name": "Locator.waitForDeletedByXpath"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/lib/Locator.d.ts",
									"line": 252,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2282,
								"name": "Locator.waitForDeletedByXpath"
							}
						},
						{
							"id": 4109,
							"name": "addElementMethod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4110,
									"name": "addElementMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Augments `target` with a method that will call `key` on all context\nelements stored within `target`. This can be used to easily add new\nmethods from any custom object that implements the Element API to any\ntarget object that implements the Command API.",
										"text": "Functions that are copied may have the following extra properties in\norder to change the way that Command works with these functions:\n\n* `createsContext` (boolean): If this property is specified, the return\n  value from the function will be used as the new context for the\n  returned Command.\n"
									},
									"typeParameter": [
										{
											"id": 4111,
											"name": "Us",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 4112,
											"name": "Ps",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 4113,
											"name": "Ss",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 4114,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "Us"
													},
													{
														"type": "typeParameter",
														"name": "Ps"
													},
													{
														"type": "typeParameter",
														"name": "Ss",
														"constraint": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												],
												"name": "Command"
											}
										},
										{
											"id": 4115,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4109,
										"name": "Command.addElementMethod"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 198,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4109,
								"name": "Command.addElementMethod"
							}
						},
						{
							"id": 4101,
							"name": "addSessionMethod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4102,
									"name": "addSessionMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Augments `target` with a conversion of the `originalFn` method that\nenables its use with a Command object. This can be used to easily add\nnew methods from any custom object that implements the Session API to\nany target object that implements the Command API.",
										"text": "Functions that are copied may have the following extra properties in\norder to change the way that Command works with these functions:\n\n* `createsContext` (boolean): If this property is specified, the return\n  value from the function will be used as the new context for the\n  returned Command.\n* `usesElement` (boolean): If this property is specified, element(s)\n  from the current context will be used as the first argument to the\n  function, if the explicitly specified first argument is not already an\n  element.\n"
									},
									"typeParameter": [
										{
											"id": 4103,
											"name": "Us",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 4104,
											"name": "Ps",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										},
										{
											"id": 4105,
											"name": "Ss",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 4106,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "Us"
													},
													{
														"type": "typeParameter",
														"name": "Ps"
													},
													{
														"type": "typeParameter",
														"name": "Ss",
														"constraint": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												],
												"name": "Command"
											}
										},
										{
											"id": 4107,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4108,
											"name": "originalFn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4101,
										"name": "Command.addSessionMethod"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/leadfoot/dist/Command.d.ts",
									"line": 181,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 4101,
								"name": "Command.addSessionMethod"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4117
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4116,
								4094,
								4095
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4137,
								4133,
								4139,
								4135
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4304,
								4231,
								4175,
								4162,
								4280,
								4410,
								4399,
								4316,
								4242,
								4229,
								4282,
								4306,
								4325,
								4350,
								4144,
								4427,
								4211,
								4216,
								4170,
								4177,
								4181,
								4469,
								4472,
								4478,
								4475,
								4481,
								4484,
								4487,
								4445,
								4448,
								4451,
								4457,
								4454,
								4460,
								4463,
								4466,
								4185,
								4490,
								4493,
								4496,
								4502,
								4499,
								4505,
								4508,
								4511,
								4356,
								4202,
								4289,
								4225,
								4299,
								4198,
								4376,
								4419,
								4223,
								4374,
								4442,
								4275,
								4200,
								4196,
								4384,
								4389,
								4366,
								4371,
								4294,
								4394,
								4285,
								4287,
								4432,
								4423,
								4437,
								4416,
								4408,
								4189,
								4403,
								4266,
								4252,
								4207,
								4205,
								4430,
								4414,
								4227,
								4412,
								4353,
								4272,
								4338,
								4308,
								4330,
								4291,
								4319,
								4378,
								4209,
								4334,
								4322,
								4277,
								4386,
								4391,
								4368,
								4096,
								4296,
								4396,
								4192,
								4258,
								4244,
								4141,
								4401,
								4234,
								4240,
								4237,
								4221,
								4327,
								4147,
								4342,
								4405,
								4301,
								4380,
								4514,
								4517,
								4520,
								4526,
								4523,
								4529,
								4532,
								4535,
								4109,
								4101
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1109,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Command"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Promise"
						}
					]
				},
				{
					"id": 4538,
					"name": "TunnelMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4540,
							"name": "progress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1117,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "DownloadProgressEvent"
							}
						},
						{
							"id": 4541,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1118,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4539,
							"name": "tunnel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/executors/Node.ts",
									"line": 1116,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Tunnel"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4540,
								4541,
								4539
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1115,
							"character": 30
						}
					]
				},
				{
					"id": 4592,
					"name": "process",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 59,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "Process"
					},
					"defaultValue": "global.process"
				},
				{
					"id": 4599,
					"name": "getNormalizedBrowserName",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4600,
							"name": "getNormalizedBrowserName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4601,
									"name": "nameOrEnv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1749,
												"name": "Environment"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1207,
							"character": 33
						}
					]
				},
				{
					"id": 4596,
					"name": "isLocalEnvironment",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4597,
							"name": "isLocalEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4598,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1742,
										"name": "EnvironmentSpec"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1203,
							"character": 27
						}
					]
				},
				{
					"id": 4593,
					"name": "isRemoteEnvironment",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4594,
							"name": "isRemoteEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4595,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1742,
										"name": "EnvironmentSpec"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/executors/Node.ts",
							"line": 1199,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4565,
						3871
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4542,
						4090,
						4582,
						4093,
						4538
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4592
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4599,
						4596,
						4593
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/executors/Node.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 574,
			"name": "\"lib/interfaces/bdd\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/interfaces/bdd.ts",
			"children": [
				{
					"id": 604,
					"name": "describe",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 528
				},
				{
					"id": 606,
					"name": "it",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 536
				},
				{
					"id": 605,
					"name": "xdescribe",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 532
				},
				{
					"id": 607,
					"name": "xit",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 540
				},
				{
					"id": 575,
					"name": "BddInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 595,
							"name": "after",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 596,
									"name": "after",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 597,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "after"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 502,
										"name": "TddLifecycleInterface.after"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 44,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 502,
								"name": "TddLifecycleInterface.after"
							}
						},
						{
							"id": 601,
							"name": "afterEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 602,
									"name": "afterEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 603,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "afterEach"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 508,
										"name": "TddLifecycleInterface.afterEach"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 46,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 508,
								"name": "TddLifecycleInterface.afterEach"
							}
						},
						{
							"id": 592,
							"name": "before",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 593,
									"name": "before",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 594,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "before"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 499,
										"name": "TddLifecycleInterface.before"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 43,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 499,
								"name": "TddLifecycleInterface.before"
							}
						},
						{
							"id": 598,
							"name": "beforeEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 599,
									"name": "beforeEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 600,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "beforeEach"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 505,
										"name": "TddLifecycleInterface.beforeEach"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 45,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 505,
								"name": "TddLifecycleInterface.beforeEach"
							}
						},
						{
							"id": 576,
							"name": "describe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 577,
									"name": "describe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 578,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 579,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 524,
												"name": "TddSuiteFactory"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/bdd.ts",
									"line": 18,
									"character": 10
								}
							]
						},
						{
							"id": 584,
							"name": "it",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 585,
									"name": "it",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 586,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 587,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "test"
												},
												"objectType": {
													"type": "reference",
													"name": "TestProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/bdd.ts",
									"line": 20,
									"character": 4
								}
							]
						},
						{
							"id": 580,
							"name": "xdescribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 581,
									"name": "xdescribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 582,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 583,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 524,
												"name": "TddSuiteFactory"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/bdd.ts",
									"line": 19,
									"character": 11
								}
							]
						},
						{
							"id": 588,
							"name": "xit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 589,
									"name": "xit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 590,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 591,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "test"
												},
												"objectType": {
													"type": "reference",
													"name": "TestProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/bdd.ts",
									"line": 21,
									"character": 5
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								595,
								601,
								592,
								598,
								576,
								584,
								580,
								588
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/bdd.ts",
							"line": 17,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 511,
							"name": "TddLifecycleInterface"
						}
					]
				},
				{
					"id": 608,
					"name": "getInterface",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 609,
							"name": "getInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 610,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 575,
								"name": "BddInterface"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/bdd.ts",
							"line": 30,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						604,
						606,
						605,
						607
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						575
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						608
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/interfaces/bdd.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1172,
			"name": "\"lib/interfaces/benchmark\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/interfaces/benchmark.ts",
			"comment": {
				"shortText": "Interface for registering benchmark suites"
			},
			"children": [
				{
					"id": 1173,
					"name": "BenchmarkInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1178,
							"name": "async",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1179,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1180,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1181,
													"name": "testFunction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 684,
														"name": "BenchmarkDeferredTestFunction"
													}
												},
												{
													"id": 1182,
													"name": "numCallsUntilResolution",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 677,
												"name": "BenchmarkTestFunction"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
											"line": 55,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 1174,
							"name": "registerSuite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1175,
									"name": "registerSuite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1176,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1177,
											"name": "descriptor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 1186,
														"name": "BenchmarkSuiteDescriptor"
													},
													{
														"type": "reference",
														"id": 1189,
														"name": "BenchmarkSuiteFactory"
													},
													{
														"type": "reference",
														"id": 1183,
														"name": "BenchmarkTests"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
									"line": 47,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1178
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1174
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
							"line": 46,
							"character": 35
						}
					]
				},
				{
					"id": 1186,
					"name": "BenchmarkSuiteDescriptor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1187,
							"name": "tests",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
									"line": 70,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 1183,
								"name": "BenchmarkTests"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1187
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
							"line": 68,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reflection",
							"declaration": {
								"id": 1188,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
										"line": 69,
										"character": 9
									}
								]
							}
						}
					]
				},
				{
					"id": 1189,
					"name": "BenchmarkSuiteFactory",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1190,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1186,
										"name": "BenchmarkSuiteDescriptor"
									},
									{
										"type": "reference",
										"id": 1183,
										"name": "BenchmarkTests"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
							"line": 73,
							"character": 38
						}
					]
				},
				{
					"id": 1183,
					"name": "BenchmarkTests",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 1184,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1185,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1186,
										"name": "BenchmarkSuiteDescriptor"
									},
									{
										"type": "reference",
										"id": 677,
										"name": "BenchmarkTestFunction"
									},
									{
										"type": "reference",
										"id": 1183,
										"name": "BenchmarkTests"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
							"line": 61,
							"character": 31
						}
					]
				},
				{
					"id": 1204,
					"name": "_registerSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1205,
							"name": "_registerSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1206,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								},
								{
									"id": 1207,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1208,
									"name": "descriptorOrFactory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1186,
												"name": "BenchmarkSuiteDescriptor"
											},
											{
												"type": "reference",
												"id": 1189,
												"name": "BenchmarkSuiteFactory"
											},
											{
												"type": "reference",
												"id": 1183,
												"name": "BenchmarkTests"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
							"line": 77,
							"character": 23
						}
					]
				},
				{
					"id": 1195,
					"name": "getInterface",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1196,
							"name": "getInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Interface factory used by Executor"
							},
							"parameters": [
								{
									"id": 1197,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1198,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1203,
											"name": "async",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
													"line": 42,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 622,
												"name": "async"
											},
											"defaultValue": "BenchmarkTest.async"
										},
										{
											"id": 1199,
											"name": "registerSuite",
											"kind": 64,
											"kindString": "Function",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1200,
													"name": "registerSuite",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1201,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1202,
															"name": "descriptorOrFactory",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 1186,
																		"name": "BenchmarkSuiteDescriptor"
																	},
																	{
																		"type": "reference",
																		"id": 1189,
																		"name": "BenchmarkSuiteFactory"
																	},
																	{
																		"type": "reference",
																		"id": 1183,
																		"name": "BenchmarkTests"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
													"line": 32,
													"character": 17
												}
											]
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1203
											]
										},
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1199
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
							"line": 30,
							"character": 28
						}
					]
				},
				{
					"id": 1191,
					"name": "registerSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1192,
							"name": "registerSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Importable interface that uses the currently installed global executor"
							},
							"parameters": [
								{
									"id": 1193,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1194,
									"name": "descriptorOrFactory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1186,
												"name": "BenchmarkSuiteDescriptor"
											},
											{
												"type": "reference",
												"id": 1189,
												"name": "BenchmarkSuiteFactory"
											},
											{
												"type": "reference",
												"id": 1183,
												"name": "BenchmarkTests"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
							"line": 17,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1173,
						1186,
						1189,
						1183
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1204,
						1195,
						1191
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/interfaces/benchmark.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 434,
			"name": "\"lib/interfaces/object\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/interfaces/object.ts",
			"comment": {
				"shortText": "This is the object interface for registering suites. Typically it will be\naccessed using [[lib/executors/Executor.Executor.getInterface]], like:",
				"text": "```js\nconst { registerSuite } = intern.getInterface('object');\n```\n\nIt may also be imported as a module, like\n\n```js\nimport registerSuite from 'intern/lib/interfaces/object';\n```\n\nSuites are described using objects. The object structure is a subset of suite\nproperties, specifically name, the lifecycle methods, and tests.\n\n```js\nregisterSuite('foo', {\n    before() {},\n    afterEach() {},\n    tests: {\n        bar() {},\n        baz() {}\n    }\n});\n```\n\nTests may also describe sub-suites:\n\n```js\nregisterSuite('foo', {\n    tests: {\n        fooStuff {\n            tests: {\n                bar() {},\n                baz() {}\n            }\n        }\n    }\n});\n```\n\nSub-suites don't need name properties, and may also omit the 'tests' nesting\nif no lifecycle functions are in use. The rule is that if a 'tests' property\nisn't in the sub-suite object, then every property is assumed to refer to a\ntest.\n\n```js\nregisterSuite('foo', {\n    fooStuff {\n        bar() {},\n        baz() {}\n    }\n});\n```\n"
			},
			"children": [
				{
					"id": 435,
					"name": "ObjectInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 436,
							"name": "registerSuite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 437,
									"name": "registerSuite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 438,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 439,
											"name": "mainDescriptor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 443,
														"name": "ObjectSuiteDescriptor"
													},
													{
														"type": "reference",
														"id": 446,
														"name": "ObjectSuiteFactory"
													},
													{
														"type": "reference",
														"id": 440,
														"name": "Tests"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/object.ts",
									"line": 89,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								436
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 88,
							"character": 32
						}
					]
				},
				{
					"id": 443,
					"name": "ObjectSuiteDescriptor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 444,
							"name": "tests",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/object.ts",
									"line": 100,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 440,
								"name": "Tests"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								444
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 99,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reflection",
							"declaration": {
								"id": 445,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "packages/core/src/lib/interfaces/object.ts",
										"line": 99,
										"character": 46
									}
								]
							}
						}
					]
				},
				{
					"id": 446,
					"name": "ObjectSuiteFactory",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 447,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 443,
										"name": "ObjectSuiteDescriptor"
									},
									{
										"type": "reference",
										"id": 440,
										"name": "Tests"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 103,
							"character": 35
						}
					]
				},
				{
					"id": 440,
					"name": "Tests",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 441,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 442,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 443,
										"name": "ObjectSuiteDescriptor"
									},
									{
										"type": "reference",
										"id": 241,
										"name": "TestFunction"
									},
									{
										"type": "reference",
										"id": 440,
										"name": "Tests"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 95,
							"character": 22
						}
					]
				},
				{
					"id": 476,
					"name": "_registerSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 477,
							"name": "_registerSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 478,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								},
								{
									"id": 479,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 480,
									"name": "descriptorOrFactory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 443,
												"name": "ObjectSuiteDescriptor"
											},
											{
												"type": "reference",
												"id": 446,
												"name": "ObjectSuiteFactory"
											},
											{
												"type": "reference",
												"id": 440,
												"name": "Tests"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 186,
							"character": 23
						}
					]
				},
				{
					"id": 464,
					"name": "createSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 465,
							"name": "createSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"typeParameter": [
								{
									"id": 466,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "Suite"
										}
									}
								},
								{
									"id": 467,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "Test"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 468,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 469,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								},
								{
									"id": 470,
									"name": "descriptor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 443,
												"name": "ObjectSuiteDescriptor"
											},
											{
												"type": "reference",
												"id": 440,
												"name": "Tests"
											}
										]
									}
								},
								{
									"id": 471,
									"name": "SuiteClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "S",
										"constraint": {
											"type": "query",
											"queryType": {
												"type": "reference",
												"name": "Suite"
											}
										}
									}
								},
								{
									"id": 472,
									"name": "TestClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "query",
											"queryType": {
												"type": "reference",
												"name": "Test"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"name": "Suite"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 111,
							"character": 27
						}
					]
				},
				{
					"id": 452,
					"name": "getInterface",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 453,
							"name": "getInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Interface factory used by Executor"
							},
							"parameters": [
								{
									"id": 454,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 455,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 456,
											"name": "registerSuite",
											"kind": 64,
											"kindString": "Function",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 457,
													"name": "registerSuite",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 458,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 459,
															"name": "descriptorOrFactory",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 443,
																		"name": "ObjectSuiteDescriptor"
																	},
																	{
																		"type": "reference",
																		"id": 446,
																		"name": "ObjectSuiteFactory"
																	},
																	{
																		"type": "reference",
																		"id": 440,
																		"name": "Tests"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/interfaces/object.ts",
													"line": 79,
													"character": 17
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												456
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 77,
							"character": 28
						}
					]
				},
				{
					"id": 473,
					"name": "isObjectSuiteDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 474,
							"name": "isObjectSuiteDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 475,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "ObjectSuiteDescriptor"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 182,
							"character": 32
						}
					]
				},
				{
					"id": 460,
					"name": "isSuiteDescriptorFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 461,
							"name": "isSuiteDescriptorFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"typeParameter": [
								{
									"id": 462,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 463,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 107,
							"character": 40
						}
					]
				},
				{
					"id": 448,
					"name": "registerSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 449,
							"name": "registerSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Importable interface that uses the currently installed global executor"
							},
							"parameters": [
								{
									"id": 450,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 451,
									"name": "descriptorOrFactory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 443,
												"name": "ObjectSuiteDescriptor"
											},
											{
												"type": "reference",
												"id": 446,
												"name": "ObjectSuiteFactory"
											},
											{
												"type": "reference",
												"id": 440,
												"name": "Tests"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/object.ts",
							"line": 67,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						435,
						443,
						446,
						440
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						476,
						464,
						452,
						473,
						460,
						448
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/interfaces/object.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 481,
			"name": "\"lib/interfaces/tdd\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/interfaces/tdd.ts",
			"comment": {
				"shortText": "This is the TDD interface for registering suites. Typically it will be\naccessed using [[lib/executors/Executor.Executor.getInterface]], like:",
				"text": "```js\nconst { suite, test } = intern.getInterface('tdd');\n```\n\nIt may also be imported as a module, like\n\n```js\nimport { suite, test } from 'intern/lib/interfaces/tdd';\n```\n\nSuites are registered using callback functions, and tests can be registered\nwithin the suite callbacks.\n\n```js\nsuite('foo', () => {\n    before(() => { ... });\n    afterEach(() => { ... });\n    test('bar', () => { ... });\n    test('baz', () => { ... });\n});\n"
			},
			"children": [
				{
					"id": 482,
					"name": "TddInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 502,
							"name": "after",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 503,
									"name": "after",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 504,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "after"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 502,
										"name": "TddLifecycleInterface.after"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 44,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 502,
								"name": "TddLifecycleInterface.after"
							}
						},
						{
							"id": 508,
							"name": "afterEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 509,
									"name": "afterEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 510,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "afterEach"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 508,
										"name": "TddLifecycleInterface.afterEach"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 46,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 508,
								"name": "TddLifecycleInterface.afterEach"
							}
						},
						{
							"id": 499,
							"name": "before",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 500,
									"name": "before",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 501,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "before"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 499,
										"name": "TddLifecycleInterface.before"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 43,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 499,
								"name": "TddLifecycleInterface.before"
							}
						},
						{
							"id": 505,
							"name": "beforeEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 506,
									"name": "beforeEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 507,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "beforeEach"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 505,
										"name": "TddLifecycleInterface.beforeEach"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 45,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 505,
								"name": "TddLifecycleInterface.beforeEach"
							}
						},
						{
							"id": 483,
							"name": "suite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 484,
									"name": "suite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 485,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 486,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 524,
												"name": "TddSuiteFactory"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 36,
									"character": 7
								}
							]
						},
						{
							"id": 491,
							"name": "test",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 492,
									"name": "test",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 493,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 494,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "test"
												},
												"objectType": {
													"type": "reference",
													"name": "TestProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 38,
									"character": 6
								}
							]
						},
						{
							"id": 487,
							"name": "xsuite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "xsuite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 489,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 490,
											"name": "factory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 524,
												"name": "TddSuiteFactory"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 37,
									"character": 8
								}
							]
						},
						{
							"id": 495,
							"name": "xtest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 496,
									"name": "xtest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 497,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 498,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "test"
												},
												"objectType": {
													"type": "reference",
													"name": "TestProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 39,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								502,
								508,
								499,
								505,
								483,
								491,
								487,
								495
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 35,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 511,
							"name": "TddLifecycleInterface"
						}
					]
				},
				{
					"id": 511,
					"name": "TddLifecycleInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 515,
							"name": "after",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 516,
									"name": "after",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 517,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "after"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 44,
									"character": 7
								}
							]
						},
						{
							"id": 521,
							"name": "afterEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 522,
									"name": "afterEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 523,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "afterEach"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 46,
									"character": 11
								}
							]
						},
						{
							"id": 512,
							"name": "before",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 513,
									"name": "before",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 514,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "before"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 43,
									"character": 8
								}
							]
						},
						{
							"id": 518,
							"name": "beforeEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 519,
									"name": "beforeEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 520,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "stringLiteral",
													"value": "beforeEach"
												},
												"objectType": {
													"type": "reference",
													"name": "SuiteProperties"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 45,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								515,
								521,
								512,
								518
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 42,
							"character": 38
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 482,
							"name": "TddInterface"
						},
						{
							"type": "reference",
							"id": 575,
							"name": "BddInterface"
						}
					]
				},
				{
					"id": 524,
					"name": "TddSuiteFactory",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 49,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 525,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 526,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 527,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/interfaces/tdd.ts",
									"line": 49,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 559,
					"name": "currentSuite",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 128,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 270,
								"name": "Suite"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 564,
					"name": "_suite",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 565,
							"name": "_suite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 566,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								},
								{
									"id": 567,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 568,
									"name": "factory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 524,
										"name": "TddSuiteFactory"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 141,
							"character": 15
						}
					]
				},
				{
					"id": 547,
					"name": "after",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 548,
							"name": "after",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 549,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "after"
										},
										"objectType": {
											"type": "reference",
											"name": "SuiteProperties"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 91,
							"character": 21
						}
					]
				},
				{
					"id": 553,
					"name": "afterEach",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 554,
							"name": "afterEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 555,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "afterEach"
										},
										"objectType": {
											"type": "reference",
											"name": "SuiteProperties"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 105,
							"character": 25
						}
					]
				},
				{
					"id": 569,
					"name": "aspect",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 570,
							"name": "aspect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 571,
									"name": "suite",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								},
								{
									"id": 572,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "before"
											},
											{
												"type": "stringLiteral",
												"value": "after"
											},
											{
												"type": "stringLiteral",
												"value": "beforeEach"
											},
											{
												"type": "stringLiteral",
												"value": "afterEach"
											}
										]
									}
								},
								{
									"id": 573,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 359,
												"name": "SuiteLifecycleFunction"
											},
											{
												"type": "reference",
												"id": 363,
												"name": "TestLifecycleFunction"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 153,
							"character": 15
						}
					]
				},
				{
					"id": 544,
					"name": "before",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 545,
							"name": "before",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 546,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "before"
										},
										"objectType": {
											"type": "reference",
											"name": "SuiteProperties"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 84,
							"character": 22
						}
					]
				},
				{
					"id": 550,
					"name": "beforeEach",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 551,
							"name": "beforeEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 552,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "beforeEach"
										},
										"objectType": {
											"type": "reference",
											"name": "SuiteProperties"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 98,
							"character": 26
						}
					]
				},
				{
					"id": 556,
					"name": "getInterface",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 557,
							"name": "getInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 558,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 482,
								"name": "TddInterface"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 112,
							"character": 28
						}
					]
				},
				{
					"id": 560,
					"name": "registerSuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 561,
							"name": "registerSuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 562,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 563,
									"name": "factory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 524,
										"name": "TddSuiteFactory"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 130,
							"character": 22
						}
					]
				},
				{
					"id": 528,
					"name": "suite",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 529,
							"name": "suite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 530,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 531,
									"name": "factory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 524,
										"name": "TddSuiteFactory"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 51,
							"character": 21
						}
					]
				},
				{
					"id": 536,
					"name": "test",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 537,
							"name": "test",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 538,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 539,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "test"
										},
										"objectType": {
											"type": "reference",
											"name": "TestProperties"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 64,
							"character": 20
						}
					]
				},
				{
					"id": 532,
					"name": "xsuite",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 533,
							"name": "xsuite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 534,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 535,
									"name": "factory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 524,
										"name": "TddSuiteFactory"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 55,
							"character": 22
						}
					]
				},
				{
					"id": 540,
					"name": "xtest",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 541,
							"name": "xtest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 542,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 543,
									"name": "testImplementation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "test"
										},
										"objectType": {
											"type": "reference",
											"name": "TestProperties"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/interfaces/tdd.ts",
							"line": 71,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						482,
						511
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						524
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						559
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						564,
						547,
						553,
						569,
						544,
						550,
						556,
						560,
						528,
						536,
						532,
						540
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/interfaces/tdd.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3486,
			"name": "\"lib/middleware/filterUrl\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/middleware/filterUrl.ts",
			"children": [
				{
					"id": 3487,
					"name": "filterUrl",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3488,
							"name": "filterUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "RequestHandler"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/middleware/filterUrl.ts",
							"line": 3,
							"character": 33
						}
					]
				},
				{
					"id": 3489,
					"name": "removeLineNumberRequest",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3490,
							"name": "removeLineNumberRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3491,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/middleware/filterUrl.ts",
							"line": 10,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3487,
						3489
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/middleware/filterUrl.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3475,
			"name": "\"lib/middleware/finalError\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/middleware/finalError.ts",
			"children": [
				{
					"id": 3476,
					"name": "finalError",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3477,
							"name": "finalError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "ErrorRequestHandler"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/middleware/finalError.ts",
							"line": 5,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3476
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/middleware/finalError.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3468,
			"name": "\"lib/middleware/instrument\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/middleware/instrument.ts",
			"children": [
				{
					"id": 3469,
					"name": "instrument",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3470,
							"name": "instrument",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 3471,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 3493,
										"name": "Context"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RequestHandler"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/middleware/instrument.ts",
							"line": 9,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3469
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/middleware/instrument.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3482,
			"name": "\"lib/middleware/post\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/middleware/post.ts",
			"children": [
				{
					"id": 3483,
					"name": "post",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3484,
							"name": "post",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 3485,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 3493,
										"name": "Context"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RequestHandler"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/middleware/post.ts",
							"line": 6,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3483
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/middleware/post.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3478,
			"name": "\"lib/middleware/resolveSuites\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/middleware/resolveSuites.ts",
			"children": [
				{
					"id": 3479,
					"name": "resolveSuites",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3480,
							"name": "resolveSuites",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 3481,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 3493,
										"name": "Context"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RequestHandler"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/middleware/resolveSuites.ts",
							"line": 7,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3479
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/middleware/resolveSuites.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3472,
			"name": "\"lib/middleware/unhandled\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/middleware/unhandled.ts",
			"children": [
				{
					"id": 3473,
					"name": "unhandled",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3474,
							"name": "unhandled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "RequestHandler"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/middleware/unhandled.ts",
							"line": 4,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3473
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/middleware/unhandled.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1815,
			"name": "\"lib/node/ErrorFormatter\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/node/ErrorFormatter.ts",
			"children": [
				{
					"id": 1816,
					"name": "NodeErrorFormatter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1826,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1827,
									"name": "new NodeErrorFormatter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1828,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1816,
										"name": "NodeErrorFormatter"
									},
									"overwrites": {
										"type": "reference",
										"id": 398,
										"name": "ErrorFormatter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/node/ErrorFormatter.ts",
									"line": 13,
									"character": 55
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 398,
								"name": "ErrorFormatter.__constructor"
							}
						},
						{
							"id": 1817,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/node/ErrorFormatter.ts",
									"line": 10,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 397,
								"name": "ErrorFormatter.executor"
							},
							"implementationOf": {
								"type": "reference",
								"id": 431,
								"name": "ErrorFormatterProperties.executor"
							}
						},
						{
							"id": 1851,
							"name": "_createDiff",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1852,
									"name": "_createDiff",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a unified diff to explain the difference between two objects.",
										"returns": "A unified diff formatted string representing the difference\nbetween the two objects.\n"
									},
									"parameters": [
										{
											"id": 1853,
											"name": "actual",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The actual result."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1854,
											"name": "expected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The expected result."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 408,
										"name": "ErrorFormatter._createDiff"
									}
								},
								{
									"id": 1855,
									"name": "_createDiff",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1856,
											"name": "actual",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1857,
											"name": "expected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 408,
										"name": "ErrorFormatter._createDiff"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 118,
									"character": 23
								},
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 119,
									"character": 23
								},
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 120,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 408,
								"name": "ErrorFormatter._createDiff"
							}
						},
						{
							"id": 1858,
							"name": "_formatLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1859,
									"name": "_formatLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Return a trace line in a standardized format."
									},
									"parameters": [
										{
											"id": 1860,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1861,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1862,
															"name": "func",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
																	"line": 151,
																	"character": 36
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														},
														{
															"id": 1863,
															"name": "source",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
																	"line": 151,
																	"character": 53
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1862,
																1863
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
															"line": 151,
															"character": 29
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 415,
										"name": "ErrorFormatter._formatLine"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 151,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 415,
								"name": "ErrorFormatter._formatLine"
							}
						},
						{
							"id": 1829,
							"name": "_getSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1830,
									"name": "_getSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Dereference the source from a traceline."
									},
									"parameters": [
										{
											"id": 1831,
											"name": "tracepath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"id": 405,
										"name": "ErrorFormatter._getSource"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/node/ErrorFormatter.ts",
									"line": 22,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 405,
								"name": "ErrorFormatter._getSource"
							}
						},
						{
							"id": 1864,
							"name": "_normalizeStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1865,
									"name": "_normalizeStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Parse a stack trace, apply any source mappings, and normalize its format."
									},
									"parameters": [
										{
											"id": 1866,
											"name": "stack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 421,
										"name": "ErrorFormatter._normalizeStackTrace"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 165,
									"character": 32
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 421,
								"name": "ErrorFormatter._normalizeStackTrace"
							}
						},
						{
							"id": 1867,
							"name": "_processChromeTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1868,
									"name": "_processChromeTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process Chrome, Opera, and IE traces.",
										"text": "Ex)\n  at Object._updateExpressionOptions (AxiomEditor.js:511)\n  at Object.<anonymous> (AxiomEditor.js:291)\n  at Function.m.emit (dojo.js.uncompressed.js:8875)\n"
									},
									"parameters": [
										{
											"id": 1869,
											"name": "lines",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 424,
										"name": "ErrorFormatter._processChromeTrace"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 205,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 424,
								"name": "ErrorFormatter._processChromeTrace"
							}
						},
						{
							"id": 1870,
							"name": "_processSafariTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1871,
									"name": "_processSafariTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process Safari and Firefox traces.",
										"text": "Ex)\n  _updateExpressionOptions@http://localhost:8080/AxiomEditor.js:511:49\n  http://localhost:8080/AxiomEditor.js:291:34\n  dispatchEvent@[native code]\n  emit@http://ajax.googleapis.com/ajax/libs/dojo/1.12.2/dojo/dojo.js:118:282\n"
									},
									"parameters": [
										{
											"id": 1872,
											"name": "lines",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 427,
										"name": "ErrorFormatter._processSafariTrace"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 227,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 427,
								"name": "ErrorFormatter._processSafariTrace"
							}
						},
						{
							"id": 1847,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1848,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a full error message from a plain Error object, avoiding\nduplicate error messages that might be caused by different opinions on\nwhat a stack trace should look like.",
										"returns": "A string message describing the error.\n"
									},
									"parameters": [
										{
											"id": 1849,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "An object describing the error."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Error"
													},
													{
														"type": "reference",
														"id": 31,
														"name": "InternError"
													}
												]
											}
										},
										{
											"id": 1850,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 401,
										"name": "ErrorFormatter.format"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/common/ErrorFormatter.ts",
									"line": 21,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 401,
								"name": "ErrorFormatter.format"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1826
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1817
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1851,
								1858,
								1829,
								1864,
								1867,
								1870,
								1847
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/ErrorFormatter.ts",
							"line": 9,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 396,
							"name": "ErrorFormatter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 430,
							"name": "ErrorFormatterProperties"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1816
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/node/ErrorFormatter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3800,
			"name": "\"lib/node/process\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/node/process.ts",
			"sources": [
				{
					"fileName": "packages/core/src/lib/node/process.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1766,
			"name": "\"lib/node/util\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/node/util.ts",
			"children": [
				{
					"id": 1767,
					"name": "process",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1811,
					"name": "sourceMapRegEx",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 240,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^(?:\\/{2}[#@]{1,2}|\\/\\*)\\s+sourceMappingURL\\s*=\\s*(data:(?:[^;]+;)+base64,)?(\\S+)/"
				},
				{
					"id": 1768,
					"name": "expandFiles",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1769,
							"name": "expandFiles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Expand a list of glob patterns into a flat file list. Patterns may be simple\nfile paths or glob patterns. Patterns starting with '!' denote exclusions.\nNote that exclusion rules will not apply to simple paths."
							},
							"parameters": [
								{
									"id": 1770,
									"name": "patterns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 31,
							"character": 27
						}
					]
				},
				{
					"id": 1771,
					"name": "getConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1772,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get the user-supplied config data, which may include command line args and a\nconfig file."
							},
							"parameters": [
								{
									"id": 1773,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "A config file"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1774,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1775,
													"name": "config",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/node/util.ts",
															"line": 73,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1776,
													"name": "file",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/node/util.ts",
															"line": 73,
															"character": 30
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1775,
														1776
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/node/util.ts",
													"line": 73,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 1777,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1778,
									"name": "argv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1779,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1780,
													"name": "config",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/node/util.ts",
															"line": 76,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1781,
													"name": "file",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/node/util.ts",
															"line": 76,
															"character": 30
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1780,
														1781
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/node/util.ts",
													"line": 76,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 1782,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1783,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1784,
									"name": "argv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1785,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1786,
													"name": "config",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/node/util.ts",
															"line": 80,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1787,
													"name": "file",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/node/util.ts",
															"line": 80,
															"character": 30
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1786,
														1787
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/node/util.ts",
													"line": 80,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 71,
							"character": 25
						},
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 74,
							"character": 25
						},
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 77,
							"character": 25
						},
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 81,
							"character": 25
						}
					]
				},
				{
					"id": 1788,
					"name": "getPackagePath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1789,
							"name": "getPackagePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return the absolute path to Intern's package"
							},
							"parameters": [
								{
									"id": 1790,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "__dirname"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 143,
							"character": 30
						}
					]
				},
				{
					"id": 1801,
					"name": "isErrnoException",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1802,
							"name": "isErrnoException",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Indicate whether a value is an ErrnoException"
							},
							"parameters": [
								{
									"id": 1803,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "ErrnoException"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 209,
							"character": 32
						}
					]
				},
				{
					"id": 1812,
					"name": "isTypeScriptFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1813,
							"name": "isTypeScriptFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"returns": "if the path has a TypeScript file extension\n"
							},
							"parameters": [
								{
									"id": 1814,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 245,
							"character": 32
						}
					]
				},
				{
					"id": 1791,
					"name": "loadText",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1792,
							"name": "loadText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Loads a text resource."
							},
							"parameters": [
								{
									"id": 1793,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 156,
							"character": 24
						}
					]
				},
				{
					"id": 1804,
					"name": "mkdirp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1805,
							"name": "mkdirp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Recursively create directories"
							},
							"parameters": [
								{
									"id": 1806,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 216,
							"character": 22
						}
					]
				},
				{
					"id": 1794,
					"name": "normalizePath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1795,
							"name": "normalizePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Normalize a path (e.g., resolve '..')"
							},
							"parameters": [
								{
									"id": 1796,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 172,
							"character": 29
						}
					]
				},
				{
					"id": 1797,
					"name": "readSourceMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1798,
							"name": "readSourceMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Given a source filename, and optionally code, return the file's source map if\none exists."
							},
							"parameters": [
								{
									"id": 1799,
									"name": "sourceFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1800,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "RawSourceMap"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 180,
							"character": 29
						}
					]
				},
				{
					"id": 1807,
					"name": "transpileSource",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1808,
							"name": "transpileSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1809,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1810,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/node/util.ts",
							"line": 226,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1767,
						1811
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1768,
						1771,
						1788,
						1801,
						1812,
						1791,
						1804,
						1794,
						1797,
						1807
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/node/util.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1542,
			"name": "\"lib/reporters/Benchmark\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Benchmark.ts",
			"children": [
				{
					"id": 1543,
					"name": "BenchmarkReporter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Benchmark is a reporter that can generate a baseline report and do runtime\ncomparisons against an existing baseline.",
						"text": "**Configuration**\n\nAlong with the default reporter options, Benchmark also supports a `mode`\noption. This can have two values:\n\n* `'baseline'`: Benchmark data will be written to a baseline file when\n  testing is finished\n* `'test'`: Benchmark is compared to a baseline read from a file when testing\n  starts\n\nBaseline data is stored hierarchically by environment and then by test.\n\n**Notation**\n\n* **rme:** relative margin of error -- margin of error as a percentage of the\n  mean margin of error\n* **mean:** mean execution time per function run\n* **hz:** Hertz (number of executions of a function per second). 1/Hz is the\n  mean execution time of function.\n"
					},
					"children": [
						{
							"id": 1552,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1553,
									"name": "new BenchmarkReporter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1554,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 1555,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1644,
												"name": "BenchmarkReporterOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1543,
										"name": "BenchmarkReporter"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 43,
									"character": 34
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							}
						},
						{
							"id": 1571,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 1575,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1576,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 1577,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1578,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 1572,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 1573,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 1574,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 1544,
							"name": "baseline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 35,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1620,
								"name": "BenchmarkBaseline"
							}
						},
						{
							"id": 1570,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 11,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							}
						},
						{
							"id": 1545,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 37,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1638,
								"name": "BenchmarkReporterProperties.filename"
							}
						},
						{
							"id": 1546,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 39,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 1643,
								"name": "BenchmarkMode"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1639,
								"name": "BenchmarkReporterProperties.mode"
							}
						},
						{
							"id": 1547,
							"name": "sessions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 41,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1548,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1549,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1550,
													"name": "sessionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1628,
												"name": "SessionInfo"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
											"line": 41,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1551,
							"name": "thresholds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 43,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1601,
								"name": "BenchmarkThresholds"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1640,
								"name": "BenchmarkReporterProperties.thresholds"
							}
						},
						{
							"id": 1579,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1580,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 1581,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1582,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1642,
								"name": "BenchmarkReporterProperties.console"
							}
						},
						{
							"id": 1583,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1584,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 1585,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1586,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1641,
								"name": "BenchmarkReporterProperties.output"
							}
						},
						{
							"id": 1556,
							"name": "_getSession",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1557,
									"name": "_getSession",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1558,
											"name": "testOrSuite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 178,
														"name": "Test"
													},
													{
														"type": "reference",
														"id": 270,
														"name": "Suite"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1628,
										"name": "SessionInfo"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 76,
									"character": 13
								}
							]
						},
						{
							"id": 1591,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1592,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 1587,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1588,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1589,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1590,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 1559,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 1560,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 111,
									"character": 8
								}
							]
						},
						{
							"id": 1561,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 1562,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1563,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 136,
									"character": 10
								}
							]
						},
						{
							"id": 1564,
							"name": "suiteStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 1565,
									"name": "suiteStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1566,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 166,
									"character": 12
								}
							]
						},
						{
							"id": 1567,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 1568,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1569,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 205,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1552
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1571,
								1575,
								1572,
								1573,
								1574,
								1544,
								1570,
								1545,
								1546,
								1547,
								1551
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1579,
								1583
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1556,
								1591,
								1587,
								1559,
								1561,
								1564,
								1567
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 33,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 1637,
							"name": "BenchmarkReporterProperties"
						}
					]
				},
				{
					"id": 1612,
					"name": "BaselineEnvironment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1613,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 369,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1615,
							"name": "platform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 371,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1616,
							"name": "tests",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 372,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1617,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1618,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1619,
													"name": "testId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1593,
												"name": "BenchmarkData"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
											"line": 372,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 1614,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 370,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1613,
								1615,
								1616,
								1614
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 368,
							"character": 36
						}
					]
				},
				{
					"id": 1620,
					"name": "BenchmarkBaseline",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 1621,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1622,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1612,
								"name": "BaselineEnvironment"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 375,
							"character": 34
						}
					]
				},
				{
					"id": 1593,
					"name": "BenchmarkData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1595,
							"name": "hz",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 347,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1596,
							"name": "stats",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 348,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1597,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1600,
											"name": "mean",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
													"line": 351,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1599,
											"name": "moe",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
													"line": 350,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1598,
											"name": "rme",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
													"line": 349,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1600,
												1599,
												1598
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
											"line": 348,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 1594,
							"name": "times",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 346,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 936,
								"name": "Times"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1595,
								1596,
								1594
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 345,
							"character": 30
						}
					]
				},
				{
					"id": 1637,
					"name": "BenchmarkReporterProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1642,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 1638,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 399,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1639,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 400,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 1643,
								"name": "BenchmarkMode"
							}
						},
						{
							"id": 1641,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 1640,
							"name": "thresholds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 401,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1601,
								"name": "BenchmarkThresholds"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1642,
								1638,
								1639,
								1641,
								1640
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 398,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1543,
							"name": "BenchmarkReporter"
						}
					]
				},
				{
					"id": 1601,
					"name": "BenchmarkThresholds",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1607,
							"name": "fail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 361,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1608,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1610,
													"name": "hz",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
															"line": 363,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 1611,
													"name": "mean",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
															"line": 364,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 1609,
													"name": "rme",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
															"line": 362,
															"character": 7
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1610,
														1611,
														1609
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1602,
							"name": "warn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 356,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1603,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1605,
													"name": "hz",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
															"line": 358,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 1606,
													"name": "mean",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
															"line": 359,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 1604,
													"name": "rme",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
															"line": 357,
															"character": 7
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1605,
														1606,
														1604
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1607,
								1602
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 355,
							"character": 36
						}
					]
				},
				{
					"id": 1628,
					"name": "SessionInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1636,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 393,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1623,
								"name": "SesssionEnvironment"
							}
						},
						{
							"id": 1629,
							"name": "suites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 387,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1630,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1631,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1632,
													"name": "suiteId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1633,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1634,
															"name": "numBenchmarks",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
																	"line": 389,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1635,
															"name": "numFailedBenchmarks",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
																	"line": 390,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1634,
																1635
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
															"line": 388,
															"character": 22
														}
													]
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
											"line": 387,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1636,
								1629
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 386,
							"character": 28
						}
					]
				},
				{
					"id": 1623,
					"name": "SesssionEnvironment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1624,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 380,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1627,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 383,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1626,
							"name": "platform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 382,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1625,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
									"line": 381,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1624,
								1627,
								1626,
								1625
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 379,
							"character": 36
						}
					]
				},
				{
					"id": 1643,
					"name": "BenchmarkMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 396,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "baseline"
							},
							{
								"type": "stringLiteral",
								"value": "test"
							}
						]
					}
				},
				{
					"id": 1644,
					"name": "BenchmarkReporterOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 404,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1637,
								"name": "BenchmarkReporterProperties"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 1645,
					"name": "formatSeconds",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1646,
							"name": "formatSeconds",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1647,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
							"line": 406,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1543
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1612,
						1620,
						1593,
						1637,
						1601,
						1628,
						1623
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1643,
						1644
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1645
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Benchmark.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2940,
			"name": "\"lib/reporters/Cobertura\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Cobertura.ts",
			"children": [
				{
					"id": 2941,
					"name": "Cobertura",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2944,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2945,
									"name": "new Cobertura",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2946,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 2947,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2992,
												"name": "CoberturaCoverageOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2941,
										"name": "Cobertura"
									},
									"overwrites": {
										"type": "reference",
										"id": 2885,
										"name": "Coverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
									"line": 7,
									"character": 34
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2885,
								"name": "Coverage.__constructor"
							}
						},
						{
							"id": 2963,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 2967,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2968,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 2969,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2970,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 2964,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 2965,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 2966,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 2955,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2988,
								"name": "CoberturaCoverageProperties.directory"
							}
						},
						{
							"id": 2953,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 2954,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2987,
								"name": "CoberturaCoverageProperties.filename"
							}
						},
						{
							"id": 2943,
							"name": "projectRoot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
									"line": 7,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 2986,
								"name": "CoberturaCoverageProperties.projectRoot"
							}
						},
						{
							"id": 2942,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
									"line": 6,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"cobertura\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							}
						},
						{
							"id": 2956,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2989,
								"name": "CoberturaCoverageProperties.watermarks"
							}
						},
						{
							"id": 2971,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2972,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 2973,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2974,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2991,
								"name": "CoberturaCoverageProperties.console"
							}
						},
						{
							"id": 2975,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2976,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 2977,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2978,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2990,
								"name": "CoberturaCoverageProperties.output"
							}
						},
						{
							"id": 2983,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2984,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 2957,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2958,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2959,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 2960,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 2979,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2980,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2981,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2982,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 2948,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2949,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2950,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 2951,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2952,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
													"line": 17,
													"character": 23
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
									"line": 17,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							}
						},
						{
							"id": 2961,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2962,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 73,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2944
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2963,
								2967,
								2964,
								2965,
								2966,
								2955,
								2953,
								2954,
								2943,
								2942,
								2956
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2971,
								2975
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2983,
								2957,
								2979,
								2948,
								2961
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
							"line": 4,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						},
						{
							"type": "reference",
							"id": 2985,
							"name": "CoberturaCoverageProperties"
						}
					]
				},
				{
					"id": 2985,
					"name": "CoberturaCoverageProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2991,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 2988,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direcotry to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 88,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 2987,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A filename to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 85,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 2990,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 2986,
							"name": "projectRoot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
									"line": 27,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2989,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Watermarks used to check coverage"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2991,
								2988,
								2987,
								2990,
								2986,
								2989
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
							"line": 26,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2941,
							"name": "Cobertura"
						}
					]
				},
				{
					"id": 2992,
					"name": "CoberturaCoverageOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
							"line": 30,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 2985,
								"name": "CoberturaCoverageProperties"
							}
						],
						"name": "Partial"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2941
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2985
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2992
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Cobertura.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2501,
			"name": "\"lib/reporters/Console\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Console.ts",
			"children": [
				{
					"id": 2502,
					"name": "ConsoleReporter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The console reporter outputs to the browser console."
					},
					"children": [
						{
							"id": 2505,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2506,
									"name": "new ConsoleReporter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2507,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 2508,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1537,
												"name": "ReporterOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2502,
										"name": "ConsoleReporter"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Console.ts",
									"line": 11,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							}
						},
						{
							"id": 2522,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 2526,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2527,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 2528,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2529,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 2523,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 2524,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 2525,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 2521,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 11,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							}
						},
						{
							"id": 2530,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2531,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 2532,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2533,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 2534,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2535,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 2536,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2537,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 2542,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2543,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 2509,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2510,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2511,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Console.ts",
									"line": 20,
									"character": 7
								}
							]
						},
						{
							"id": 2538,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2539,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2540,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2541,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 2512,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2513,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2514,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Console.ts",
									"line": 26,
									"character": 10
								}
							]
						},
						{
							"id": 2515,
							"name": "suiteStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2516,
									"name": "suiteStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2517,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Console.ts",
									"line": 55,
									"character": 12
								}
							]
						},
						{
							"id": 2518,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2519,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2520,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Console.ts",
									"line": 61,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2505
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2522,
								2526,
								2523,
								2524,
								2525,
								2521
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2530,
								2534
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2542,
								2509,
								2538,
								2512,
								2515,
								2518
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Console.ts",
							"line": 9,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2502
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Console.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2878,
			"name": "\"lib/reporters/Coverage\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Coverage.ts",
			"children": [
				{
					"id": 2879,
					"name": "Coverage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 2885,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2886,
									"name": "new Coverage",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2887,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 2888,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2936,
												"name": "CoverageOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2879,
										"name": "Coverage"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							}
						},
						{
							"id": 2900,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 2904,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2905,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 2906,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2907,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 2901,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 2902,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 2903,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 2883,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 2881,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							}
						},
						{
							"id": 2882,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 2880,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isAbstract": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 17,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							}
						},
						{
							"id": 2884,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						},
						{
							"id": 2908,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2909,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 2910,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2911,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2927,
								"name": "CoverageProperties.console"
							}
						},
						{
							"id": 2912,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2913,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 2914,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2915,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2926,
								"name": "CoverageProperties.output"
							}
						},
						{
							"id": 2920,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2921,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 2894,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2895,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2896,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 2897,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							]
						},
						{
							"id": 2916,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2917,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2918,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2919,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 2889,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2890,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2891,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 2892,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2893,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Coverage.ts",
													"line": 38,
													"character": 23
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 38,
									"character": 20
								}
							]
						},
						{
							"id": 2898,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2899,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 73,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2885
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2900,
								2904,
								2901,
								2902,
								2903,
								2883,
								2881,
								2882,
								2880,
								2884
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2908,
								2912
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2920,
								2894,
								2916,
								2889,
								2898
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Coverage.ts",
							"line": 15,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2941,
							"name": "Cobertura"
						},
						{
							"type": "reference",
							"id": 2994,
							"name": "HtmlCoverage"
						},
						{
							"type": "reference",
							"id": 3047,
							"name": "JsonCoverage"
						},
						{
							"type": "reference",
							"id": 3160,
							"name": "LcovCoverage"
						},
						{
							"type": "reference",
							"id": 3204,
							"name": "TextCoverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						}
					]
				},
				{
					"id": 2928,
					"name": "AsyncMapStore",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "This is needed since the typings for istanbul-lib-source-maps are out of\ndate.",
						"text": "TODO: remove this when @types/istanbul-lib-source-maps is updated to >= 3.\n"
					},
					"children": [
						{
							"id": 2932,
							"name": "sourceFinder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2933,
									"name": "sourceFinder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2934,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 108,
									"character": 14
								}
							]
						},
						{
							"id": 2929,
							"name": "transformCoverage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2930,
									"name": "transformCoverage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2931,
											"name": "coverageMap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CoverageMap"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "CoverageMap"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 107,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2932,
								2929
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Coverage.ts",
							"line": 106,
							"character": 23
						}
					]
				},
				{
					"id": 2922,
					"name": "CoverageProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2927,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 2924,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direcotry to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 88,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2923,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A filename to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 85,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2926,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 2925,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Watermarks used to check coverage"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2927,
								2924,
								2923,
								2926,
								2925
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Coverage.ts",
							"line": 83,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2985,
							"name": "CoberturaCoverageProperties"
						},
						{
							"type": "reference",
							"id": 3038,
							"name": "HtmlCoverageProperties"
						},
						{
							"type": "reference",
							"id": 3248,
							"name": "TextCoverageProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2941,
							"name": "Cobertura"
						},
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						},
						{
							"type": "reference",
							"id": 2994,
							"name": "HtmlCoverage"
						},
						{
							"type": "reference",
							"id": 3047,
							"name": "JsonCoverage"
						},
						{
							"type": "reference",
							"id": 3160,
							"name": "LcovCoverage"
						},
						{
							"type": "reference",
							"id": 3257,
							"name": "Pretty"
						},
						{
							"type": "reference",
							"id": 3564,
							"name": "Runner"
						},
						{
							"type": "reference",
							"id": 3684,
							"name": "Simple"
						},
						{
							"type": "reference",
							"id": 3204,
							"name": "TextCoverage"
						}
					]
				},
				{
					"id": 2936,
					"name": "CoverageOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Coverage.ts",
							"line": 94,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 2922,
								"name": "CoverageProperties"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 2935,
					"name": "eventHandler",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Coverage.ts",
							"line": 13,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					},
					"defaultValue": "createEventHandler<NodeEvents>()"
				},
				{
					"id": 2937,
					"name": "isCoverageMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2938,
							"name": "isCoverageMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2939,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "CoverageMap"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Coverage.ts",
							"line": 96,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2879
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2928,
						2922
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2936
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2935
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2937
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Coverage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2446,
			"name": "\"lib/reporters/Dom\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Dom.ts",
			"children": [
				{
					"id": 2447,
					"name": "Dom",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Dom reporter outputs text into the DOM, essentially treating it like the\nconsole."
					},
					"children": [
						{
							"id": 2451,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2452,
									"name": "new Dom",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2453,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 2454,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2500,
												"name": "DomOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2447,
										"name": "Dom"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 16,
									"character": 36
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							}
						},
						{
							"id": 2473,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 2477,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2478,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 2479,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2480,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 2474,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 2475,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 2476,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 2448,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLDocument"
							}
						},
						{
							"id": 2472,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 11,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							}
						},
						{
							"id": 2449,
							"name": "suiteNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 2450,
							"name": "testNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 2481,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2482,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 2483,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2484,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 2485,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2486,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 2487,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2488,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 2493,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2494,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 2455,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2456,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2457,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 25,
									"character": 7
								}
							]
						},
						{
							"id": 2489,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2490,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2491,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2492,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 2458,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2459,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2460,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 34,
									"character": 10
								}
							]
						},
						{
							"id": 2461,
							"name": "suiteStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2462,
									"name": "suiteStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2463,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 55,
									"character": 12
								}
							]
						},
						{
							"id": 2464,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2465,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2466,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 75,
									"character": 9
								}
							]
						},
						{
							"id": 2467,
							"name": "testStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2468,
									"name": "testStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2469,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 110,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2451
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2473,
								2477,
								2474,
								2475,
								2476,
								2448,
								2472,
								2449,
								2450
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2481,
								2485
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2493,
								2455,
								2489,
								2458,
								2461,
								2464,
								2467
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Dom.ts",
							"line": 11,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					]
				},
				{
					"id": 2495,
					"name": "DomProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2499,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 2496,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							}
						},
						{
							"id": 2498,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 2497,
							"name": "suiteNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Dom.ts",
									"line": 128,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2499,
								2496,
								2498,
								2497
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Dom.ts",
							"line": 126,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					]
				},
				{
					"id": 2500,
					"name": "DomOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Dom.ts",
							"line": 131,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 2495,
								"name": "DomProperties"
							}
						],
						"name": "Partial"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2447
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2495
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2500
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Dom.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2331,
			"name": "\"lib/reporters/Html\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Html.ts",
			"children": [
				{
					"id": 2332,
					"name": "Html",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Html reporter displays an HTML report in the browser."
					},
					"children": [
						{
							"id": 2350,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2351,
									"name": "new Html",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2352,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 2353,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2415,
												"name": "HtmlOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2332,
										"name": "Html"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 60,
									"character": 37
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							}
						},
						{
							"id": 2388,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 2392,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2393,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 2394,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2395,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 2389,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 2347,
							"name": "_fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 56,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "DocumentFragment"
							}
						},
						{
							"id": 2390,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 2348,
							"name": "_indentLevel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 58,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 2391,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 2345,
							"name": "_passedFilter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 53,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": "null"
						},
						{
							"id": 2344,
							"name": "_processedTests",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 51,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2335,
							"name": "_reportContainer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 24,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Element"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 2336,
							"name": "_reportControls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 27,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Element"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 2337,
							"name": "_reportNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 30,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Element"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 2349,
							"name": "_runningSuites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 60,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2346,
							"name": "_skippedFilter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 54,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": "null"
						},
						{
							"id": 2340,
							"name": "_suiteCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 39,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 2338,
							"name": "_summaryNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 33,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Element"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 2339,
							"name": "_summaryNodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 36,
									"character": 25
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Element"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 2341,
							"name": "_testCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 42,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 2343,
							"name": "_testIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 48,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 2342,
							"name": "_testsInSuite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 45,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 2333,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2411,
								"name": "HtmlProperties.document"
							}
						},
						{
							"id": 2387,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 11,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							}
						},
						{
							"id": 2334,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 22,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Location"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2412,
								"name": "HtmlProperties.location"
							}
						},
						{
							"id": 2396,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2397,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 2398,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2399,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2414,
								"name": "HtmlProperties.console"
							}
						},
						{
							"id": 2400,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2401,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 2402,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2403,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2413,
								"name": "HtmlProperties.output"
							}
						},
						{
							"id": 2354,
							"name": "_generateSummary",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2355,
									"name": "_generateSummary",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generate the summary header at the top of the report."
									},
									"parameters": [
										{
											"id": 2356,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The root suite of the test session\n"
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 74,
									"character": 28
								}
							]
						},
						{
							"id": 2363,
							"name": "_getIndentLevel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2364,
									"name": "_getIndentLevel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2365,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 159,
									"character": 27
								}
							]
						},
						{
							"id": 2361,
							"name": "_injectCSS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2362,
									"name": "_injectCSS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 145,
									"character": 22
								}
							]
						},
						{
							"id": 2408,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2409,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 2366,
							"name": "_setCollapsed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2367,
									"name": "_setCollapsed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Set the collapsed state of a node and return the new state."
									},
									"parameters": [
										{
											"id": 2368,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A suite node"
											},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										},
										{
											"id": 2369,
											"name": "shouldCollapse",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 178,
									"character": 25
								}
							]
						},
						{
							"id": 2370,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2371,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2372,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 221,
									"character": 7
								}
							]
						},
						{
							"id": 2404,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2405,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2406,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2407,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 2373,
							"name": "runStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2374,
									"name": "runStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 237,
									"character": 10
								}
							]
						},
						{
							"id": 2378,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2379,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2380,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 463,
									"character": 10
								}
							]
						},
						{
							"id": 2375,
							"name": "suiteStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2376,
									"name": "suiteStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2377,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 418,
									"character": 12
								}
							]
						},
						{
							"id": 2381,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 2382,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2383,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 601,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2350
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2388,
								2392,
								2389,
								2347,
								2390,
								2348,
								2391,
								2345,
								2344,
								2335,
								2336,
								2337,
								2349,
								2346,
								2340,
								2338,
								2339,
								2341,
								2343,
								2342,
								2333,
								2387,
								2334
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2396,
								2400
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2354,
								2363,
								2361,
								2408,
								2366,
								2370,
								2404,
								2373,
								2378,
								2375,
								2381
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 19,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2410,
							"name": "HtmlProperties"
						}
					]
				},
				{
					"id": 2410,
					"name": "HtmlProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2414,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 2411,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 698,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							}
						},
						{
							"id": 2412,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Html.ts",
									"line": 699,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Location"
							}
						},
						{
							"id": 2413,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2414,
								2411,
								2412,
								2413
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 697,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2332,
							"name": "Html"
						}
					]
				},
				{
					"id": 2415,
					"name": "HtmlOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 702,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 2410,
								"name": "HtmlProperties"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 2420,
					"name": "addClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2421,
							"name": "addClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2422,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								},
								{
									"id": 2423,
									"name": "cls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 709,
							"character": 17
						}
					]
				},
				{
					"id": 2416,
					"name": "containsClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2417,
							"name": "containsClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2418,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								},
								{
									"id": 2419,
									"name": "cls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 704,
							"character": 22
						}
					]
				},
				{
					"id": 2442,
					"name": "createSvgNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2443,
							"name": "createSvgNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2444,
									"name": "svg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2445,
									"name": "extraClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 778,
							"character": 22
						}
					]
				},
				{
					"id": 2439,
					"name": "formatDuration",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2440,
							"name": "formatDuration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2441,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 759,
							"character": 23
						}
					]
				},
				{
					"id": 2428,
					"name": "getClassName",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2429,
							"name": "getClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2430,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 738,
							"character": 21
						}
					]
				},
				{
					"id": 2435,
					"name": "pad",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2436,
							"name": "pad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2437,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2438,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 746,
							"character": 12
						}
					]
				},
				{
					"id": 2424,
					"name": "removeClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2425,
							"name": "removeClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2426,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								},
								{
									"id": 2427,
									"name": "cls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 723,
							"character": 20
						}
					]
				},
				{
					"id": 2431,
					"name": "setClassName",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2432,
							"name": "setClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2433,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								},
								{
									"id": 2434,
									"name": "cls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Html.ts",
							"line": 742,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2332
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2410
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2415
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2420,
						2416,
						2442,
						2439,
						2428,
						2435,
						2424,
						2431
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Html.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2993,
			"name": "\"lib/reporters/HtmlCoverage\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/HtmlCoverage.ts",
			"children": [
				{
					"id": 2994,
					"name": "HtmlCoverage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2997,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2998,
									"name": "new HtmlCoverage",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2999,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 3000,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3045,
												"name": "HtmlCoverageOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2994,
										"name": "HtmlCoverage"
									},
									"overwrites": {
										"type": "reference",
										"id": 2885,
										"name": "Coverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
									"line": 7,
									"character": 31
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2885,
								"name": "Coverage.__constructor"
							}
						},
						{
							"id": 3016,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3020,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3021,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3022,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3023,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3017,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3018,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3019,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3008,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3041,
								"name": "HtmlCoverageProperties.directory"
							}
						},
						{
							"id": 3006,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 3007,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3040,
								"name": "HtmlCoverageProperties.filename"
							}
						},
						{
							"id": 2995,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
									"line": 6,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"html\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							}
						},
						{
							"id": 2996,
							"name": "verbose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
									"line": 7,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 3039,
								"name": "HtmlCoverageProperties.verbose"
							}
						},
						{
							"id": 3009,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3042,
								"name": "HtmlCoverageProperties.watermarks"
							}
						},
						{
							"id": 3024,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3025,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3026,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3027,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3044,
								"name": "HtmlCoverageProperties.console"
							}
						},
						{
							"id": 3028,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3029,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3030,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3031,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3043,
								"name": "HtmlCoverageProperties.output"
							}
						},
						{
							"id": 3036,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3037,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3010,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3011,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3012,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 3013,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 3032,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3033,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3034,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3035,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3001,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3002,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3003,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3004,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3005,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
													"line": 17,
													"character": 23
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
									"line": 17,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							}
						},
						{
							"id": 3014,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3015,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 73,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2997
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3016,
								3020,
								3017,
								3018,
								3019,
								3008,
								3006,
								3007,
								2995,
								2996,
								3009
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3024,
								3028
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3036,
								3010,
								3032,
								3001,
								3014
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
							"line": 4,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						},
						{
							"type": "reference",
							"id": 3038,
							"name": "HtmlCoverageProperties"
						}
					]
				},
				{
					"id": 3038,
					"name": "HtmlCoverageProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3044,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 3041,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direcotry to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 88,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 3040,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A filename to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 85,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 3043,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 3039,
							"name": "verbose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
									"line": 27,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3042,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Watermarks used to check coverage"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3044,
								3041,
								3040,
								3043,
								3039,
								3042
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
							"line": 26,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2994,
							"name": "HtmlCoverage"
						}
					]
				},
				{
					"id": 3045,
					"name": "HtmlCoverageOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
							"line": 30,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 3038,
								"name": "HtmlCoverageProperties"
							}
						],
						"name": "Partial"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2994
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3038
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3045
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/HtmlCoverage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3090,
			"name": "\"lib/reporters/JUnit\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/JUnit.ts",
			"children": [
				{
					"id": 3091,
					"name": "JUnit",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "There is no formal spec for this format and everyone does it differently, so\ngood luck! We've mashed as many of the different incompatible JUnit/xUnit\nXSDs as possible into one reporter."
					},
					"children": [
						{
							"id": 3093,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3094,
									"name": "new JUnit",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3095,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 3096,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3122,
														"name": "JUnitProperties"
													}
												],
												"name": "Partial"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3091,
										"name": "JUnit"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 16,
									"character": 40
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							}
						},
						{
							"id": 3100,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3104,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3105,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3106,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3107,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3101,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3102,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3103,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3099,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 11,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							}
						},
						{
							"id": 3092,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3108,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3109,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3110,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3111,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 3112,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3113,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3114,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3115,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 3120,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3121,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3116,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3117,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3118,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3119,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3097,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3098,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 30,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3093
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3100,
								3104,
								3101,
								3102,
								3103,
								3099,
								3092
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3108,
								3112
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3120,
								3116,
								3097
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/JUnit.ts",
							"line": 15,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					]
				},
				{
					"id": 3126,
					"name": "XmlNode",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Simple XML generator.",
						"tags": [
							{
								"tag": "param",
								"text": "The node name.",
								"param": "nodeName"
							},
							{
								"tag": "param",
								"text": "Optional attributes.\n",
								"param": "attributes"
							}
						]
					},
					"children": [
						{
							"id": 3130,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3131,
									"name": "new XmlNode",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3132,
											"name": "nodeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3133,
											"name": "attributes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3126,
										"name": "XmlNode"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 54,
									"character": 18
								}
							]
						},
						{
							"id": 3129,
							"name": "attributes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 54,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3128,
							"name": "childNodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 53,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 3127,
							"name": "nodeName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 52,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 3138,
							"name": "_escape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3139,
									"name": "_escape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3140,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 80,
									"character": 9
								}
							]
						},
						{
							"id": 3141,
							"name": "_serializeAttributes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3142,
									"name": "_serializeAttributes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 87,
									"character": 22
								}
							]
						},
						{
							"id": 3143,
							"name": "_serializeContent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3144,
									"name": "_serializeContent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 100,
									"character": 19
								}
							]
						},
						{
							"id": 3134,
							"name": "createNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3135,
									"name": "createNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new XML node and pushes it to the end of the current node.",
										"returns": "A new node.\n"
									},
									"parameters": [
										{
											"id": 3136,
											"name": "nodeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The node name for the new node."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3137,
											"name": "attributes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Optional attributes for the new node."
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3126,
										"name": "XmlNode"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 74,
									"character": 12
								}
							]
						},
						{
							"id": 3145,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3146,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Outputs the node as a serialised XML string."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 117,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3130
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3129,
								3128,
								3127
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3138,
								3141,
								3143,
								3134,
								3145
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/JUnit.ts",
							"line": 51,
							"character": 13
						}
					]
				},
				{
					"id": 3122,
					"name": "JUnitProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3125,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 3123,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JUnit.ts",
									"line": 42,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3124,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3125,
								3123,
								3124
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/JUnit.ts",
							"line": 41,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					]
				},
				{
					"id": 3147,
					"name": "createChildErrorNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3148,
							"name": "createChildErrorNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3149,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error"
									}
								},
								{
									"id": 3150,
									"name": "reporter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3091,
										"name": "JUnit"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3126,
								"name": "XmlNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/JUnit.ts",
							"line": 129,
							"character": 29
						}
					]
				},
				{
					"id": 3151,
					"name": "createSuiteNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3152,
							"name": "createSuiteNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3153,
									"name": "suite",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 270,
										"name": "Suite"
									}
								},
								{
									"id": 3154,
									"name": "reporter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3091,
										"name": "JUnit"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3126,
								"name": "XmlNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/JUnit.ts",
							"line": 137,
							"character": 24
						}
					]
				},
				{
					"id": 3155,
					"name": "createTestNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3156,
							"name": "createTestNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3157,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 270,
												"name": "Suite"
											},
											{
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										]
									}
								},
								{
									"id": 3158,
									"name": "reporter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3091,
										"name": "JUnit"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3126,
								"name": "XmlNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/JUnit.ts",
							"line": 160,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3091,
						3126
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3122
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3147,
						3151,
						3155
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/JUnit.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3046,
			"name": "\"lib/reporters/JsonCoverage\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/JsonCoverage.ts",
			"children": [
				{
					"id": 3047,
					"name": "JsonCoverage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3053,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3054,
									"name": "new JsonCoverage",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3055,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 3056,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2936,
												"name": "CoverageOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3047,
										"name": "JsonCoverage"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2885,
										"name": "Coverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2885,
								"name": "Coverage.__constructor"
							}
						},
						{
							"id": 3068,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3072,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3073,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3074,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3075,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3069,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3070,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3071,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3051,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 3049,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 3050,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 3048,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/JsonCoverage.ts",
									"line": 4,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"json\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							}
						},
						{
							"id": 3052,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						},
						{
							"id": 3076,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3077,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3078,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3079,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2927,
								"name": "CoverageProperties.console"
							}
						},
						{
							"id": 3080,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3081,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3082,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3083,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2926,
								"name": "CoverageProperties.output"
							}
						},
						{
							"id": 3088,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3089,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3062,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3063,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3064,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 3065,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 3084,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3085,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3086,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3087,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3057,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3058,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3059,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3060,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3061,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Coverage.ts",
													"line": 38,
													"character": 23
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 38,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							}
						},
						{
							"id": 3066,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3067,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 73,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3053
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3068,
								3072,
								3069,
								3070,
								3071,
								3051,
								3049,
								3050,
								3048,
								3052
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3076,
								3080
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3088,
								3062,
								3084,
								3057,
								3066
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/JsonCoverage.ts",
							"line": 3,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3047
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/JsonCoverage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3159,
			"name": "\"lib/reporters/Lcov\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Lcov.ts",
			"children": [
				{
					"id": 3160,
					"name": "LcovCoverage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3166,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3167,
									"name": "new LcovCoverage",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3168,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 3169,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2936,
												"name": "CoverageOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3160,
										"name": "LcovCoverage"
									},
									"overwrites": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2885,
										"name": "Coverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2885,
								"name": "Coverage.__constructor"
							}
						},
						{
							"id": 3181,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3185,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3186,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3187,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3188,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3182,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3183,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3184,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3164,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 3162,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 3163,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 3161,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Lcov.ts",
									"line": 4,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"lcovonly\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							}
						},
						{
							"id": 3165,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						},
						{
							"id": 3189,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3190,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3191,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3192,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2927,
								"name": "CoverageProperties.console"
							}
						},
						{
							"id": 3193,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3194,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3195,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3196,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2926,
								"name": "CoverageProperties.output"
							}
						},
						{
							"id": 3201,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3202,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3175,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3176,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3177,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 3178,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 3197,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3198,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3199,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3200,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3170,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3171,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3172,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3173,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3174,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Coverage.ts",
													"line": 38,
													"character": 23
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 38,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							}
						},
						{
							"id": 3179,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3180,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 73,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3166
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3181,
								3185,
								3182,
								3183,
								3184,
								3164,
								3162,
								3163,
								3161,
								3165
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3189,
								3193
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3201,
								3175,
								3197,
								3170,
								3179
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Lcov.ts",
							"line": 3,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3160
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Lcov.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3256,
			"name": "\"lib/reporters/Pretty\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Pretty.ts",
			"children": [
				{
					"id": 3413,
					"name": "Result",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3416,
							"name": "FAIL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 510,
									"character": 6
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3414,
							"name": "PASS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 508,
									"character": 6
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3415,
							"name": "SKIP",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 509,
									"character": 6
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3416,
								3414,
								3415
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 507,
							"character": 18
						}
					]
				},
				{
					"id": 3257,
					"name": "Pretty",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Handles presentation of runner results to the user"
					},
					"children": [
						{
							"id": 3273,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3274,
									"name": "new Pretty",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3275,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 3276,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3421,
												"name": "PrettyOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3257,
										"name": "Pretty"
									},
									"overwrites": {
										"type": "reference",
										"id": 3207,
										"name": "TextCoverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 33,
									"character": 53
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3207,
								"name": "TextCoverage.__constructor"
							}
						},
						{
							"id": 3271,
							"name": "_charm",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 32,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "CharmInstance"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3351,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3355,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3356,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3357,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3358,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3352,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3353,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3266,
							"name": "_header",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 27,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3267,
							"name": "_log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 28,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3354,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3272,
							"name": "_renderTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 33,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Timer"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3268,
							"name": "_reports",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 29,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3269,
							"name": "_spinnerOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 30,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3270,
							"name": "_total",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 31,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3387,
								"name": "Report"
							}
						},
						{
							"id": 3258,
							"name": "colorReplacement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 21,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3259,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 3260,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3261,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Pretty.ts",
											"line": 21,
											"character": 19
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 3374,
								"name": "PrettyProperties.colorReplacement"
							}
						},
						{
							"id": 3262,
							"name": "dimensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3378,
								"name": "PrettyProperties.dimensions"
							}
						},
						{
							"id": 3345,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3383,
								"name": "PrettyProperties.directory"
							}
						},
						{
							"id": 3343,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 3344,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3382,
								"name": "PrettyProperties.filename"
							}
						},
						{
							"id": 3337,
							"name": "maxColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 7,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3206,
								"name": "TextCoverage.maxColumns"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3381,
								"name": "PrettyProperties.maxColumns"
							}
						},
						{
							"id": 3264,
							"name": "maxProgressBarWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 24,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3379,
								"name": "PrettyProperties.maxProgressBarWidth"
							}
						},
						{
							"id": 3336,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 6,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"text\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3205,
								"name": "TextCoverage.reportType"
							}
						},
						{
							"id": 3263,
							"name": "titleWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3380,
								"name": "PrettyProperties.titleWidth"
							}
						},
						{
							"id": 3265,
							"name": "tunnelState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 25,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3346,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3384,
								"name": "PrettyProperties.watermarks"
							}
						},
						{
							"id": 3359,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3360,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3361,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3362,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3386,
								"name": "PrettyProperties.console"
							}
						},
						{
							"id": 3363,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3364,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3365,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3366,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3385,
								"name": "PrettyProperties.output"
							}
						},
						{
							"id": 3371,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3372,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3277,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3278,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 62,
									"character": 7
								}
							]
						},
						{
							"id": 3283,
							"name": "coverage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3284,
									"name": "coverage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3285,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1438,
												"name": "CoverageMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 133,
									"character": 10
								}
							]
						},
						{
							"id": 3347,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3348,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3349,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 3350,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 3304,
							"name": "deprecated",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3305,
									"name": "deprecated",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3306,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1442,
												"name": "DeprecationMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 206,
									"character": 12
								}
							]
						},
						{
							"id": 3301,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3302,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3303,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 198,
									"character": 7
								}
							]
						},
						{
							"id": 3367,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3368,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3369,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3370,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3338,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3339,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3340,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3341,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3342,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
													"line": 17,
													"character": 23
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3211,
										"name": "TextCoverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 17,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3211,
								"name": "TextCoverage.getReporterOptions"
							}
						},
						{
							"id": 3281,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3282,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 90,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						},
						{
							"id": 3279,
							"name": "runStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3280,
									"name": "runStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 69,
									"character": 10
								}
							]
						},
						{
							"id": 3289,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3290,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3291,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 157,
									"character": 10
								}
							]
						},
						{
							"id": 3286,
							"name": "suiteStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3287,
									"name": "suiteStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3288,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 140,
									"character": 12
								}
							]
						},
						{
							"id": 3292,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3293,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3294,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 169,
									"character": 9
								}
							]
						},
						{
							"id": 3295,
							"name": "tunnelDownloadProgress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3296,
									"name": "tunnelDownloadProgress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3297,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4538,
												"name": "TunnelMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 184,
									"character": 24
								}
							]
						},
						{
							"id": 3298,
							"name": "tunnelStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3299,
									"name": "tunnelStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3300,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4538,
												"name": "TunnelMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 193,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3273
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3271,
								3351,
								3355,
								3352,
								3353,
								3266,
								3267,
								3354,
								3272,
								3268,
								3269,
								3270,
								3258,
								3262,
								3345,
								3343,
								3344,
								3337,
								3264,
								3336,
								3263,
								3265,
								3346
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3359,
								3363
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3371,
								3277,
								3283,
								3347,
								3304,
								3301,
								3367,
								3338,
								3281,
								3279,
								3289,
								3286,
								3292,
								3295,
								3298
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 20,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3204,
							"name": "TextCoverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						},
						{
							"type": "reference",
							"id": 3248,
							"name": "TextCoverageProperties"
						},
						{
							"type": "reference",
							"id": 3373,
							"name": "PrettyProperties"
						}
					]
				},
				{
					"id": 3387,
					"name": "Report",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Model tracking test results",
						"tags": [
							{
								"tag": "param",
								"text": "the environment associated with the report",
								"param": "environment"
							},
							{
								"tag": "param",
								"text": "the sessionId associated with the report\n",
								"param": "sessionId"
							}
						]
					},
					"children": [
						{
							"id": 3400,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3401,
									"name": "new Report",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3402,
											"name": "environment",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1749,
												"name": "Environment"
											}
										},
										{
											"id": 3403,
											"name": "sessionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3387,
										"name": "Report"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 459,
									"character": 27
								}
							]
						},
						{
							"id": 3399,
							"name": "coverageMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 459,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CoverageMap"
							}
						},
						{
							"id": 3388,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 451,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1749,
										"name": "Environment"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3392,
							"name": "numFailed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 455,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 3391,
							"name": "numPassed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 454,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 3393,
							"name": "numSkipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 456,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 3390,
							"name": "numTotal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 453,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 3394,
							"name": "results",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 457,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 3389,
							"name": "sessionId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 452,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3395,
							"name": "suiteInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 458,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3396,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 3397,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3398,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 3417,
												"name": "SuiteInfo"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Pretty.ts",
											"line": 458,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 3404,
							"name": "finished",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3405,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 468,
									"character": 14
								}
							]
						},
						{
							"id": 3410,
							"name": "getCompressedResults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3411,
									"name": "getCompressedResults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3412,
											"name": "maxWidth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 490,
									"character": 22
								}
							]
						},
						{
							"id": 3406,
							"name": "record",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3407,
									"name": "record",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3408,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3413,
												"name": "Result"
											}
										},
										{
											"id": 3409,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 472,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3400
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3399,
								3388,
								3392,
								3391,
								3393,
								3390,
								3394,
								3389,
								3395
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3404
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3410,
								3406
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 450,
							"character": 19
						}
					]
				},
				{
					"id": 3373,
					"name": "PrettyProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3374,
							"name": "colorReplacement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 437,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3375,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 3376,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3377,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Pretty.ts",
											"line": 437,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 3386,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 3378,
							"name": "dimensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 438,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3383,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direcotry to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 88,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 3382,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A filename to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 85,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 3381,
							"name": "maxColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of columns"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 28,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3249,
								"name": "TextCoverageProperties.maxColumns"
							}
						},
						{
							"id": 3379,
							"name": "maxProgressBarWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 439,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3385,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 3380,
							"name": "titleWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 440,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3384,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Watermarks used to check coverage"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3374,
								3386,
								3378,
								3383,
								3382,
								3381,
								3379,
								3385,
								3380,
								3384
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 436,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3248,
							"name": "TextCoverageProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 3257,
							"name": "Pretty"
						}
					]
				},
				{
					"id": 3417,
					"name": "SuiteInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3419,
							"name": "numToReport",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 515,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3418,
							"name": "parentId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 514,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3419,
								3418
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 513,
							"character": 26
						}
					]
				},
				{
					"id": 3421,
					"name": "PrettyOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 443,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 3373,
								"name": "PrettyProperties"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 3423,
					"name": "PAD",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 519,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "new Array(100).join(' ')"
				},
				{
					"id": 3424,
					"name": "SPINNER_STATES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 520,
							"character": 20
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "['/', '-', '\\\\', '|']"
				},
				{
					"id": 3420,
					"name": "eventHandler",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 15,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					},
					"defaultValue": "createEventHandler<NodeEvents>()"
				},
				{
					"id": 3422,
					"name": "symbols",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 518,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "['✓', '~', '×']"
				},
				{
					"id": 3435,
					"name": "fit",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3436,
							"name": "fit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3437,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 3438,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3439,
									"name": "padLeft",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 534,
							"character": 12
						}
					]
				},
				{
					"id": 3432,
					"name": "pad",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3433,
							"name": "pad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3434,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 530,
							"character": 12
						}
					]
				},
				{
					"id": 3425,
					"name": "BROWSERS",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 3426,
							"name": "chrome",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 522,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Chr\""
						},
						{
							"id": 3427,
							"name": "firefox",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 523,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Fx\""
						},
						{
							"id": 3430,
							"name": "internet explorer",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 526,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"IE\""
						},
						{
							"id": 3428,
							"name": "opera",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 524,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"O\""
						},
						{
							"id": 3431,
							"name": "phantomjs",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 527,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Phan\""
						},
						{
							"id": 3429,
							"name": "safari",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Pretty.ts",
									"line": 525,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Saf\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								3426,
								3427,
								3430,
								3428,
								3431,
								3429
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Pretty.ts",
							"line": 521,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						3413
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3257,
						3387
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3373,
						3417
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3421
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3423,
						3424,
						3420,
						3422
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3435,
						3432
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						3425
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Pretty.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1489,
			"name": "\"lib/reporters/Reporter\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Reporter.ts",
			"children": [
				{
					"id": 1490,
					"name": "Reporter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This is a base class for reporters that provides convenienience features such\nas event handler registration and a default console."
					},
					"children": [
						{
							"id": 1500,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1501,
									"name": "new Reporter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1502,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 1503,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1537,
												"name": "ReporterOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1490,
										"name": "Reporter"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 72
								}
							]
						},
						{
							"id": 1492,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1496,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1497,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 1498,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1499,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1493,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1494,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1495,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1491,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 11,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							}
						},
						{
							"id": 1504,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1505,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									}
								}
							],
							"setSignature": [
								{
									"id": 1506,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1507,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 1508,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1509,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									}
								}
							],
							"setSignature": [
								{
									"id": 1510,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1511,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 1516,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1517,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							]
						},
						{
							"id": 1512,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1513,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1514,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1515,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1500
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1492,
								1496,
								1493,
								1494,
								1495,
								1491
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1504,
								1508
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1516,
								1512
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 10,
							"character": 29
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1543,
							"name": "BenchmarkReporter"
						},
						{
							"type": "reference",
							"id": 2332,
							"name": "Html"
						},
						{
							"type": "reference",
							"id": 2447,
							"name": "Dom"
						},
						{
							"type": "reference",
							"id": 2502,
							"name": "ConsoleReporter"
						},
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						},
						{
							"type": "reference",
							"id": 3091,
							"name": "JUnit"
						},
						{
							"type": "reference",
							"id": 3741,
							"name": "TeamCity"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					]
				},
				{
					"id": 1521,
					"name": "ReporterOutput",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A stream that reporters can write to"
					},
					"children": [
						{
							"id": 1527,
							"name": "end",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1528,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1529,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 1530,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1531,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 154,
									"character": 5
								}
							]
						},
						{
							"id": 1522,
							"name": "write",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1523,
									"name": "write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1524,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 1525,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1526,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 153,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1527,
								1522
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 152,
							"character": 31
						}
					]
				},
				{
					"id": 1518,
					"name": "ReporterProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1520,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							}
						},
						{
							"id": 1519,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1520,
								1519
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 142,
							"character": 35
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1637,
							"name": "BenchmarkReporterProperties"
						},
						{
							"type": "reference",
							"id": 2410,
							"name": "HtmlProperties"
						},
						{
							"type": "reference",
							"id": 2495,
							"name": "DomProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						},
						{
							"type": "reference",
							"id": 3122,
							"name": "JUnitProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1543,
							"name": "BenchmarkReporter"
						},
						{
							"type": "reference",
							"id": 2941,
							"name": "Cobertura"
						},
						{
							"type": "reference",
							"id": 2502,
							"name": "ConsoleReporter"
						},
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						},
						{
							"type": "reference",
							"id": 2447,
							"name": "Dom"
						},
						{
							"type": "reference",
							"id": 2332,
							"name": "Html"
						},
						{
							"type": "reference",
							"id": 2994,
							"name": "HtmlCoverage"
						},
						{
							"type": "reference",
							"id": 3091,
							"name": "JUnit"
						},
						{
							"type": "reference",
							"id": 3047,
							"name": "JsonCoverage"
						},
						{
							"type": "reference",
							"id": 3160,
							"name": "LcovCoverage"
						},
						{
							"type": "reference",
							"id": 3257,
							"name": "Pretty"
						},
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						},
						{
							"type": "reference",
							"id": 3564,
							"name": "Runner"
						},
						{
							"type": "reference",
							"id": 3684,
							"name": "Simple"
						},
						{
							"type": "reference",
							"id": 3741,
							"name": "TeamCity"
						},
						{
							"type": "reference",
							"id": 3204,
							"name": "TextCoverage"
						}
					]
				},
				{
					"id": 1537,
					"name": "ReporterOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 147,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1518,
								"name": "ReporterProperties"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 1536,
					"name": "eventHandler",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "The default event handler decorator."
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 140,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					},
					"defaultValue": "createEventHandler()"
				},
				{
					"id": 1532,
					"name": "createEventHandler",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1533,
							"name": "createEventHandler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Create a decorator that will add a decorated method to a class's list of\nevent handlers."
							},
							"typeParameter": [
								{
									"id": 1534,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1449,
										"name": "Events"
									}
								},
								{
									"id": 1535,
									"name": "N",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1488,
										"name": "NoDataEvents"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 100,
							"character": 34
						}
					]
				},
				{
					"id": 1538,
					"name": "getConsole",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1539,
							"name": "getConsole",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Console"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 157,
							"character": 19
						}
					]
				},
				{
					"id": 1540,
					"name": "noop",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1541,
							"name": "noop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Reporter.ts",
							"line": 178,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1490
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1521,
						1518
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1537
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1536
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1532,
						1538,
						1540
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Reporter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3563,
			"name": "\"lib/reporters/Runner\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Runner.ts",
			"children": [
				{
					"id": 3564,
					"name": "Runner",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3586,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3587,
									"name": "new Runner",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3588,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 3589,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3671,
														"name": "RunnerProperties"
													}
												],
												"name": "Partial"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "Runner"
									},
									"overwrites": {
										"type": "reference",
										"id": 3207,
										"name": "TextCoverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 37,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3207,
								"name": "TextCoverage.__constructor"
							}
						},
						{
							"id": 3649,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3653,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3654,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3655,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3656,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3650,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3651,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3652,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3585,
							"name": "charm",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 37,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 3681,
								"name": "Charm"
							}
						},
						{
							"id": 3643,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3677,
								"name": "RunnerProperties.directory"
							}
						},
						{
							"id": 3641,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 3642,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3676,
								"name": "RunnerProperties.filename"
							}
						},
						{
							"id": 3574,
							"name": "hasRunErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 27,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3575,
							"name": "hasSuiteErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 28,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3576,
							"name": "hidePassed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 3672,
								"name": "RunnerProperties.hidePassed"
							}
						},
						{
							"id": 3577,
							"name": "hideSkipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 3673,
								"name": "RunnerProperties.hideSkipped"
							}
						},
						{
							"id": 3578,
							"name": "hideTunnelDownloadProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 31,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3674,
								"name": "RunnerProperties.hideTunnelDownloadProgress"
							}
						},
						{
							"id": 3635,
							"name": "maxColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 7,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3206,
								"name": "TextCoverage.maxColumns"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3675,
								"name": "RunnerProperties.maxColumns"
							}
						},
						{
							"id": 3634,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 6,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"text\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3205,
								"name": "TextCoverage.reportType"
							}
						},
						{
							"id": 3579,
							"name": "serveOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 32,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3565,
							"name": "sessions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 19,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3566,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 3567,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3568,
													"name": "sessionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3569,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"indexSignature": [
														{
															"id": 3572,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 3573,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"children": [
														{
															"id": 3570,
															"name": "coverage",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/reporters/Runner.ts",
																	"line": 21,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "CoverageMap"
															}
														},
														{
															"id": 3571,
															"name": "suite",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/core/src/lib/reporters/Runner.ts",
																	"line": 22,
																	"character": 11
																}
															],
															"type": {
																"type": "reference",
																"id": 270,
																"name": "Suite"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3570,
																3571
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/core/src/lib/reporters/Runner.ts",
															"line": 20,
															"character": 24
														}
													]
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/lib/reporters/Runner.ts",
											"line": 19,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 3644,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3678,
								"name": "RunnerProperties.watermarks"
							}
						},
						{
							"id": 3657,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3658,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3659,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3660,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3680,
								"name": "RunnerProperties.console"
							}
						},
						{
							"id": 3661,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3662,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3663,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3664,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3679,
								"name": "RunnerProperties.output"
							}
						},
						{
							"id": 3669,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3670,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3628,
							"name": "charmWrite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3629,
									"name": "charmWrite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Write to Charm, prefixing the output with a newline if necessary."
									},
									"parameters": [
										{
											"id": 3630,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 352,
									"character": 12
								}
							]
						},
						{
							"id": 3631,
							"name": "charmWriteInline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3632,
									"name": "charmWriteInline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Write a message to Charm that doesn't end in a newline and that shouldn't\nbe prefixed with a newline."
									},
									"parameters": [
										{
											"id": 3633,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 364,
									"character": 18
								}
							]
						},
						{
							"id": 3590,
							"name": "coverage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3591,
									"name": "coverage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3592,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1438,
												"name": "CoverageMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 60,
									"character": 10
								}
							]
						},
						{
							"id": 3645,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3646,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3647,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 3648,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 3593,
							"name": "deprecated",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3594,
									"name": "deprecated",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3595,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1442,
												"name": "DeprecationMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 75,
									"character": 12
								}
							]
						},
						{
							"id": 3596,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3597,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3598,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 105,
									"character": 7
								}
							]
						},
						{
							"id": 3665,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3666,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3667,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3668,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3636,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3637,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3638,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3639,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3640,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
													"line": 17,
													"character": 23
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3211,
										"name": "TextCoverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 17,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3211,
								"name": "TextCoverage.getReporterOptions"
							}
						},
						{
							"id": 3602,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3603,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3604,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 125,
									"character": 5
								}
							]
						},
						{
							"id": 3605,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3606,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 132,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						},
						{
							"id": 3607,
							"name": "serverStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3608,
									"name": "serverStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3609,
											"name": "server",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3500,
												"name": "Server"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 192,
									"character": 13
								}
							]
						},
						{
							"id": 3610,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3611,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3612,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 208,
									"character": 10
								}
							]
						},
						{
							"id": 3613,
							"name": "suiteStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3614,
									"name": "suiteStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3615,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 274,
									"character": 12
								}
							]
						},
						{
							"id": 3616,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3617,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3618,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 291,
									"character": 9
								}
							]
						},
						{
							"id": 3619,
							"name": "tunnelDownloadProgress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3620,
									"name": "tunnelDownloadProgress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3621,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4538,
												"name": "TunnelMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 326,
									"character": 24
								}
							]
						},
						{
							"id": 3622,
							"name": "tunnelStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3623,
									"name": "tunnelStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3624,
											"name": "_",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4538,
												"name": "TunnelMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 340,
									"character": 13
								}
							]
						},
						{
							"id": 3625,
							"name": "tunnelStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3626,
									"name": "tunnelStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3627,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4538,
												"name": "TunnelMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 345,
									"character": 14
								}
							]
						},
						{
							"id": 3599,
							"name": "warning",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3600,
									"name": "warning",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3601,
											"name": "warning",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Error"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 115,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3586
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3649,
								3653,
								3650,
								3651,
								3652,
								3585,
								3643,
								3641,
								3642,
								3574,
								3575,
								3576,
								3577,
								3578,
								3635,
								3634,
								3579,
								3565,
								3644
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3657,
								3661
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3669,
								3628,
								3631,
								3590,
								3645,
								3593,
								3596,
								3665,
								3636,
								3602,
								3605,
								3607,
								3610,
								3613,
								3616,
								3619,
								3622,
								3625,
								3599
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Runner.ts",
							"line": 18,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3204,
							"name": "TextCoverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						},
						{
							"type": "reference",
							"id": 3248,
							"name": "TextCoverageProperties"
						},
						{
							"type": "reference",
							"id": 3671,
							"name": "RunnerProperties"
						}
					]
				},
				{
					"id": 3671,
					"name": "RunnerProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3680,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 3677,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direcotry to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 88,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 3676,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A filename to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 85,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 3672,
							"name": "hidePassed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 371,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3673,
							"name": "hideSkipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 372,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3674,
							"name": "hideTunnelDownloadProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Runner.ts",
									"line": 373,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3675,
							"name": "maxColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of columns"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 28,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3249,
								"name": "TextCoverageProperties.maxColumns"
							}
						},
						{
							"id": 3679,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 3678,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Watermarks used to check coverage"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3680,
								3677,
								3676,
								3672,
								3673,
								3674,
								3675,
								3679,
								3678
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Runner.ts",
							"line": 370,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3248,
							"name": "TextCoverageProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 3564,
							"name": "Runner"
						}
					]
				},
				{
					"id": 3681,
					"name": "Charm",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Runner.ts",
							"line": 14,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "CharmInstance"
					}
				},
				{
					"id": 3682,
					"name": "eventHandler",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Runner.ts",
							"line": 16,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					},
					"defaultValue": "createEventHandler<NodeEvents>()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3564
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3671
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3681
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3682
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Runner.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3683,
			"name": "\"lib/reporters/Simple\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/Simple.ts",
			"children": [
				{
					"id": 3684,
					"name": "Simple",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Simple reporter outputs to the terminal console."
					},
					"children": [
						{
							"id": 3699,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3700,
									"name": "new Simple",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3701,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 3702,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3255,
												"name": "TextCoverageOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3684,
										"name": "Simple"
									},
									"overwrites": {
										"type": "reference",
										"id": 2885,
										"name": "Coverage.__constructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3207,
										"name": "TextCoverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 7,
									"character": 33
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2885,
								"name": "Coverage.__constructor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3207,
								"name": "TextCoverage.__constructor"
							}
						},
						{
							"id": 3718,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3722,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3723,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3724,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3725,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3719,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3720,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3721,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3710,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3251,
								"name": "TextCoverageProperties.directory"
							}
						},
						{
							"id": 3708,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 3709,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3250,
								"name": "TextCoverageProperties.filename"
							}
						},
						{
							"id": 3698,
							"name": "maxColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 7,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3206,
								"name": "TextCoverage.maxColumns"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3249,
								"name": "TextCoverageProperties.maxColumns"
							}
						},
						{
							"id": 3697,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 6,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"text\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3205,
								"name": "TextCoverage.reportType"
							}
						},
						{
							"id": 3711,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3252,
								"name": "TextCoverageProperties.watermarks"
							}
						},
						{
							"id": 3726,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3727,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3728,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3729,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3254,
								"name": "TextCoverageProperties.console"
							}
						},
						{
							"id": 3730,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3731,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3732,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3733,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3253,
								"name": "TextCoverageProperties.output"
							}
						},
						{
							"id": 3738,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3739,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3712,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3713,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3714,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 3715,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 3685,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3686,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3687,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Simple.ts",
									"line": 11,
									"character": 7
								}
							]
						},
						{
							"id": 3734,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3735,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3736,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3737,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3703,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3704,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3705,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3706,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3707,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
													"line": 17,
													"character": 23
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3211,
										"name": "TextCoverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 17,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3211,
								"name": "TextCoverage.getReporterOptions"
							}
						},
						{
							"id": 3688,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3689,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3690,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Simple.ts",
									"line": 16,
									"character": 5
								}
							]
						},
						{
							"id": 3716,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3717,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 73,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						},
						{
							"id": 3691,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3692,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3693,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Simple.ts",
									"line": 23,
									"character": 10
								}
							]
						},
						{
							"id": 3694,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3695,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3696,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Simple.ts",
									"line": 45,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3699
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3718,
								3722,
								3719,
								3720,
								3721,
								3710,
								3708,
								3709,
								3698,
								3697,
								3711
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3726,
								3730
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3738,
								3712,
								3685,
								3734,
								3703,
								3688,
								3716,
								3691,
								3694
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/Simple.ts",
							"line": 9,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3204,
							"name": "TextCoverage"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						},
						{
							"type": "reference",
							"id": 3248,
							"name": "TextCoverageProperties"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3684
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/Simple.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3740,
			"name": "\"lib/reporters/TeamCity\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/TeamCity.ts",
			"children": [
				{
					"id": 3741,
					"name": "TeamCity",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This reporter enables Intern to interact with TeamCity.\nhttp://confluence.jetbrains.com/display/TCD8/Build+Script+Interaction+with+TeamCity",
						"text": "Portions of this module are based on functions from\nteamcity-service-messages:\nhttps://github.com/pifantastic/teamcity-service-messages.\n"
					},
					"children": [
						{
							"id": 3782,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3783,
									"name": "new TeamCity",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3784,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1220,
												"name": "Executor"
											}
										},
										{
											"id": 3785,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1537,
												"name": "ReporterOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3741,
										"name": "TeamCity"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1500,
										"name": "Reporter.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 72
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1500,
								"name": "Reporter.__constructor"
							}
						},
						{
							"id": 3774,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3778,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3779,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3780,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3781,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3775,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3776,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3742,
							"name": "_ignoredTestIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
									"line": 14,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3743,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3744,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3745,
															"name": "sessionId",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3746,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"indexSignature": [
																{
																	"id": 3747,
																	"name": "__index",
																	"kind": 8192,
																	"kindString": "Index signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 3748,
																			"name": "testId",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
																	"line": 15,
																	"character": 28
																}
															]
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
													"line": 15,
													"character": 5
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 3777,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3773,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 11,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 1220,
								"name": "Executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							}
						},
						{
							"id": 3786,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3787,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3788,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3789,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 3790,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3791,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3792,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3793,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 3798,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3799,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3794,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3795,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3796,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3797,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3749,
							"name": "runStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3750,
									"name": "runStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
									"line": 19,
									"character": 10
								}
							]
						},
						{
							"id": 3760,
							"name": "suiteEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3761,
									"name": "suiteEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3762,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
									"line": 71,
									"character": 10
								}
							]
						},
						{
							"id": 3757,
							"name": "suiteStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3758,
									"name": "suiteStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3759,
											"name": "suite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 270,
												"name": "Suite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
									"line": 62,
									"character": 12
								}
							]
						},
						{
							"id": 3754,
							"name": "testEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3755,
									"name": "testEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3756,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
									"line": 32,
									"character": 9
								}
							]
						},
						{
							"id": 3751,
							"name": "testStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3752,
									"name": "testStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3753,
											"name": "test",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 178,
												"name": "Test"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
									"line": 24,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3782
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3774,
								3778,
								3775,
								3776,
								3742,
								3777,
								3773
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3786,
								3790
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3798,
								3794,
								3749,
								3760,
								3757,
								3754,
								3751
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
							"line": 13,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1490,
							"name": "Reporter"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3741
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/TeamCity.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3203,
			"name": "\"lib/reporters/TextCoverage\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/TextCoverage.ts",
			"children": [
				{
					"id": 3204,
					"name": "TextCoverage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3207,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3208,
									"name": "new TextCoverage",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3209,
											"name": "executor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "Node"
											}
										},
										{
											"id": 3210,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 3255,
												"name": "TextCoverageOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3204,
										"name": "TextCoverage"
									},
									"overwrites": {
										"type": "reference",
										"id": 2885,
										"name": "Coverage.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 7,
									"character": 33
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2885,
								"name": "Coverage.__constructor"
							}
						},
						{
							"id": 3226,
							"name": "_console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Console"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "Reporter._console"
							}
						},
						{
							"id": 3230,
							"name": "_eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A mapping from event names to the names of methods on this object. This\nproperty should be defined on the class prototype. It is automatically\ncreated by the @eventHandler decorator."
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 23,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3231,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3232,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3233,
															"name": "eventName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/Reporter.ts",
													"line": 23,
													"character": 27
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "Reporter._eventHandlers"
							}
						},
						{
							"id": 3227,
							"name": "_executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1220,
										"name": "Executor"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "Reporter._executor"
							}
						},
						{
							"id": 3228,
							"name": "_handles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Handle"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "Reporter._handles"
							}
						},
						{
							"id": 3229,
							"name": "_output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "Reporter._output"
							}
						},
						{
							"id": 3218,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2883,
								"name": "Coverage.directory"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3251,
								"name": "TextCoverageProperties.directory"
							}
						},
						{
							"id": 3216,
							"name": "executor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "Node"
							},
							"overwrites": {
								"type": "reference",
								"id": 1491,
								"name": "Reporter.executor"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2881,
								"name": "Coverage.executor"
							}
						},
						{
							"id": 3217,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2882,
								"name": "Coverage.filename"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3250,
								"name": "TextCoverageProperties.filename"
							}
						},
						{
							"id": 3206,
							"name": "maxColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 7,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 3249,
								"name": "TextCoverageProperties.maxColumns"
							}
						},
						{
							"id": 3205,
							"name": "reportType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 6,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ReportType"
							},
							"defaultValue": "\"text\"",
							"overwrites": {
								"type": "reference",
								"id": 2880,
								"name": "Coverage.reportType"
							}
						},
						{
							"id": 3219,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2884,
								"name": "Coverage.watermarks"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3252,
								"name": "TextCoverageProperties.watermarks"
							}
						},
						{
							"id": 3234,
							"name": "console",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3235,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Console"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"setSignature": [
								{
									"id": 3236,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3237,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Console"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1504,
										"name": "Reporter.console"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 36,
									"character": 13
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 43,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "Reporter.console"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3254,
								"name": "TextCoverageProperties.console"
							}
						},
						{
							"id": 3238,
							"name": "output",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 3239,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1521,
										"name": "ReporterOutput"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"setSignature": [
								{
									"id": 3240,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3241,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1521,
												"name": "ReporterOutput"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1508,
										"name": "Reporter.output"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 47,
									"character": 12
								},
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 70,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "Reporter.output"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3253,
								"name": "TextCoverageProperties.output"
							}
						},
						{
							"id": 3246,
							"name": "_registerEventHandlers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3247,
									"name": "_registerEventHandlers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Register any handlers added to the class event handlers map"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1516,
										"name": "Reporter._registerEventHandlers"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 81,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "Reporter._registerEventHandlers"
							}
						},
						{
							"id": 3220,
							"name": "createCoverageReport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3221,
									"name": "createCoverageReport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3222,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "ReportType"
											}
										},
										{
											"id": 3223,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CoverageMapData"
													},
													{
														"type": "reference",
														"name": "CoverageMap"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2894,
										"name": "Coverage.createCoverageReport"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 44,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2894,
								"name": "Coverage.createCoverageReport"
							}
						},
						{
							"id": 3242,
							"name": "formatError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3243,
									"name": "formatError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3244,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3245,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 432,
												"name": "ErrorFormatOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1512,
										"name": "Reporter.formatError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 74,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "Reporter.formatError"
							}
						},
						{
							"id": 3211,
							"name": "getReporterOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3212,
									"name": "getReporterOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3213,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3214,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3215,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
													"line": 17,
													"character": 23
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2889,
										"name": "Coverage.getReporterOptions"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 17,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2889,
								"name": "Coverage.getReporterOptions"
							}
						},
						{
							"id": 3224,
							"name": "runEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "eventHandler",
									"type": {
										"type": "reference",
										"name": "eventHandler"
									},
									"arguments": {}
								}
							],
							"signatures": [
								{
									"id": 3225,
									"name": "runEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2898,
										"name": "Coverage.runEnd"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 73,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2898,
								"name": "Coverage.runEnd"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3207
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3226,
								3230,
								3227,
								3228,
								3229,
								3218,
								3216,
								3217,
								3206,
								3205,
								3219
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3234,
								3238
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3246,
								3220,
								3242,
								3211,
								3224
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
							"line": 4,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2879,
							"name": "Coverage"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3257,
							"name": "Pretty"
						},
						{
							"type": "reference",
							"id": 3564,
							"name": "Runner"
						},
						{
							"type": "reference",
							"id": 3684,
							"name": "Simple"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1518,
							"name": "ReporterProperties"
						},
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						},
						{
							"type": "reference",
							"id": 3248,
							"name": "TextCoverageProperties"
						}
					]
				},
				{
					"id": 3248,
					"name": "TextCoverageProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3254,
							"name": "console",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Console"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "ReporterProperties.console"
							}
						},
						{
							"id": 3251,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direcotry to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 88,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2924,
								"name": "CoverageProperties.directory"
							}
						},
						{
							"id": 3250,
							"name": "filename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A filename to write coverage data to"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 85,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2923,
								"name": "CoverageProperties.filename"
							}
						},
						{
							"id": 3249,
							"name": "maxColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of columns"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
									"line": 28,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 3253,
							"name": "output",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Reporter.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1521,
								"name": "ReporterOutput"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "ReporterProperties.output"
							}
						},
						{
							"id": 3252,
							"name": "watermarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Watermarks used to check coverage"
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/reporters/Coverage.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Watermarks"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2925,
								"name": "CoverageProperties.watermarks"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3254,
								3251,
								3250,
								3249,
								3253,
								3252
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
							"line": 26,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2922,
							"name": "CoverageProperties"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3373,
							"name": "PrettyProperties"
						},
						{
							"type": "reference",
							"id": 3671,
							"name": "RunnerProperties"
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 3257,
							"name": "Pretty"
						},
						{
							"type": "reference",
							"id": 3564,
							"name": "Runner"
						},
						{
							"type": "reference",
							"id": 3684,
							"name": "Simple"
						},
						{
							"type": "reference",
							"id": 3204,
							"name": "TextCoverage"
						}
					]
				},
				{
					"id": 3255,
					"name": "TextCoverageOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
							"line": 31,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 3248,
								"name": "TextCoverageProperties"
							}
						],
						"name": "Partial"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3204
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3248
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3255
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/TextCoverage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2324,
			"name": "\"lib/reporters/html/icons\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/reporters/html/icons.ts",
			"children": [
				{
					"id": 2327,
					"name": "failIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/html/icons.ts",
							"line": 28,
							"character": 21
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M6.576 6.576c-5.205 5.205-5.205 13.643 0 18.849s13.643 5.205 18.849-0c5.206-5.206 5.206-13.643 0-18.849s-13.643-5.205-18.849 0zM24.67 24.67c-4.781 4.781-12.56 4.781-17.341 0s-4.781-12.56 0-17.341c4.781-4.781 12.56-4.781 17.341 0s4.78 12.56-0 17.341z\" fill=\"#000000\"></path>\n<path d=\"M10.722 9.969l-0.754 0.754 5.278 5.278-5.253 5.253 0.754 0.754 5.253-5.253 5.253 5.253 0.754-0.754-5.253-5.253 5.278-5.278-0.754-0.754-5.278 5.278z\" fill=\"#000000\"></path>\n</svg>"
					},
					"defaultValue": "`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M6.576 6.576c-5.205 5.205-5.205 13.643 0 18.849s13.643 5.205 18.849-0c5.206-5.206 5.206-13.643 0-18.849s-13.643-5.205-18.849 0zM24.67 24.67c-4.781 4.781-12.56 4.781-17.341 0s-4.781-12.56 0-17.341c4.781-4.781 12.56-4.781 17.341 0s4.78 12.56-0 17.341z\" fill=\"#000000\"></path>\n<path d=\"M10.722 9.969l-0.754 0.754 5.278 5.278-5.253 5.253 0.754 0.754 5.253-5.253 5.253 5.253 0.754-0.754-5.253-5.253 5.278-5.278-0.754-0.754-5.278 5.278z\" fill=\"#000000\"></path>\n</svg>`"
				},
				{
					"id": 2326,
					"name": "passIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/html/icons.ts",
							"line": 17,
							"character": 21
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M16 2.672c-7.361 0-13.328 5.967-13.328 13.328s5.968 13.328 13.328 13.328c7.361 0 13.328-5.967 13.328-13.328s-5.967-13.328-13.328-13.328zM16 28.262c-6.761 0-12.262-5.501-12.262-12.262s5.5-12.262 12.262-12.262c6.761 0 12.262 5.501 12.262 12.262s-5.5 12.262-12.262 12.262z\" fill=\"#000000\"></path>\n<path d=\"M22.667 11.241l-8.559 8.299-2.998-2.998c-0.312-0.312-0.818-0.312-1.131 0s-0.312 0.818 0 1.131l3.555 3.555c0.156 0.156 0.361 0.234 0.565 0.234 0.2 0 0.401-0.075 0.556-0.225l9.124-8.848c0.317-0.308 0.325-0.814 0.018-1.131-0.309-0.318-0.814-0.325-1.131-0.018z\" fill=\"#000000\"></path>\n</svg>"
					},
					"defaultValue": "`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M16 2.672c-7.361 0-13.328 5.967-13.328 13.328s5.968 13.328 13.328 13.328c7.361 0 13.328-5.967 13.328-13.328s-5.967-13.328-13.328-13.328zM16 28.262c-6.761 0-12.262-5.501-12.262-12.262s5.5-12.262 12.262-12.262c6.761 0 12.262 5.501 12.262 12.262s-5.5 12.262-12.262 12.262z\" fill=\"#000000\"></path>\n<path d=\"M22.667 11.241l-8.559 8.299-2.998-2.998c-0.312-0.312-0.818-0.312-1.131 0s-0.312 0.818 0 1.131l3.555 3.555c0.156 0.156 0.361 0.234 0.565 0.234 0.2 0 0.401-0.075 0.556-0.225l9.124-8.848c0.317-0.308 0.325-0.814 0.018-1.131-0.309-0.318-0.814-0.325-1.131-0.018z\" fill=\"#000000\"></path>\n</svg>`"
				},
				{
					"id": 2329,
					"name": "skipIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/html/icons.ts",
							"line": 49,
							"character": 21
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M16 2.672c-7.362 0-13.328 5.966-13.328 13.328s5.966 13.328 13.328 13.328c7.362 0 13.328-5.966 13.328-13.328s-5.966-13.328-13.328-13.328zM16 28.262c-6.761 0-12.262-5.501-12.262-12.262s5.501-12.262 12.262-12.262c6.761 0 12.262 5.501 12.262 12.262s-5.501 12.262-12.262 12.262z\" fill=\"#000000\"></path>\n<path d=\"M9.105 15.467h13.826v1.066h-13.826v-1.066z\" fill=\"#000000\"></path>\n</svg>"
					},
					"defaultValue": "`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M16 2.672c-7.362 0-13.328 5.966-13.328 13.328s5.966 13.328 13.328 13.328c7.362 0 13.328-5.966 13.328-13.328s-5.966-13.328-13.328-13.328zM16 28.262c-6.761 0-12.262-5.501-12.262-12.262s5.501-12.262 12.262-12.262c6.761 0 12.262 5.501 12.262 12.262s-5.501 12.262-12.262 12.262z\" fill=\"#000000\"></path>\n<path d=\"M9.105 15.467h13.826v1.066h-13.826v-1.066z\" fill=\"#000000\"></path>\n</svg>`"
				},
				{
					"id": 2325,
					"name": "suitesIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/html/icons.ts",
							"line": 5,
							"character": 23
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M1.606 7.47v21.325h28.789v-21.325h-28.789zM29.328 27.729h-26.656v-19.192h26.656v19.192z\" fill=\"#000000\"></path>\n<path d=\"M3.738 5.338h24.524v1.066h-24.524v-1.066z\" fill=\"#000000\"></path>\n<path d=\"M5.871 3.205h20.259v1.066h-20.259v-1.066z\" fill=\"#000000\"></path>\n</svg>"
					},
					"defaultValue": "`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M1.606 7.47v21.325h28.789v-21.325h-28.789zM29.328 27.729h-26.656v-19.192h26.656v19.192z\" fill=\"#000000\"></path>\n<path d=\"M3.738 5.338h24.524v1.066h-24.524v-1.066z\" fill=\"#000000\"></path>\n<path d=\"M5.871 3.205h20.259v1.066h-20.259v-1.066z\" fill=\"#000000\"></path>\n</svg>`"
				},
				{
					"id": 2328,
					"name": "testsIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/html/icons.ts",
							"line": 39,
							"character": 22
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M18.726 3.773l-1.375 11.16h6.088l-10.165 13.293 1.376-11.16h-6.088l10.165-13.293zM20.265 0.006l-13.861 18.126h7.040l-1.709 13.861 13.861-18.126h-7.040l1.709-13.861z\" fill=\"#000000\"></path>\n</svg>"
					},
					"defaultValue": "`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M18.726 3.773l-1.375 11.16h6.088l-10.165 13.293 1.376-11.16h-6.088l10.165-13.293zM20.265 0.006l-13.861 18.126h7.040l-1.709 13.861 13.861-18.126h-7.040l1.709-13.861z\" fill=\"#000000\"></path>\n</svg>`"
				},
				{
					"id": 2330,
					"name": "timeIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/reporters/html/icons.ts",
							"line": 60,
							"character": 21
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M25.039 8.781l0.902-0.902 0.914 0.914 1.131-1.131-2.582-2.582-1.131 1.131 0.914 0.914-0.902 0.902c-1.999-1.833-4.607-3.008-7.485-3.195v-2.161h-1.599v2.161c-6.399 0.412-11.462 5.73-11.462 12.234 0 6.772 5.49 12.262 12.262 12.262s12.262-5.489 12.262-12.262c0-3.195-1.222-6.103-3.223-8.285zM16 28.262c-6.173 0-11.196-5.023-11.196-11.196s5.023-11.196 11.196-11.196 11.196 5.022 11.196 11.196c0 6.173-5.023 11.196-11.196 11.196z\" fill=\"#000000\"></path>\n<path d=\"M16.533 15.565v-7.029h-1.066v7.029c-0.62 0.221-1.066 0.806-1.066 1.502s0.447 1.281 1.066 1.502v2.23h1.066v-2.23c0.62-0.221 1.066-0.806 1.066-1.502s-0.447-1.281-1.066-1.502z\" fill=\"#000000\"></path>\n</svg>"
					},
					"defaultValue": "`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n<g id=\"icomoon-ignore\">\n</g>\n<path d=\"M25.039 8.781l0.902-0.902 0.914 0.914 1.131-1.131-2.582-2.582-1.131 1.131 0.914 0.914-0.902 0.902c-1.999-1.833-4.607-3.008-7.485-3.195v-2.161h-1.599v2.161c-6.399 0.412-11.462 5.73-11.462 12.234 0 6.772 5.49 12.262 12.262 12.262s12.262-5.489 12.262-12.262c0-3.195-1.222-6.103-3.223-8.285zM16 28.262c-6.173 0-11.196-5.023-11.196-11.196s5.023-11.196 11.196-11.196 11.196 5.022 11.196 11.196c0 6.173-5.023 11.196-11.196 11.196z\" fill=\"#000000\"></path>\n<path d=\"M16.533 15.565v-7.029h-1.066v7.029c-0.62 0.221-1.066 0.806-1.066 1.502s0.447 1.281 1.066 1.502v2.23h1.066v-2.23c0.62-0.221 1.066-0.806 1.066-1.502s-0.447-1.281-1.066-1.502z\" fill=\"#000000\"></path>\n</svg>`"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2327,
						2326,
						2329,
						2325,
						2328,
						2330
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/reporters/html/icons.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3801,
			"name": "\"lib/resolveEnvironments\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/resolveEnvironments.ts",
			"children": [
				{
					"id": 3802,
					"name": "EnvironmentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 3805,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 3806,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 3803,
							"name": "browserName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/resolveEnvironments.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3804,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/resolveEnvironments.ts",
									"line": 52,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3803,
								3804
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 50,
							"character": 35
						}
					]
				},
				{
					"id": 3807,
					"name": "FlatEnvironment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 3810,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 3811,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 3808,
							"name": "browserName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/resolveEnvironments.ts",
									"line": 57,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3809,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/resolveEnvironments.ts",
									"line": 58,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3808,
								3809
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 56,
							"character": 32
						}
					]
				},
				{
					"id": 3847,
					"name": "createPermutations",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3848,
							"name": "createPermutations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Builds permutations of an object by flattening properties holding array\nvalues into a collection of objects representing all combinations of objects\nfor all arrays in the object.",
								"returns": "a flattened collection of sources\n"
							},
							"parameters": [
								{
									"id": 3849,
									"name": "base",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a base set of properties applied to each source"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3850,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 3851,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 3852,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/resolveEnvironments.ts",
													"line": 351,
													"character": 7
												}
											]
										}
									}
								},
								{
									"id": 3853,
									"name": "sources",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "a list of sources to flatten"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3802,
											"name": "EnvironmentOptions"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3807,
									"name": "FlatEnvironment"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 350,
							"character": 27
						}
					]
				},
				{
					"id": 3820,
					"name": "expandPwd",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3821,
							"name": "expandPwd",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Expands {pwd} placeholders in a value. The value is assumed to be a string,\nsimple object, or array of strings or simple objects."
							},
							"typeParameter": [
								{
									"id": 3822,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3823,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 66,
							"character": 18
						}
					]
				},
				{
					"id": 3827,
					"name": "expandVersionRange",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3828,
							"name": "expandVersionRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Expands a range of versions using available environments"
							},
							"parameters": [
								{
									"id": 3829,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3830,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3831,
									"name": "availableVersions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 111,
							"character": 27
						}
					]
				},
				{
					"id": 3858,
					"name": "getVersion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3859,
							"name": "getVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3860,
									"name": "env",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1749,
										"name": "Environment"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 419,
							"character": 19
						}
					]
				},
				{
					"id": 3861,
					"name": "getVersionKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3862,
							"name": "getVersionKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3863,
									"name": "env",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1749,
										"name": "Environment"
									}
								}
							],
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 1749,
									"name": "Environment"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 423,
							"character": 22
						}
					]
				},
				{
					"id": 3839,
					"name": "getVersions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3840,
							"name": "getVersions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of versions from a list of available environments filtered by the\ncurrent environment.",
								"returns": "a list of version numbers from available filtered by the current\nenvironment\n"
							},
							"parameters": [
								{
									"id": 3841,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the environment for which versions should match"
									},
									"type": {
										"type": "reference",
										"id": 3802,
										"name": "EnvironmentOptions"
									}
								},
								{
									"id": 3842,
									"name": "available",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a list of available environments"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 217,
							"character": 20
						}
					]
				},
				{
					"id": 3854,
					"name": "normalizeBrowserNames",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3855,
							"name": "normalizeBrowserNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3856,
									"name": "environments",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3802,
											"name": "EnvironmentOptions"
										}
									}
								},
								{
									"id": 3857,
									"name": "available",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3802,
									"name": "EnvironmentOptions"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 402,
							"character": 30
						}
					]
				},
				{
					"id": 3824,
					"name": "normalizeEnvironment",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3825,
							"name": "normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Ensure environment has both `version` and `browserVersion` properties with\nthe same value."
							},
							"parameters": [
								{
									"id": 3826,
									"name": "env",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1749,
										"name": "Environment"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1742,
								"name": "EnvironmentSpec"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 96,
							"character": 29
						}
					]
				},
				{
					"id": 3812,
					"name": "resolveEnvironments",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3813,
							"name": "resolveEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Resolves a collection of Intern test environments to a list of service\nenvironments",
								"returns": "a list of flattened service environments\n"
							},
							"parameters": [
								{
									"id": 3814,
									"name": "capabilities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "a base set of capabilities for all environments"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3815,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 3816,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3817,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/lib/resolveEnvironments.ts",
													"line": 18,
													"character": 15
												}
											]
										}
									}
								},
								{
									"id": 3818,
									"name": "environments",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "a list of user-requested enviromnents"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3802,
											"name": "EnvironmentOptions"
										}
									}
								},
								{
									"id": 3819,
									"name": "available",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "a list of available environments"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1742,
									"name": "EnvironmentSpec"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 17,
							"character": 43
						}
					]
				},
				{
					"id": 3832,
					"name": "resolveVersionAlias",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3833,
							"name": "resolveVersionAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolves a version alias from a list of available versions.",
								"text": "Assumes availableVersions is sorted in ascending order. Acceptable versions\nare:\n\n* '{number}'\n* 'latest'\n* 'latest-{number}'\n"
							},
							"parameters": [
								{
									"id": 3834,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3835,
									"name": "availableVersions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 139,
							"character": 28
						}
					]
				},
				{
					"id": 3843,
					"name": "resolveVersions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3844,
							"name": "resolveVersions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolves version aliases (e.g. latest, latest - 1) and version ranges (e.g.\n36 .. latest or latest - 3 .. latest) using the environment list returned by\ntunnel#getEnvironments().",
								"returns": "the environment with resolved version aliases\n"
							},
							"parameters": [
								{
									"id": 3845,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an object with an optional version property"
									},
									"type": {
										"type": "reference",
										"id": 3807,
										"name": "FlatEnvironment"
									}
								},
								{
									"id": 3846,
									"name": "available",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "a list of environment available on the target service"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 293,
							"character": 24
						}
					]
				},
				{
					"id": 3836,
					"name": "splitVersions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3837,
							"name": "splitVersions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Splits a version into one or two version strings using the '..' delimiter"
							},
							"parameters": [
								{
									"id": 3838,
									"name": "versionSpec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 196,
							"character": 22
						}
					]
				},
				{
					"id": 3864,
					"name": "updateEnvVersion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3865,
							"name": "updateEnvVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3866,
									"name": "env",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3807,
										"name": "FlatEnvironment"
									}
								},
								{
									"id": 3867,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3868,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3869,
											"name": "[versionKey]",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/core/src/lib/resolveEnvironments.ts",
													"line": 431,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											},
											"defaultValue": "version"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3869
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/resolveEnvironments.ts",
							"line": 427,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3802,
						3807
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3847,
						3820,
						3827,
						3858,
						3861,
						3839,
						3854,
						3824,
						3812,
						3832,
						3843,
						3836,
						3864
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/resolveEnvironments.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 30,
			"name": "\"lib/types\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/lib/types.ts",
			"children": [
				{
					"id": 31,
					"name": "InternError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 36,
							"name": "actual",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 37,
							"name": "expected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 38,
							"name": "lifecycleMethod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 11,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 394,
								"name": "LifecycleMethod"
							}
						},
						{
							"id": 33,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 5,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39,
							"name": "relatedTest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 12,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 178,
								"name": "Test"
							}
						},
						{
							"id": 40,
							"name": "reported",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 35,
							"name": "showDiff",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 8,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 34,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/lib/types.ts",
									"line": 7,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								36,
								37,
								38,
								33,
								32,
								39,
								40,
								35,
								34
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/lib/types.ts",
							"line": 4,
							"character": 28
						}
					]
				},
				{
					"id": 41,
					"name": "RuntimeEnvironment",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/lib/types.ts",
							"line": 16,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "node"
							},
							{
								"type": "stringLiteral",
								"value": "browser"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						31
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						41
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/lib/types.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4611,
			"name": "\"loaders/default\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/loaders/default.ts",
			"sources": [
				{
					"fileName": "packages/core/src/loaders/default.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4612,
			"name": "\"loaders/dojo\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/loaders/dojo.ts",
			"sources": [
				{
					"fileName": "packages/core/src/loaders/dojo.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4613,
			"name": "\"loaders/dojo2\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/loaders/dojo2.ts",
			"sources": [
				{
					"fileName": "packages/core/src/loaders/dojo2.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4614,
			"name": "\"loaders/esm\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/loaders/esm.ts",
			"sources": [
				{
					"fileName": "packages/core/src/loaders/esm.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4615,
			"name": "\"loaders/systemjs\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/loaders/systemjs.ts",
			"sources": [
				{
					"fileName": "packages/core/src/loaders/systemjs.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4616,
			"name": "\"tasks/intern\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "src/tasks/intern.ts",
			"children": [
				{
					"id": 4617,
					"name": "TaskOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 4618,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 4619,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 4621,
							"name": "files",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/grunt@0.4.25/node_modules/@types/grunt/index.d.ts",
									"line": 1027,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4621,
								"name": "ITaskOptions.files"
							}
						},
						{
							"id": 4620,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types/grunt@0.4.25/node_modules/@types/grunt/index.d.ts",
									"line": 1023,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4620,
								"name": "ITaskOptions.options"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4621,
								4620
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/tasks/intern.ts",
							"line": 33,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ITaskOptions"
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 4622,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "packages/core/src/tasks/intern.ts",
										"line": 33,
										"character": 54
									}
								]
							}
						}
					]
				},
				{
					"id": 4623,
					"name": "getConfigAndOptions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4624,
							"name": "getConfigAndOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4625,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4617,
										"name": "TaskOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 4626,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 4627,
													"name": "config",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/core/src/tasks/intern.ts",
															"line": 40,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 1649,
																"name": "Config"
															}
														],
														"name": "Partial"
													}
												},
												{
													"id": 4628,
													"name": "options",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/core/src/tasks/intern.ts",
															"line": 41,
															"character": 9
														}
													],
													"type": {
														"type": "reference",
														"id": 4617,
														"name": "TaskOptions"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														4627,
														4628
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/tasks/intern.ts",
													"line": 39,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/tasks/intern.ts",
							"line": 37,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4617
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4623
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/tasks/intern.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				4606,
				4602,
				1075,
				611,
				4705,
				1,
				1748,
				1873,
				2715,
				3492,
				269,
				177,
				4719,
				2288,
				3440,
				4667,
				4629,
				395,
				1648,
				1209,
				42,
				167,
				59,
				2544,
				1219,
				3870,
				574,
				1172,
				434,
				481,
				3486,
				3475,
				3468,
				3482,
				3478,
				3472,
				1815,
				3800,
				1766,
				1542,
				2940,
				2501,
				2878,
				2446,
				2331,
				2993,
				3090,
				3046,
				3159,
				3256,
				1489,
				3563,
				3683,
				3740,
				3203,
				2324,
				3801,
				30,
				4611,
				4612,
				4613,
				4614,
				4615,
				4616
			]
		}
	]
}